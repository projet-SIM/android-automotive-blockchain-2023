// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicle_data.proto

public final class VehicleDataOuterClass {
  private VehicleDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VehicleDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VehicleData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne> 
        getCategoryOneList();
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    VehicleDataOuterClass.VehicleData.CategoryOne getCategoryOne(int index);
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    int getCategoryOneCount();
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder> 
        getCategoryOneOrBuilderList();
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder getCategoryOneOrBuilder(
        int index);

    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     * @return Whether the categoryTwo field is set.
     */
    boolean hasCategoryTwo();
    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     * @return The categoryTwo.
     */
    VehicleDataOuterClass.VehicleData.CategoryTwo getCategoryTwo();
    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     */
    VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder getCategoryTwoOrBuilder();
  }
  /**
   * Protobuf type {@code VehicleData}
   */
  public static final class VehicleData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:VehicleData)
      VehicleDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VehicleData.newBuilder() to construct.
    private VehicleData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleData() {
      categoryOne_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VehicleData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VehicleData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                categoryOne_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryOne>();
                mutable_bitField0_ |= 0x00000001;
              }
              categoryOne_.add(
                  input.readMessage(VehicleDataOuterClass.VehicleData.CategoryOne.parser(), extensionRegistry));
              break;
            }
            case 18: {
              VehicleDataOuterClass.VehicleData.CategoryTwo.Builder subBuilder = null;
              if (categoryTwo_ != null) {
                subBuilder = categoryTwo_.toBuilder();
              }
              categoryTwo_ = input.readMessage(VehicleDataOuterClass.VehicleData.CategoryTwo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(categoryTwo_);
                categoryTwo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          categoryOne_ = java.util.Collections.unmodifiableList(categoryOne_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return VehicleDataOuterClass.internal_static_VehicleData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return VehicleDataOuterClass.internal_static_VehicleData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VehicleDataOuterClass.VehicleData.class, VehicleDataOuterClass.VehicleData.Builder.class);
    }

    public interface CategoryOneFieldsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:VehicleData.CategoryOneFields)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 ENV_OUTSIDE_TEMPERATURE = 1;</code>
       * @return The eNVOUTSIDETEMPERATURE.
       */
      int getENVOUTSIDETEMPERATURE();

      /**
       * <code>int32 ENGINE_RPM = 2;</code>
       * @return The eNGINERPM.
       */
      int getENGINERPM();

      /**
       * <code>int32 FUEL_LEVEL = 3;</code>
       * @return The fUELLEVEL.
       */
      int getFUELLEVEL();
    }
    /**
     * Protobuf type {@code VehicleData.CategoryOneFields}
     */
    public static final class CategoryOneFields extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:VehicleData.CategoryOneFields)
        CategoryOneFieldsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CategoryOneFields.newBuilder() to construct.
      private CategoryOneFields(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CategoryOneFields() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CategoryOneFields();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CategoryOneFields(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                eNVOUTSIDETEMPERATURE_ = input.readInt32();
                break;
              }
              case 16: {

                eNGINERPM_ = input.readInt32();
                break;
              }
              case 24: {

                fUELLEVEL_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryOneFields_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryOneFields_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.VehicleData.CategoryOneFields.class, VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder.class);
      }

      public static final int ENV_OUTSIDE_TEMPERATURE_FIELD_NUMBER = 1;
      private int eNVOUTSIDETEMPERATURE_;
      /**
       * <code>int32 ENV_OUTSIDE_TEMPERATURE = 1;</code>
       * @return The eNVOUTSIDETEMPERATURE.
       */
      @java.lang.Override
      public int getENVOUTSIDETEMPERATURE() {
        return eNVOUTSIDETEMPERATURE_;
      }

      public static final int ENGINE_RPM_FIELD_NUMBER = 2;
      private int eNGINERPM_;
      /**
       * <code>int32 ENGINE_RPM = 2;</code>
       * @return The eNGINERPM.
       */
      @java.lang.Override
      public int getENGINERPM() {
        return eNGINERPM_;
      }

      public static final int FUEL_LEVEL_FIELD_NUMBER = 3;
      private int fUELLEVEL_;
      /**
       * <code>int32 FUEL_LEVEL = 3;</code>
       * @return The fUELLEVEL.
       */
      @java.lang.Override
      public int getFUELLEVEL() {
        return fUELLEVEL_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (eNVOUTSIDETEMPERATURE_ != 0) {
          output.writeInt32(1, eNVOUTSIDETEMPERATURE_);
        }
        if (eNGINERPM_ != 0) {
          output.writeInt32(2, eNGINERPM_);
        }
        if (fUELLEVEL_ != 0) {
          output.writeInt32(3, fUELLEVEL_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (eNVOUTSIDETEMPERATURE_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, eNVOUTSIDETEMPERATURE_);
        }
        if (eNGINERPM_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, eNGINERPM_);
        }
        if (fUELLEVEL_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, fUELLEVEL_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof VehicleDataOuterClass.VehicleData.CategoryOneFields)) {
          return super.equals(obj);
        }
        VehicleDataOuterClass.VehicleData.CategoryOneFields other = (VehicleDataOuterClass.VehicleData.CategoryOneFields) obj;

        if (getENVOUTSIDETEMPERATURE()
            != other.getENVOUTSIDETEMPERATURE()) return false;
        if (getENGINERPM()
            != other.getENGINERPM()) return false;
        if (getFUELLEVEL()
            != other.getFUELLEVEL()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ENV_OUTSIDE_TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getENVOUTSIDETEMPERATURE();
        hash = (37 * hash) + ENGINE_RPM_FIELD_NUMBER;
        hash = (53 * hash) + getENGINERPM();
        hash = (37 * hash) + FUEL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getFUELLEVEL();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOneFields parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(VehicleDataOuterClass.VehicleData.CategoryOneFields prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code VehicleData.CategoryOneFields}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:VehicleData.CategoryOneFields)
          VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOneFields_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOneFields_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  VehicleDataOuterClass.VehicleData.CategoryOneFields.class, VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder.class);
        }

        // Construct using VehicleDataOuterClass.VehicleData.CategoryOneFields.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          eNVOUTSIDETEMPERATURE_ = 0;

          eNGINERPM_ = 0;

          fUELLEVEL_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOneFields_descriptor;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOneFields getDefaultInstanceForType() {
          return VehicleDataOuterClass.VehicleData.CategoryOneFields.getDefaultInstance();
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOneFields build() {
          VehicleDataOuterClass.VehicleData.CategoryOneFields result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOneFields buildPartial() {
          VehicleDataOuterClass.VehicleData.CategoryOneFields result = new VehicleDataOuterClass.VehicleData.CategoryOneFields(this);
          result.eNVOUTSIDETEMPERATURE_ = eNVOUTSIDETEMPERATURE_;
          result.eNGINERPM_ = eNGINERPM_;
          result.fUELLEVEL_ = fUELLEVEL_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof VehicleDataOuterClass.VehicleData.CategoryOneFields) {
            return mergeFrom((VehicleDataOuterClass.VehicleData.CategoryOneFields)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(VehicleDataOuterClass.VehicleData.CategoryOneFields other) {
          if (other == VehicleDataOuterClass.VehicleData.CategoryOneFields.getDefaultInstance()) return this;
          if (other.getENVOUTSIDETEMPERATURE() != 0) {
            setENVOUTSIDETEMPERATURE(other.getENVOUTSIDETEMPERATURE());
          }
          if (other.getENGINERPM() != 0) {
            setENGINERPM(other.getENGINERPM());
          }
          if (other.getFUELLEVEL() != 0) {
            setFUELLEVEL(other.getFUELLEVEL());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          VehicleDataOuterClass.VehicleData.CategoryOneFields parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (VehicleDataOuterClass.VehicleData.CategoryOneFields) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int eNVOUTSIDETEMPERATURE_ ;
        /**
         * <code>int32 ENV_OUTSIDE_TEMPERATURE = 1;</code>
         * @return The eNVOUTSIDETEMPERATURE.
         */
        @java.lang.Override
        public int getENVOUTSIDETEMPERATURE() {
          return eNVOUTSIDETEMPERATURE_;
        }
        /**
         * <code>int32 ENV_OUTSIDE_TEMPERATURE = 1;</code>
         * @param value The eNVOUTSIDETEMPERATURE to set.
         * @return This builder for chaining.
         */
        public Builder setENVOUTSIDETEMPERATURE(int value) {
          
          eNVOUTSIDETEMPERATURE_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 ENV_OUTSIDE_TEMPERATURE = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearENVOUTSIDETEMPERATURE() {
          
          eNVOUTSIDETEMPERATURE_ = 0;
          onChanged();
          return this;
        }

        private int eNGINERPM_ ;
        /**
         * <code>int32 ENGINE_RPM = 2;</code>
         * @return The eNGINERPM.
         */
        @java.lang.Override
        public int getENGINERPM() {
          return eNGINERPM_;
        }
        /**
         * <code>int32 ENGINE_RPM = 2;</code>
         * @param value The eNGINERPM to set.
         * @return This builder for chaining.
         */
        public Builder setENGINERPM(int value) {
          
          eNGINERPM_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 ENGINE_RPM = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearENGINERPM() {
          
          eNGINERPM_ = 0;
          onChanged();
          return this;
        }

        private int fUELLEVEL_ ;
        /**
         * <code>int32 FUEL_LEVEL = 3;</code>
         * @return The fUELLEVEL.
         */
        @java.lang.Override
        public int getFUELLEVEL() {
          return fUELLEVEL_;
        }
        /**
         * <code>int32 FUEL_LEVEL = 3;</code>
         * @param value The fUELLEVEL to set.
         * @return This builder for chaining.
         */
        public Builder setFUELLEVEL(int value) {
          
          fUELLEVEL_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 FUEL_LEVEL = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFUELLEVEL() {
          
          fUELLEVEL_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:VehicleData.CategoryOneFields)
      }

      // @@protoc_insertion_point(class_scope:VehicleData.CategoryOneFields)
      private static final VehicleDataOuterClass.VehicleData.CategoryOneFields DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new VehicleDataOuterClass.VehicleData.CategoryOneFields();
      }

      public static VehicleDataOuterClass.VehicleData.CategoryOneFields getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CategoryOneFields>
          PARSER = new com.google.protobuf.AbstractParser<CategoryOneFields>() {
        @java.lang.Override
        public CategoryOneFields parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoryOneFields(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CategoryOneFields> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CategoryOneFields> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryOneFields getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CategoryTwoFieldOrBuilder extends
        // @@protoc_insertion_point(interface_extends:VehicleData.CategoryTwoField)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 timestamp = 1;</code>
       * @return The timestamp.
       */
      long getTimestamp();

      /**
       * <code>int32 value = 2;</code>
       * @return The value.
       */
      int getValue();
    }
    /**
     * Protobuf type {@code VehicleData.CategoryTwoField}
     */
    public static final class CategoryTwoField extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:VehicleData.CategoryTwoField)
        CategoryTwoFieldOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CategoryTwoField.newBuilder() to construct.
      private CategoryTwoField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CategoryTwoField() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CategoryTwoField();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CategoryTwoField(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                timestamp_ = input.readInt64();
                break;
              }
              case 16: {

                value_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwoField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwoField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.VehicleData.CategoryTwoField.class, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder.class);
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private long timestamp_;
      /**
       * <code>int64 timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private int value_;
      /**
       * <code>int32 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (timestamp_ != 0L) {
          output.writeInt64(1, timestamp_);
        }
        if (value_ != 0) {
          output.writeInt32(2, value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (timestamp_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestamp_);
        }
        if (value_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof VehicleDataOuterClass.VehicleData.CategoryTwoField)) {
          return super.equals(obj);
        }
        VehicleDataOuterClass.VehicleData.CategoryTwoField other = (VehicleDataOuterClass.VehicleData.CategoryTwoField) obj;

        if (getTimestamp()
            != other.getTimestamp()) return false;
        if (getValue()
            != other.getValue()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwoField parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(VehicleDataOuterClass.VehicleData.CategoryTwoField prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code VehicleData.CategoryTwoField}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:VehicleData.CategoryTwoField)
          VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwoField_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwoField_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  VehicleDataOuterClass.VehicleData.CategoryTwoField.class, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder.class);
        }

        // Construct using VehicleDataOuterClass.VehicleData.CategoryTwoField.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          timestamp_ = 0L;

          value_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwoField_descriptor;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwoField getDefaultInstanceForType() {
          return VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance();
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwoField build() {
          VehicleDataOuterClass.VehicleData.CategoryTwoField result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwoField buildPartial() {
          VehicleDataOuterClass.VehicleData.CategoryTwoField result = new VehicleDataOuterClass.VehicleData.CategoryTwoField(this);
          result.timestamp_ = timestamp_;
          result.value_ = value_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof VehicleDataOuterClass.VehicleData.CategoryTwoField) {
            return mergeFrom((VehicleDataOuterClass.VehicleData.CategoryTwoField)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(VehicleDataOuterClass.VehicleData.CategoryTwoField other) {
          if (other == VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance()) return this;
          if (other.getTimestamp() != 0L) {
            setTimestamp(other.getTimestamp());
          }
          if (other.getValue() != 0) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          VehicleDataOuterClass.VehicleData.CategoryTwoField parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (VehicleDataOuterClass.VehicleData.CategoryTwoField) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long timestamp_ ;
        /**
         * <code>int64 timestamp = 1;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>int64 timestamp = 1;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {
          
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 timestamp = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private int value_ ;
        /**
         * <code>int32 value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public int getValue() {
          return value_;
        }
        /**
         * <code>int32 value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(int value) {
          
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          
          value_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:VehicleData.CategoryTwoField)
      }

      // @@protoc_insertion_point(class_scope:VehicleData.CategoryTwoField)
      private static final VehicleDataOuterClass.VehicleData.CategoryTwoField DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new VehicleDataOuterClass.VehicleData.CategoryTwoField();
      }

      public static VehicleDataOuterClass.VehicleData.CategoryTwoField getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CategoryTwoField>
          PARSER = new com.google.protobuf.AbstractParser<CategoryTwoField>() {
        @java.lang.Override
        public CategoryTwoField parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoryTwoField(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CategoryTwoField> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CategoryTwoField> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwoField getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CategoryOneOrBuilder extends
        // @@protoc_insertion_point(interface_extends:VehicleData.CategoryOne)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Category One fields
       * The first category of sensors is
       * periodically recorded every seconds (e.g. speed, acceleration,
       * GPS position). Only the last ten records are sent when an
       * accident occurs.
       * </pre>
       *
       * <code>int64 timestamp = 1;</code>
       * @return The timestamp.
       */
      long getTimestamp();

      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       * @return Whether the fields field is set.
       */
      boolean hasFields();
      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       * @return The fields.
       */
      VehicleDataOuterClass.VehicleData.CategoryOneFields getFields();
      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       */
      VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder getFieldsOrBuilder();
    }
    /**
     * Protobuf type {@code VehicleData.CategoryOne}
     */
    public static final class CategoryOne extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:VehicleData.CategoryOne)
        CategoryOneOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CategoryOne.newBuilder() to construct.
      private CategoryOne(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CategoryOne() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CategoryOne();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CategoryOne(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                timestamp_ = input.readInt64();
                break;
              }
              case 18: {
                VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder subBuilder = null;
                if (fields_ != null) {
                  subBuilder = fields_.toBuilder();
                }
                fields_ = input.readMessage(VehicleDataOuterClass.VehicleData.CategoryOneFields.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fields_);
                  fields_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryOne_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryOne_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.VehicleData.CategoryOne.class, VehicleDataOuterClass.VehicleData.CategoryOne.Builder.class);
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private long timestamp_;
      /**
       * <pre>
       * Category One fields
       * The first category of sensors is
       * periodically recorded every seconds (e.g. speed, acceleration,
       * GPS position). Only the last ten records are sent when an
       * accident occurs.
       * </pre>
       *
       * <code>int64 timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int FIELDS_FIELD_NUMBER = 2;
      private VehicleDataOuterClass.VehicleData.CategoryOneFields fields_;
      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       * @return Whether the fields field is set.
       */
      @java.lang.Override
      public boolean hasFields() {
        return fields_ != null;
      }
      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       * @return The fields.
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryOneFields getFields() {
        return fields_ == null ? VehicleDataOuterClass.VehicleData.CategoryOneFields.getDefaultInstance() : fields_;
      }
      /**
       * <code>.VehicleData.CategoryOneFields fields = 2;</code>
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder getFieldsOrBuilder() {
        return getFields();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (timestamp_ != 0L) {
          output.writeInt64(1, timestamp_);
        }
        if (fields_ != null) {
          output.writeMessage(2, getFields());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (timestamp_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestamp_);
        }
        if (fields_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFields());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof VehicleDataOuterClass.VehicleData.CategoryOne)) {
          return super.equals(obj);
        }
        VehicleDataOuterClass.VehicleData.CategoryOne other = (VehicleDataOuterClass.VehicleData.CategoryOne) obj;

        if (getTimestamp()
            != other.getTimestamp()) return false;
        if (hasFields() != other.hasFields()) return false;
        if (hasFields()) {
          if (!getFields()
              .equals(other.getFields())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
        if (hasFields()) {
          hash = (37 * hash) + FIELDS_FIELD_NUMBER;
          hash = (53 * hash) + getFields().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryOne parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(VehicleDataOuterClass.VehicleData.CategoryOne prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code VehicleData.CategoryOne}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:VehicleData.CategoryOne)
          VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOne_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOne_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  VehicleDataOuterClass.VehicleData.CategoryOne.class, VehicleDataOuterClass.VehicleData.CategoryOne.Builder.class);
        }

        // Construct using VehicleDataOuterClass.VehicleData.CategoryOne.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          timestamp_ = 0L;

          if (fieldsBuilder_ == null) {
            fields_ = null;
          } else {
            fields_ = null;
            fieldsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryOne_descriptor;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOne getDefaultInstanceForType() {
          return VehicleDataOuterClass.VehicleData.CategoryOne.getDefaultInstance();
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOne build() {
          VehicleDataOuterClass.VehicleData.CategoryOne result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryOne buildPartial() {
          VehicleDataOuterClass.VehicleData.CategoryOne result = new VehicleDataOuterClass.VehicleData.CategoryOne(this);
          result.timestamp_ = timestamp_;
          if (fieldsBuilder_ == null) {
            result.fields_ = fields_;
          } else {
            result.fields_ = fieldsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof VehicleDataOuterClass.VehicleData.CategoryOne) {
            return mergeFrom((VehicleDataOuterClass.VehicleData.CategoryOne)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(VehicleDataOuterClass.VehicleData.CategoryOne other) {
          if (other == VehicleDataOuterClass.VehicleData.CategoryOne.getDefaultInstance()) return this;
          if (other.getTimestamp() != 0L) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasFields()) {
            mergeFields(other.getFields());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          VehicleDataOuterClass.VehicleData.CategoryOne parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (VehicleDataOuterClass.VehicleData.CategoryOne) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long timestamp_ ;
        /**
         * <pre>
         * Category One fields
         * The first category of sensors is
         * periodically recorded every seconds (e.g. speed, acceleration,
         * GPS position). Only the last ten records are sent when an
         * accident occurs.
         * </pre>
         *
         * <code>int64 timestamp = 1;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <pre>
         * Category One fields
         * The first category of sensors is
         * periodically recorded every seconds (e.g. speed, acceleration,
         * GPS position). Only the last ten records are sent when an
         * accident occurs.
         * </pre>
         *
         * <code>int64 timestamp = 1;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {
          
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Category One fields
         * The first category of sensors is
         * periodically recorded every seconds (e.g. speed, acceleration,
         * GPS position). Only the last ten records are sent when an
         * accident occurs.
         * </pre>
         *
         * <code>int64 timestamp = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private VehicleDataOuterClass.VehicleData.CategoryOneFields fields_;
        private com.google.protobuf.SingleFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryOneFields, VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder, VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder> fieldsBuilder_;
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         * @return Whether the fields field is set.
         */
        public boolean hasFields() {
          return fieldsBuilder_ != null || fields_ != null;
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         * @return The fields.
         */
        public VehicleDataOuterClass.VehicleData.CategoryOneFields getFields() {
          if (fieldsBuilder_ == null) {
            return fields_ == null ? VehicleDataOuterClass.VehicleData.CategoryOneFields.getDefaultInstance() : fields_;
          } else {
            return fieldsBuilder_.getMessage();
          }
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public Builder setFields(VehicleDataOuterClass.VehicleData.CategoryOneFields value) {
          if (fieldsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fields_ = value;
            onChanged();
          } else {
            fieldsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public Builder setFields(
            VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder builderForValue) {
          if (fieldsBuilder_ == null) {
            fields_ = builderForValue.build();
            onChanged();
          } else {
            fieldsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public Builder mergeFields(VehicleDataOuterClass.VehicleData.CategoryOneFields value) {
          if (fieldsBuilder_ == null) {
            if (fields_ != null) {
              fields_ =
                VehicleDataOuterClass.VehicleData.CategoryOneFields.newBuilder(fields_).mergeFrom(value).buildPartial();
            } else {
              fields_ = value;
            }
            onChanged();
          } else {
            fieldsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public Builder clearFields() {
          if (fieldsBuilder_ == null) {
            fields_ = null;
            onChanged();
          } else {
            fields_ = null;
            fieldsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder getFieldsBuilder() {
          
          onChanged();
          return getFieldsFieldBuilder().getBuilder();
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder getFieldsOrBuilder() {
          if (fieldsBuilder_ != null) {
            return fieldsBuilder_.getMessageOrBuilder();
          } else {
            return fields_ == null ?
                VehicleDataOuterClass.VehicleData.CategoryOneFields.getDefaultInstance() : fields_;
          }
        }
        /**
         * <code>.VehicleData.CategoryOneFields fields = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryOneFields, VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder, VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder> 
            getFieldsFieldBuilder() {
          if (fieldsBuilder_ == null) {
            fieldsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                VehicleDataOuterClass.VehicleData.CategoryOneFields, VehicleDataOuterClass.VehicleData.CategoryOneFields.Builder, VehicleDataOuterClass.VehicleData.CategoryOneFieldsOrBuilder>(
                    getFields(),
                    getParentForChildren(),
                    isClean());
            fields_ = null;
          }
          return fieldsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:VehicleData.CategoryOne)
      }

      // @@protoc_insertion_point(class_scope:VehicleData.CategoryOne)
      private static final VehicleDataOuterClass.VehicleData.CategoryOne DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new VehicleDataOuterClass.VehicleData.CategoryOne();
      }

      public static VehicleDataOuterClass.VehicleData.CategoryOne getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CategoryOne>
          PARSER = new com.google.protobuf.AbstractParser<CategoryOne>() {
        @java.lang.Override
        public CategoryOne parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoryOne(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CategoryOne> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CategoryOne> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryOne getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CategoryTwoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:VehicleData.CategoryTwo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> 
          getIGNITIONSTATEList();
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      VehicleDataOuterClass.VehicleData.CategoryTwoField getIGNITIONSTATE(int index);
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      int getIGNITIONSTATECount();
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
          getIGNITIONSTATEOrBuilderList();
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getIGNITIONSTATEOrBuilder(
          int index);

      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> 
          getHEADLIGHTSSTATEList();
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      VehicleDataOuterClass.VehicleData.CategoryTwoField getHEADLIGHTSSTATE(int index);
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      int getHEADLIGHTSSTATECount();
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
          getHEADLIGHTSSTATEOrBuilderList();
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getHEADLIGHTSSTATEOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code VehicleData.CategoryTwo}
     */
    public static final class CategoryTwo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:VehicleData.CategoryTwo)
        CategoryTwoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CategoryTwo.newBuilder() to construct.
      private CategoryTwo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CategoryTwo() {
        iGNITIONSTATE_ = java.util.Collections.emptyList();
        hEADLIGHTSSTATE_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CategoryTwo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CategoryTwo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  iGNITIONSTATE_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryTwoField>();
                  mutable_bitField0_ |= 0x00000001;
                }
                iGNITIONSTATE_.add(
                    input.readMessage(VehicleDataOuterClass.VehicleData.CategoryTwoField.parser(), extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  hEADLIGHTSSTATE_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryTwoField>();
                  mutable_bitField0_ |= 0x00000002;
                }
                hEADLIGHTSSTATE_.add(
                    input.readMessage(VehicleDataOuterClass.VehicleData.CategoryTwoField.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            iGNITIONSTATE_ = java.util.Collections.unmodifiableList(iGNITIONSTATE_);
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            hEADLIGHTSSTATE_ = java.util.Collections.unmodifiableList(hEADLIGHTSSTATE_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.VehicleData.CategoryTwo.class, VehicleDataOuterClass.VehicleData.CategoryTwo.Builder.class);
      }

      public static final int IGNITION_STATE_FIELD_NUMBER = 1;
      private java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> iGNITIONSTATE_;
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      @java.lang.Override
      public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> getIGNITIONSTATEList() {
        return iGNITIONSTATE_;
      }
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
          getIGNITIONSTATEOrBuilderList() {
        return iGNITIONSTATE_;
      }
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      @java.lang.Override
      public int getIGNITIONSTATECount() {
        return iGNITIONSTATE_.size();
      }
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwoField getIGNITIONSTATE(int index) {
        return iGNITIONSTATE_.get(index);
      }
      /**
       * <pre>
       * Category Two fields
       * The second category of sensors is recorded
       * according to the occurrence of events (e.g. we send the last
       * 10 events of the engine state, associated with its timestamp).
       * All timestamps are standard UNIX 32-bit numbers.
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getIGNITIONSTATEOrBuilder(
          int index) {
        return iGNITIONSTATE_.get(index);
      }

      public static final int HEADLIGHTS_STATE_FIELD_NUMBER = 2;
      private java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> hEADLIGHTSSTATE_;
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      @java.lang.Override
      public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> getHEADLIGHTSSTATEList() {
        return hEADLIGHTSSTATE_;
      }
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
          getHEADLIGHTSSTATEOrBuilderList() {
        return hEADLIGHTSSTATE_;
      }
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      @java.lang.Override
      public int getHEADLIGHTSSTATECount() {
        return hEADLIGHTSSTATE_.size();
      }
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwoField getHEADLIGHTSSTATE(int index) {
        return hEADLIGHTSSTATE_.get(index);
      }
      /**
       * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
       */
      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getHEADLIGHTSSTATEOrBuilder(
          int index) {
        return hEADLIGHTSSTATE_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < iGNITIONSTATE_.size(); i++) {
          output.writeMessage(1, iGNITIONSTATE_.get(i));
        }
        for (int i = 0; i < hEADLIGHTSSTATE_.size(); i++) {
          output.writeMessage(2, hEADLIGHTSSTATE_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < iGNITIONSTATE_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, iGNITIONSTATE_.get(i));
        }
        for (int i = 0; i < hEADLIGHTSSTATE_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, hEADLIGHTSSTATE_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof VehicleDataOuterClass.VehicleData.CategoryTwo)) {
          return super.equals(obj);
        }
        VehicleDataOuterClass.VehicleData.CategoryTwo other = (VehicleDataOuterClass.VehicleData.CategoryTwo) obj;

        if (!getIGNITIONSTATEList()
            .equals(other.getIGNITIONSTATEList())) return false;
        if (!getHEADLIGHTSSTATEList()
            .equals(other.getHEADLIGHTSSTATEList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getIGNITIONSTATECount() > 0) {
          hash = (37 * hash) + IGNITION_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getIGNITIONSTATEList().hashCode();
        }
        if (getHEADLIGHTSSTATECount() > 0) {
          hash = (37 * hash) + HEADLIGHTS_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getHEADLIGHTSSTATEList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static VehicleDataOuterClass.VehicleData.CategoryTwo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(VehicleDataOuterClass.VehicleData.CategoryTwo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code VehicleData.CategoryTwo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:VehicleData.CategoryTwo)
          VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  VehicleDataOuterClass.VehicleData.CategoryTwo.class, VehicleDataOuterClass.VehicleData.CategoryTwo.Builder.class);
        }

        // Construct using VehicleDataOuterClass.VehicleData.CategoryTwo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getIGNITIONSTATEFieldBuilder();
            getHEADLIGHTSSTATEFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (iGNITIONSTATEBuilder_ == null) {
            iGNITIONSTATE_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            iGNITIONSTATEBuilder_.clear();
          }
          if (hEADLIGHTSSTATEBuilder_ == null) {
            hEADLIGHTSSTATE_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            hEADLIGHTSSTATEBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return VehicleDataOuterClass.internal_static_VehicleData_CategoryTwo_descriptor;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwo getDefaultInstanceForType() {
          return VehicleDataOuterClass.VehicleData.CategoryTwo.getDefaultInstance();
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwo build() {
          VehicleDataOuterClass.VehicleData.CategoryTwo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public VehicleDataOuterClass.VehicleData.CategoryTwo buildPartial() {
          VehicleDataOuterClass.VehicleData.CategoryTwo result = new VehicleDataOuterClass.VehicleData.CategoryTwo(this);
          int from_bitField0_ = bitField0_;
          if (iGNITIONSTATEBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              iGNITIONSTATE_ = java.util.Collections.unmodifiableList(iGNITIONSTATE_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.iGNITIONSTATE_ = iGNITIONSTATE_;
          } else {
            result.iGNITIONSTATE_ = iGNITIONSTATEBuilder_.build();
          }
          if (hEADLIGHTSSTATEBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              hEADLIGHTSSTATE_ = java.util.Collections.unmodifiableList(hEADLIGHTSSTATE_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.hEADLIGHTSSTATE_ = hEADLIGHTSSTATE_;
          } else {
            result.hEADLIGHTSSTATE_ = hEADLIGHTSSTATEBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof VehicleDataOuterClass.VehicleData.CategoryTwo) {
            return mergeFrom((VehicleDataOuterClass.VehicleData.CategoryTwo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(VehicleDataOuterClass.VehicleData.CategoryTwo other) {
          if (other == VehicleDataOuterClass.VehicleData.CategoryTwo.getDefaultInstance()) return this;
          if (iGNITIONSTATEBuilder_ == null) {
            if (!other.iGNITIONSTATE_.isEmpty()) {
              if (iGNITIONSTATE_.isEmpty()) {
                iGNITIONSTATE_ = other.iGNITIONSTATE_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureIGNITIONSTATEIsMutable();
                iGNITIONSTATE_.addAll(other.iGNITIONSTATE_);
              }
              onChanged();
            }
          } else {
            if (!other.iGNITIONSTATE_.isEmpty()) {
              if (iGNITIONSTATEBuilder_.isEmpty()) {
                iGNITIONSTATEBuilder_.dispose();
                iGNITIONSTATEBuilder_ = null;
                iGNITIONSTATE_ = other.iGNITIONSTATE_;
                bitField0_ = (bitField0_ & ~0x00000001);
                iGNITIONSTATEBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getIGNITIONSTATEFieldBuilder() : null;
              } else {
                iGNITIONSTATEBuilder_.addAllMessages(other.iGNITIONSTATE_);
              }
            }
          }
          if (hEADLIGHTSSTATEBuilder_ == null) {
            if (!other.hEADLIGHTSSTATE_.isEmpty()) {
              if (hEADLIGHTSSTATE_.isEmpty()) {
                hEADLIGHTSSTATE_ = other.hEADLIGHTSSTATE_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureHEADLIGHTSSTATEIsMutable();
                hEADLIGHTSSTATE_.addAll(other.hEADLIGHTSSTATE_);
              }
              onChanged();
            }
          } else {
            if (!other.hEADLIGHTSSTATE_.isEmpty()) {
              if (hEADLIGHTSSTATEBuilder_.isEmpty()) {
                hEADLIGHTSSTATEBuilder_.dispose();
                hEADLIGHTSSTATEBuilder_ = null;
                hEADLIGHTSSTATE_ = other.hEADLIGHTSSTATE_;
                bitField0_ = (bitField0_ & ~0x00000002);
                hEADLIGHTSSTATEBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getHEADLIGHTSSTATEFieldBuilder() : null;
              } else {
                hEADLIGHTSSTATEBuilder_.addAllMessages(other.hEADLIGHTSSTATE_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          VehicleDataOuterClass.VehicleData.CategoryTwo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (VehicleDataOuterClass.VehicleData.CategoryTwo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> iGNITIONSTATE_ =
          java.util.Collections.emptyList();
        private void ensureIGNITIONSTATEIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            iGNITIONSTATE_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryTwoField>(iGNITIONSTATE_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> iGNITIONSTATEBuilder_;

        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> getIGNITIONSTATEList() {
          if (iGNITIONSTATEBuilder_ == null) {
            return java.util.Collections.unmodifiableList(iGNITIONSTATE_);
          } else {
            return iGNITIONSTATEBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public int getIGNITIONSTATECount() {
          if (iGNITIONSTATEBuilder_ == null) {
            return iGNITIONSTATE_.size();
          } else {
            return iGNITIONSTATEBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField getIGNITIONSTATE(int index) {
          if (iGNITIONSTATEBuilder_ == null) {
            return iGNITIONSTATE_.get(index);
          } else {
            return iGNITIONSTATEBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder setIGNITIONSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (iGNITIONSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.set(index, value);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder setIGNITIONSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (iGNITIONSTATEBuilder_ == null) {
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.set(index, builderForValue.build());
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder addIGNITIONSTATE(VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (iGNITIONSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.add(value);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder addIGNITIONSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (iGNITIONSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.add(index, value);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder addIGNITIONSTATE(
            VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (iGNITIONSTATEBuilder_ == null) {
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.add(builderForValue.build());
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder addIGNITIONSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (iGNITIONSTATEBuilder_ == null) {
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.add(index, builderForValue.build());
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder addAllIGNITIONSTATE(
            java.lang.Iterable<? extends VehicleDataOuterClass.VehicleData.CategoryTwoField> values) {
          if (iGNITIONSTATEBuilder_ == null) {
            ensureIGNITIONSTATEIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, iGNITIONSTATE_);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder clearIGNITIONSTATE() {
          if (iGNITIONSTATEBuilder_ == null) {
            iGNITIONSTATE_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public Builder removeIGNITIONSTATE(int index) {
          if (iGNITIONSTATEBuilder_ == null) {
            ensureIGNITIONSTATEIsMutable();
            iGNITIONSTATE_.remove(index);
            onChanged();
          } else {
            iGNITIONSTATEBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder getIGNITIONSTATEBuilder(
            int index) {
          return getIGNITIONSTATEFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getIGNITIONSTATEOrBuilder(
            int index) {
          if (iGNITIONSTATEBuilder_ == null) {
            return iGNITIONSTATE_.get(index);  } else {
            return iGNITIONSTATEBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
             getIGNITIONSTATEOrBuilderList() {
          if (iGNITIONSTATEBuilder_ != null) {
            return iGNITIONSTATEBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(iGNITIONSTATE_);
          }
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder addIGNITIONSTATEBuilder() {
          return getIGNITIONSTATEFieldBuilder().addBuilder(
              VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance());
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder addIGNITIONSTATEBuilder(
            int index) {
          return getIGNITIONSTATEFieldBuilder().addBuilder(
              index, VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance());
        }
        /**
         * <pre>
         * Category Two fields
         * The second category of sensors is recorded
         * according to the occurrence of events (e.g. we send the last
         * 10 events of the engine state, associated with its timestamp).
         * All timestamps are standard UNIX 32-bit numbers.
         * </pre>
         *
         * <code>repeated .VehicleData.CategoryTwoField IGNITION_STATE = 1;</code>
         */
        public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder> 
             getIGNITIONSTATEBuilderList() {
          return getIGNITIONSTATEFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
            getIGNITIONSTATEFieldBuilder() {
          if (iGNITIONSTATEBuilder_ == null) {
            iGNITIONSTATEBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder>(
                    iGNITIONSTATE_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            iGNITIONSTATE_ = null;
          }
          return iGNITIONSTATEBuilder_;
        }

        private java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> hEADLIGHTSSTATE_ =
          java.util.Collections.emptyList();
        private void ensureHEADLIGHTSSTATEIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            hEADLIGHTSSTATE_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryTwoField>(hEADLIGHTSSTATE_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> hEADLIGHTSSTATEBuilder_;

        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField> getHEADLIGHTSSTATEList() {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            return java.util.Collections.unmodifiableList(hEADLIGHTSSTATE_);
          } else {
            return hEADLIGHTSSTATEBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public int getHEADLIGHTSSTATECount() {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            return hEADLIGHTSSTATE_.size();
          } else {
            return hEADLIGHTSSTATEBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField getHEADLIGHTSSTATE(int index) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            return hEADLIGHTSSTATE_.get(index);
          } else {
            return hEADLIGHTSSTATEBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder setHEADLIGHTSSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.set(index, value);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder setHEADLIGHTSSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.set(index, builderForValue.build());
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder addHEADLIGHTSSTATE(VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.add(value);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder addHEADLIGHTSSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField value) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.add(index, value);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder addHEADLIGHTSSTATE(
            VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.add(builderForValue.build());
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder addHEADLIGHTSSTATE(
            int index, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder builderForValue) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.add(index, builderForValue.build());
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder addAllHEADLIGHTSSTATE(
            java.lang.Iterable<? extends VehicleDataOuterClass.VehicleData.CategoryTwoField> values) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            ensureHEADLIGHTSSTATEIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, hEADLIGHTSSTATE_);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder clearHEADLIGHTSSTATE() {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            hEADLIGHTSSTATE_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public Builder removeHEADLIGHTSSTATE(int index) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            ensureHEADLIGHTSSTATEIsMutable();
            hEADLIGHTSSTATE_.remove(index);
            onChanged();
          } else {
            hEADLIGHTSSTATEBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder getHEADLIGHTSSTATEBuilder(
            int index) {
          return getHEADLIGHTSSTATEFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder getHEADLIGHTSSTATEOrBuilder(
            int index) {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            return hEADLIGHTSSTATE_.get(index);  } else {
            return hEADLIGHTSSTATEBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
             getHEADLIGHTSSTATEOrBuilderList() {
          if (hEADLIGHTSSTATEBuilder_ != null) {
            return hEADLIGHTSSTATEBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(hEADLIGHTSSTATE_);
          }
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder addHEADLIGHTSSTATEBuilder() {
          return getHEADLIGHTSSTATEFieldBuilder().addBuilder(
              VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance());
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder addHEADLIGHTSSTATEBuilder(
            int index) {
          return getHEADLIGHTSSTATEFieldBuilder().addBuilder(
              index, VehicleDataOuterClass.VehicleData.CategoryTwoField.getDefaultInstance());
        }
        /**
         * <code>repeated .VehicleData.CategoryTwoField HEADLIGHTS_STATE = 2;</code>
         */
        public java.util.List<VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder> 
             getHEADLIGHTSSTATEBuilderList() {
          return getHEADLIGHTSSTATEFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder> 
            getHEADLIGHTSSTATEFieldBuilder() {
          if (hEADLIGHTSSTATEBuilder_ == null) {
            hEADLIGHTSSTATEBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                VehicleDataOuterClass.VehicleData.CategoryTwoField, VehicleDataOuterClass.VehicleData.CategoryTwoField.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoFieldOrBuilder>(
                    hEADLIGHTSSTATE_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            hEADLIGHTSSTATE_ = null;
          }
          return hEADLIGHTSSTATEBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:VehicleData.CategoryTwo)
      }

      // @@protoc_insertion_point(class_scope:VehicleData.CategoryTwo)
      private static final VehicleDataOuterClass.VehicleData.CategoryTwo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new VehicleDataOuterClass.VehicleData.CategoryTwo();
      }

      public static VehicleDataOuterClass.VehicleData.CategoryTwo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CategoryTwo>
          PARSER = new com.google.protobuf.AbstractParser<CategoryTwo>() {
        @java.lang.Override
        public CategoryTwo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoryTwo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CategoryTwo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CategoryTwo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData.CategoryTwo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CATEGORY_ONE_FIELD_NUMBER = 1;
    private java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne> categoryOne_;
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    @java.lang.Override
    public java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne> getCategoryOneList() {
      return categoryOne_;
    }
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder> 
        getCategoryOneOrBuilderList() {
      return categoryOne_;
    }
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    @java.lang.Override
    public int getCategoryOneCount() {
      return categoryOne_.size();
    }
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    @java.lang.Override
    public VehicleDataOuterClass.VehicleData.CategoryOne getCategoryOne(int index) {
      return categoryOne_.get(index);
    }
    /**
     * <pre>
     * category_one should be a list of size 10
     * </pre>
     *
     * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
     */
    @java.lang.Override
    public VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder getCategoryOneOrBuilder(
        int index) {
      return categoryOne_.get(index);
    }

    public static final int CATEGORY_TWO_FIELD_NUMBER = 2;
    private VehicleDataOuterClass.VehicleData.CategoryTwo categoryTwo_;
    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     * @return Whether the categoryTwo field is set.
     */
    @java.lang.Override
    public boolean hasCategoryTwo() {
      return categoryTwo_ != null;
    }
    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     * @return The categoryTwo.
     */
    @java.lang.Override
    public VehicleDataOuterClass.VehicleData.CategoryTwo getCategoryTwo() {
      return categoryTwo_ == null ? VehicleDataOuterClass.VehicleData.CategoryTwo.getDefaultInstance() : categoryTwo_;
    }
    /**
     * <pre>
     * category_two should be a list of size 10
     * </pre>
     *
     * <code>.VehicleData.CategoryTwo category_two = 2;</code>
     */
    @java.lang.Override
    public VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder getCategoryTwoOrBuilder() {
      return getCategoryTwo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < categoryOne_.size(); i++) {
        output.writeMessage(1, categoryOne_.get(i));
      }
      if (categoryTwo_ != null) {
        output.writeMessage(2, getCategoryTwo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < categoryOne_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, categoryOne_.get(i));
      }
      if (categoryTwo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCategoryTwo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VehicleDataOuterClass.VehicleData)) {
        return super.equals(obj);
      }
      VehicleDataOuterClass.VehicleData other = (VehicleDataOuterClass.VehicleData) obj;

      if (!getCategoryOneList()
          .equals(other.getCategoryOneList())) return false;
      if (hasCategoryTwo() != other.hasCategoryTwo()) return false;
      if (hasCategoryTwo()) {
        if (!getCategoryTwo()
            .equals(other.getCategoryTwo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCategoryOneCount() > 0) {
        hash = (37 * hash) + CATEGORY_ONE_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryOneList().hashCode();
      }
      if (hasCategoryTwo()) {
        hash = (37 * hash) + CATEGORY_TWO_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryTwo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VehicleDataOuterClass.VehicleData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VehicleDataOuterClass.VehicleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.VehicleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.VehicleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VehicleDataOuterClass.VehicleData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code VehicleData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:VehicleData)
        VehicleDataOuterClass.VehicleDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_VehicleData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_VehicleData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.VehicleData.class, VehicleDataOuterClass.VehicleData.Builder.class);
      }

      // Construct using VehicleDataOuterClass.VehicleData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCategoryOneFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (categoryOneBuilder_ == null) {
          categoryOne_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          categoryOneBuilder_.clear();
        }
        if (categoryTwoBuilder_ == null) {
          categoryTwo_ = null;
        } else {
          categoryTwo_ = null;
          categoryTwoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return VehicleDataOuterClass.internal_static_VehicleData_descriptor;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData getDefaultInstanceForType() {
        return VehicleDataOuterClass.VehicleData.getDefaultInstance();
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData build() {
        VehicleDataOuterClass.VehicleData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public VehicleDataOuterClass.VehicleData buildPartial() {
        VehicleDataOuterClass.VehicleData result = new VehicleDataOuterClass.VehicleData(this);
        int from_bitField0_ = bitField0_;
        if (categoryOneBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            categoryOne_ = java.util.Collections.unmodifiableList(categoryOne_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.categoryOne_ = categoryOne_;
        } else {
          result.categoryOne_ = categoryOneBuilder_.build();
        }
        if (categoryTwoBuilder_ == null) {
          result.categoryTwo_ = categoryTwo_;
        } else {
          result.categoryTwo_ = categoryTwoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VehicleDataOuterClass.VehicleData) {
          return mergeFrom((VehicleDataOuterClass.VehicleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VehicleDataOuterClass.VehicleData other) {
        if (other == VehicleDataOuterClass.VehicleData.getDefaultInstance()) return this;
        if (categoryOneBuilder_ == null) {
          if (!other.categoryOne_.isEmpty()) {
            if (categoryOne_.isEmpty()) {
              categoryOne_ = other.categoryOne_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCategoryOneIsMutable();
              categoryOne_.addAll(other.categoryOne_);
            }
            onChanged();
          }
        } else {
          if (!other.categoryOne_.isEmpty()) {
            if (categoryOneBuilder_.isEmpty()) {
              categoryOneBuilder_.dispose();
              categoryOneBuilder_ = null;
              categoryOne_ = other.categoryOne_;
              bitField0_ = (bitField0_ & ~0x00000001);
              categoryOneBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCategoryOneFieldBuilder() : null;
            } else {
              categoryOneBuilder_.addAllMessages(other.categoryOne_);
            }
          }
        }
        if (other.hasCategoryTwo()) {
          mergeCategoryTwo(other.getCategoryTwo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VehicleDataOuterClass.VehicleData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VehicleDataOuterClass.VehicleData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne> categoryOne_ =
        java.util.Collections.emptyList();
      private void ensureCategoryOneIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          categoryOne_ = new java.util.ArrayList<VehicleDataOuterClass.VehicleData.CategoryOne>(categoryOne_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          VehicleDataOuterClass.VehicleData.CategoryOne, VehicleDataOuterClass.VehicleData.CategoryOne.Builder, VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder> categoryOneBuilder_;

      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne> getCategoryOneList() {
        if (categoryOneBuilder_ == null) {
          return java.util.Collections.unmodifiableList(categoryOne_);
        } else {
          return categoryOneBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public int getCategoryOneCount() {
        if (categoryOneBuilder_ == null) {
          return categoryOne_.size();
        } else {
          return categoryOneBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryOne getCategoryOne(int index) {
        if (categoryOneBuilder_ == null) {
          return categoryOne_.get(index);
        } else {
          return categoryOneBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder setCategoryOne(
          int index, VehicleDataOuterClass.VehicleData.CategoryOne value) {
        if (categoryOneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryOneIsMutable();
          categoryOne_.set(index, value);
          onChanged();
        } else {
          categoryOneBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder setCategoryOne(
          int index, VehicleDataOuterClass.VehicleData.CategoryOne.Builder builderForValue) {
        if (categoryOneBuilder_ == null) {
          ensureCategoryOneIsMutable();
          categoryOne_.set(index, builderForValue.build());
          onChanged();
        } else {
          categoryOneBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder addCategoryOne(VehicleDataOuterClass.VehicleData.CategoryOne value) {
        if (categoryOneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryOneIsMutable();
          categoryOne_.add(value);
          onChanged();
        } else {
          categoryOneBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder addCategoryOne(
          int index, VehicleDataOuterClass.VehicleData.CategoryOne value) {
        if (categoryOneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryOneIsMutable();
          categoryOne_.add(index, value);
          onChanged();
        } else {
          categoryOneBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder addCategoryOne(
          VehicleDataOuterClass.VehicleData.CategoryOne.Builder builderForValue) {
        if (categoryOneBuilder_ == null) {
          ensureCategoryOneIsMutable();
          categoryOne_.add(builderForValue.build());
          onChanged();
        } else {
          categoryOneBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder addCategoryOne(
          int index, VehicleDataOuterClass.VehicleData.CategoryOne.Builder builderForValue) {
        if (categoryOneBuilder_ == null) {
          ensureCategoryOneIsMutable();
          categoryOne_.add(index, builderForValue.build());
          onChanged();
        } else {
          categoryOneBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder addAllCategoryOne(
          java.lang.Iterable<? extends VehicleDataOuterClass.VehicleData.CategoryOne> values) {
        if (categoryOneBuilder_ == null) {
          ensureCategoryOneIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, categoryOne_);
          onChanged();
        } else {
          categoryOneBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder clearCategoryOne() {
        if (categoryOneBuilder_ == null) {
          categoryOne_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          categoryOneBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public Builder removeCategoryOne(int index) {
        if (categoryOneBuilder_ == null) {
          ensureCategoryOneIsMutable();
          categoryOne_.remove(index);
          onChanged();
        } else {
          categoryOneBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryOne.Builder getCategoryOneBuilder(
          int index) {
        return getCategoryOneFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder getCategoryOneOrBuilder(
          int index) {
        if (categoryOneBuilder_ == null) {
          return categoryOne_.get(index);  } else {
          return categoryOneBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public java.util.List<? extends VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder> 
           getCategoryOneOrBuilderList() {
        if (categoryOneBuilder_ != null) {
          return categoryOneBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(categoryOne_);
        }
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryOne.Builder addCategoryOneBuilder() {
        return getCategoryOneFieldBuilder().addBuilder(
            VehicleDataOuterClass.VehicleData.CategoryOne.getDefaultInstance());
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryOne.Builder addCategoryOneBuilder(
          int index) {
        return getCategoryOneFieldBuilder().addBuilder(
            index, VehicleDataOuterClass.VehicleData.CategoryOne.getDefaultInstance());
      }
      /**
       * <pre>
       * category_one should be a list of size 10
       * </pre>
       *
       * <code>repeated .VehicleData.CategoryOne category_one = 1;</code>
       */
      public java.util.List<VehicleDataOuterClass.VehicleData.CategoryOne.Builder> 
           getCategoryOneBuilderList() {
        return getCategoryOneFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          VehicleDataOuterClass.VehicleData.CategoryOne, VehicleDataOuterClass.VehicleData.CategoryOne.Builder, VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder> 
          getCategoryOneFieldBuilder() {
        if (categoryOneBuilder_ == null) {
          categoryOneBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              VehicleDataOuterClass.VehicleData.CategoryOne, VehicleDataOuterClass.VehicleData.CategoryOne.Builder, VehicleDataOuterClass.VehicleData.CategoryOneOrBuilder>(
                  categoryOne_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          categoryOne_ = null;
        }
        return categoryOneBuilder_;
      }

      private VehicleDataOuterClass.VehicleData.CategoryTwo categoryTwo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          VehicleDataOuterClass.VehicleData.CategoryTwo, VehicleDataOuterClass.VehicleData.CategoryTwo.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder> categoryTwoBuilder_;
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       * @return Whether the categoryTwo field is set.
       */
      public boolean hasCategoryTwo() {
        return categoryTwoBuilder_ != null || categoryTwo_ != null;
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       * @return The categoryTwo.
       */
      public VehicleDataOuterClass.VehicleData.CategoryTwo getCategoryTwo() {
        if (categoryTwoBuilder_ == null) {
          return categoryTwo_ == null ? VehicleDataOuterClass.VehicleData.CategoryTwo.getDefaultInstance() : categoryTwo_;
        } else {
          return categoryTwoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public Builder setCategoryTwo(VehicleDataOuterClass.VehicleData.CategoryTwo value) {
        if (categoryTwoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          categoryTwo_ = value;
          onChanged();
        } else {
          categoryTwoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public Builder setCategoryTwo(
          VehicleDataOuterClass.VehicleData.CategoryTwo.Builder builderForValue) {
        if (categoryTwoBuilder_ == null) {
          categoryTwo_ = builderForValue.build();
          onChanged();
        } else {
          categoryTwoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public Builder mergeCategoryTwo(VehicleDataOuterClass.VehicleData.CategoryTwo value) {
        if (categoryTwoBuilder_ == null) {
          if (categoryTwo_ != null) {
            categoryTwo_ =
              VehicleDataOuterClass.VehicleData.CategoryTwo.newBuilder(categoryTwo_).mergeFrom(value).buildPartial();
          } else {
            categoryTwo_ = value;
          }
          onChanged();
        } else {
          categoryTwoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public Builder clearCategoryTwo() {
        if (categoryTwoBuilder_ == null) {
          categoryTwo_ = null;
          onChanged();
        } else {
          categoryTwo_ = null;
          categoryTwoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryTwo.Builder getCategoryTwoBuilder() {
        
        onChanged();
        return getCategoryTwoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      public VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder getCategoryTwoOrBuilder() {
        if (categoryTwoBuilder_ != null) {
          return categoryTwoBuilder_.getMessageOrBuilder();
        } else {
          return categoryTwo_ == null ?
              VehicleDataOuterClass.VehicleData.CategoryTwo.getDefaultInstance() : categoryTwo_;
        }
      }
      /**
       * <pre>
       * category_two should be a list of size 10
       * </pre>
       *
       * <code>.VehicleData.CategoryTwo category_two = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VehicleDataOuterClass.VehicleData.CategoryTwo, VehicleDataOuterClass.VehicleData.CategoryTwo.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder> 
          getCategoryTwoFieldBuilder() {
        if (categoryTwoBuilder_ == null) {
          categoryTwoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VehicleDataOuterClass.VehicleData.CategoryTwo, VehicleDataOuterClass.VehicleData.CategoryTwo.Builder, VehicleDataOuterClass.VehicleData.CategoryTwoOrBuilder>(
                  getCategoryTwo(),
                  getParentForChildren(),
                  isClean());
          categoryTwo_ = null;
        }
        return categoryTwoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:VehicleData)
    }

    // @@protoc_insertion_point(class_scope:VehicleData)
    private static final VehicleDataOuterClass.VehicleData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VehicleDataOuterClass.VehicleData();
    }

    public static VehicleDataOuterClass.VehicleData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleData>
        PARSER = new com.google.protobuf.AbstractParser<VehicleData>() {
      @java.lang.Override
      public VehicleData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehicleData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public VehicleDataOuterClass.VehicleData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllFieldsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AllFields)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of all sensors that can be requested by
     * Android Automotive OS.
     * </pre>
     *
     * <code>int32 ABS_ACTIVE = 1;</code>
     * @return The aBSACTIVE.
     */
    int getABSACTIVE();

    /**
     * <code>int32 AP_POWER_BOOTUP_REASON = 2;</code>
     * @return The aPPOWERBOOTUPREASON.
     */
    int getAPPOWERBOOTUPREASON();

    /**
     * <code>int32 AP_POWER_STATE_REPORT = 3;</code>
     * @return The aPPOWERSTATEREPORT.
     */
    int getAPPOWERSTATEREPORT();

    /**
     * <code>int32 AP_POWER_STATE_REQ = 4;</code>
     * @return The aPPOWERSTATEREQ.
     */
    int getAPPOWERSTATEREQ();

    /**
     * <code>int32 CABIN_LIGHTS_STATE = 5;</code>
     * @return The cABINLIGHTSSTATE.
     */
    int getCABINLIGHTSSTATE();

    /**
     * <code>int32 CABIN_LIGHTS_SWITCH = 6;</code>
     * @return The cABINLIGHTSSWITCH.
     */
    int getCABINLIGHTSSWITCH();

    /**
     * <code>int32 CRITICALLY_LOW_TIRE_PRESSURE = 7;</code>
     * @return The cRITICALLYLOWTIREPRESSURE.
     */
    int getCRITICALLYLOWTIREPRESSURE();

    /**
     * <code>int32 CURRENT_GEAR = 8;</code>
     * @return The cURRENTGEAR.
     */
    int getCURRENTGEAR();

    /**
     * <code>int32 DISPLAY_BRIGHTNESS = 9;</code>
     * @return The dISPLAYBRIGHTNESS.
     */
    int getDISPLAYBRIGHTNESS();

    /**
     * <code>int32 DISTANCE_DISPLAY_UNITS = 10;</code>
     * @return The dISTANCEDISPLAYUNITS.
     */
    int getDISTANCEDISPLAYUNITS();

    /**
     * <code>int32 DOOR_LOCK = 11;</code>
     * @return The dOORLOCK.
     */
    int getDOORLOCK();

    /**
     * <code>int32 DOOR_MOVE = 12;</code>
     * @return The dOORMOVE.
     */
    int getDOORMOVE();

    /**
     * <code>int32 DOOR_POS = 13;</code>
     * @return The dOORPOS.
     */
    int getDOORPOS();

    /**
     * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 14;</code>
     * @return The eLECTRONICTOLLCOLLECTIONCARDSTATUS.
     */
    int getELECTRONICTOLLCOLLECTIONCARDSTATUS();

    /**
     * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 15;</code>
     * @return The eLECTRONICTOLLCOLLECTIONCARDTYPE.
     */
    int getELECTRONICTOLLCOLLECTIONCARDTYPE();

    /**
     * <code>int32 ENGINE_COOLANT_TEMP = 16;</code>
     * @return The eNGINECOOLANTTEMP.
     */
    int getENGINECOOLANTTEMP();

    /**
     * <code>int32 ENGINE_OIL_LEVEL = 17;</code>
     * @return The eNGINEOILLEVEL.
     */
    int getENGINEOILLEVEL();

    /**
     * <code>int32 ENGINE_OIL_TEMP = 18;</code>
     * @return The eNGINEOILTEMP.
     */
    int getENGINEOILTEMP();

    /**
     * <code>int32 ENGINE_RPM = 19;</code>
     * @return The eNGINERPM.
     */
    int getENGINERPM();

    /**
     * <code>int32 ENV_OUTSIDE_TEMPERATURE = 20;</code>
     * @return The eNVOUTSIDETEMPERATURE.
     */
    int getENVOUTSIDETEMPERATURE();

    /**
     * <code>int32 EPOCH_TIME = 21;</code>
     * @return The ePOCHTIME.
     */
    int getEPOCHTIME();

    /**
     * <code>int32 EV_BATTERY_DISPLAY_UNITS = 22;</code>
     * @return The eVBATTERYDISPLAYUNITS.
     */
    int getEVBATTERYDISPLAYUNITS();

    /**
     * <code>int32 EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 23;</code>
     * @return The eVBATTERYINSTANTANEOUSCHARGERATE.
     */
    int getEVBATTERYINSTANTANEOUSCHARGERATE();

    /**
     * <code>int32 EV_BATTERY_LEVEL = 24;</code>
     * @return The eVBATTERYLEVEL.
     */
    int getEVBATTERYLEVEL();

    /**
     * <code>int32 EV_CHARGE_PORT_CONNECTED = 25;</code>
     * @return The eVCHARGEPORTCONNECTED.
     */
    int getEVCHARGEPORTCONNECTED();

    /**
     * <code>int32 EV_CHARGE_PORT_OPEN = 26;</code>
     * @return The eVCHARGEPORTOPEN.
     */
    int getEVCHARGEPORTOPEN();

    /**
     * <code>int32 FOG_LIGHTS_STATE = 27;</code>
     * @return The fOGLIGHTSSTATE.
     */
    int getFOGLIGHTSSTATE();

    /**
     * <code>int32 FOG_LIGHTS_SWITCH = 28;</code>
     * @return The fOGLIGHTSSWITCH.
     */
    int getFOGLIGHTSSWITCH();

    /**
     * <code>int32 FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 29;</code>
     * @return The fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME.
     */
    int getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME();

    /**
     * <code>int32 FUEL_DOOR_OPEN = 30;</code>
     * @return The fUELDOOROPEN.
     */
    int getFUELDOOROPEN();

    /**
     * <code>int32 FUEL_LEVEL = 31;</code>
     * @return The fUELLEVEL.
     */
    int getFUELLEVEL();

    /**
     * <code>int32 FUEL_LEVEL_LOW = 32;</code>
     * @return The fUELLEVELLOW.
     */
    int getFUELLEVELLOW();

    /**
     * <code>int32 FUEL_VOLUME_DISPLAY_UNITS = 33;</code>
     * @return The fUELVOLUMEDISPLAYUNITS.
     */
    int getFUELVOLUMEDISPLAYUNITS();

    /**
     * <code>int32 GEAR_SELECTION = 34;</code>
     * @return The gEARSELECTION.
     */
    int getGEARSELECTION();

    /**
     * <code>int32 HAZARD_LIGHTS_STATE = 35;</code>
     * @return The hAZARDLIGHTSSTATE.
     */
    int getHAZARDLIGHTSSTATE();

    /**
     * <code>int32 HAZARD_LIGHTS_SWITCH = 36;</code>
     * @return The hAZARDLIGHTSSWITCH.
     */
    int getHAZARDLIGHTSSWITCH();

    /**
     * <code>int32 HEADLIGHTS_STATE = 37;</code>
     * @return The hEADLIGHTSSTATE.
     */
    int getHEADLIGHTSSTATE();

    /**
     * <code>int32 HEADLIGHTS_SWITCH = 38;</code>
     * @return The hEADLIGHTSSWITCH.
     */
    int getHEADLIGHTSSWITCH();

    /**
     * <code>int32 HIGH_BEAM_LIGHTS_STATE = 39;</code>
     * @return The hIGHBEAMLIGHTSSTATE.
     */
    int getHIGHBEAMLIGHTSSTATE();

    /**
     * <code>int32 HIGH_BEAM_LIGHTS_SWITCH = 40;</code>
     * @return The hIGHBEAMLIGHTSSWITCH.
     */
    int getHIGHBEAMLIGHTSSWITCH();

    /**
     * <code>int32 HVAC_ACTUAL_FAN_SPEED_RPM = 41;</code>
     * @return The hVACACTUALFANSPEEDRPM.
     */
    int getHVACACTUALFANSPEEDRPM();

    /**
     * <code>int32 HVAC_AC_ON = 42;</code>
     * @return The hVACACON.
     */
    int getHVACACON();

    /**
     * <code>int32 HVAC_AUTO_ON = 43;</code>
     * @return The hVACAUTOON.
     */
    int getHVACAUTOON();

    /**
     * <code>int32 HVAC_AUTO_RECIRC_ON = 44;</code>
     * @return The hVACAUTORECIRCON.
     */
    int getHVACAUTORECIRCON();

    /**
     * <code>int32 HVAC_DEFROSTER = 45;</code>
     * @return The hVACDEFROSTER.
     */
    int getHVACDEFROSTER();

    /**
     * <code>int32 HVAC_DUAL_ON = 46;</code>
     * @return The hVACDUALON.
     */
    int getHVACDUALON();

    /**
     * <code>int32 HVAC_FAN_DIRECTION = 47;</code>
     * @return The hVACFANDIRECTION.
     */
    int getHVACFANDIRECTION();

    /**
     * <code>int32 HVAC_FAN_DIRECTION_AVAILABLE = 48;</code>
     * @return The hVACFANDIRECTIONAVAILABLE.
     */
    int getHVACFANDIRECTIONAVAILABLE();

    /**
     * <code>int32 HVAC_FAN_SPEED = 49;</code>
     * @return The hVACFANSPEED.
     */
    int getHVACFANSPEED();

    /**
     * <code>int32 HVAC_MAX_AC_ON = 50;</code>
     * @return The hVACMAXACON.
     */
    int getHVACMAXACON();

    /**
     * <code>int32 HVAC_MAX_DEFROST_ON = 51;</code>
     * @return The hVACMAXDEFROSTON.
     */
    int getHVACMAXDEFROSTON();

    /**
     * <code>int32 HVAC_POWER_ON = 52;</code>
     * @return The hVACPOWERON.
     */
    int getHVACPOWERON();

    /**
     * <code>int32 HVAC_RECIRC_ON = 53;</code>
     * @return The hVACRECIRCON.
     */
    int getHVACRECIRCON();

    /**
     * <code>int32 HVAC_SEAT_TEMPERATURE = 54;</code>
     * @return The hVACSEATTEMPERATURE.
     */
    int getHVACSEATTEMPERATURE();

    /**
     * <code>int32 HVAC_SEAT_VENTILATION = 55;</code>
     * @return The hVACSEATVENTILATION.
     */
    int getHVACSEATVENTILATION();

    /**
     * <code>int32 HVAC_SIDE_MIRROR_HEAT = 56;</code>
     * @return The hVACSIDEMIRRORHEAT.
     */
    int getHVACSIDEMIRRORHEAT();

    /**
     * <code>int32 HVAC_STEERING_WHEEL_HEAT = 57;</code>
     * @return The hVACSTEERINGWHEELHEAT.
     */
    int getHVACSTEERINGWHEELHEAT();

    /**
     * <code>int32 HVAC_TEMPERATURE_CURRENT = 58;</code>
     * @return The hVACTEMPERATURECURRENT.
     */
    int getHVACTEMPERATURECURRENT();

    /**
     * <code>int32 HVAC_TEMPERATURE_DISPLAY_UNITS = 59;</code>
     * @return The hVACTEMPERATUREDISPLAYUNITS.
     */
    int getHVACTEMPERATUREDISPLAYUNITS();

    /**
     * <code>int32 HVAC_TEMPERATURE_SET = 60;</code>
     * @return The hVACTEMPERATURESET.
     */
    int getHVACTEMPERATURESET();

    /**
     * <code>int32 HVAC_TEMPERATURE_VALUE_SUGGESTION = 61;</code>
     * @return The hVACTEMPERATUREVALUESUGGESTION.
     */
    int getHVACTEMPERATUREVALUESUGGESTION();

    /**
     * <code>int32 HW_KEY_INPUT = 62;</code>
     * @return The hWKEYINPUT.
     */
    int getHWKEYINPUT();

    /**
     * <code>int32 IGNITION_STATE = 63;</code>
     * @return The iGNITIONSTATE.
     */
    int getIGNITIONSTATE();

    /**
     * <code>int32 INFO_DRIVER_SEAT = 64;</code>
     * @return The iNFODRIVERSEAT.
     */
    int getINFODRIVERSEAT();

    /**
     * <code>int32 INFO_EV_BATTERY_CAPACITY = 65;</code>
     * @return The iNFOEVBATTERYCAPACITY.
     */
    int getINFOEVBATTERYCAPACITY();

    /**
     * <code>int32 INFO_EV_CONNECTOR_TYPE = 66;</code>
     * @return The iNFOEVCONNECTORTYPE.
     */
    int getINFOEVCONNECTORTYPE();

    /**
     * <code>int32 INFO_EV_PORT_LOCATION = 67;</code>
     * @return The iNFOEVPORTLOCATION.
     */
    int getINFOEVPORTLOCATION();

    /**
     * <code>int32 INFO_EXTERIOR_DIMENSIONS = 68;</code>
     * @return The iNFOEXTERIORDIMENSIONS.
     */
    int getINFOEXTERIORDIMENSIONS();

    /**
     * <code>int32 INFO_FUEL_CAPACITY = 69;</code>
     * @return The iNFOFUELCAPACITY.
     */
    int getINFOFUELCAPACITY();

    /**
     * <code>int32 INFO_FUEL_DOOR_LOCATION = 70;</code>
     * @return The iNFOFUELDOORLOCATION.
     */
    int getINFOFUELDOORLOCATION();

    /**
     * <code>int32 INFO_FUEL_TYPE = 71;</code>
     * @return The iNFOFUELTYPE.
     */
    int getINFOFUELTYPE();

    /**
     * <code>int32 INFO_MAKE = 72;</code>
     * @return The iNFOMAKE.
     */
    int getINFOMAKE();

    /**
     * <code>int32 INFO_MODEL = 73;</code>
     * @return The iNFOMODEL.
     */
    int getINFOMODEL();

    /**
     * <code>int32 INFO_MODEL_YEAR = 74;</code>
     * @return The iNFOMODELYEAR.
     */
    int getINFOMODELYEAR();

    /**
     * <code>int32 INFO_MULTI_EV_PORT_LOCATIONS = 75;</code>
     * @return The iNFOMULTIEVPORTLOCATIONS.
     */
    int getINFOMULTIEVPORTLOCATIONS();

    /**
     * <code>int32 INFO_VIN = 76;</code>
     * @return The iNFOVIN.
     */
    int getINFOVIN();

    /**
     * <code>int32 INVALID = 77;</code>
     * @return The iNVALID.
     */
    int getINVALID();

    /**
     * <code>int32 MIRROR_FOLD = 78;</code>
     * @return The mIRRORFOLD.
     */
    int getMIRRORFOLD();

    /**
     * <code>int32 MIRROR_LOCK = 79;</code>
     * @return The mIRRORLOCK.
     */
    int getMIRRORLOCK();

    /**
     * <code>int32 MIRROR_Y_MOVE = 80;</code>
     * @return The mIRRORYMOVE.
     */
    int getMIRRORYMOVE();

    /**
     * <code>int32 MIRROR_Y_POS = 81;</code>
     * @return The mIRRORYPOS.
     */
    int getMIRRORYPOS();

    /**
     * <code>int32 MIRROR_Z_MOVE = 82;</code>
     * @return The mIRRORZMOVE.
     */
    int getMIRRORZMOVE();

    /**
     * <code>int32 MIRROR_Z_POS = 83;</code>
     * @return The mIRRORZPOS.
     */
    int getMIRRORZPOS();

    /**
     * <code>int32 NIGHT_MODE = 84;</code>
     * @return The nIGHTMODE.
     */
    int getNIGHTMODE();

    /**
     * <code>int32 OBD2_FREEZE_FRAME = 85;</code>
     * @return The oBD2FREEZEFRAME.
     */
    int getOBD2FREEZEFRAME();

    /**
     * <code>int32 OBD2_FREEZE_FRAME_CLEAR = 86;</code>
     * @return The oBD2FREEZEFRAMECLEAR.
     */
    int getOBD2FREEZEFRAMECLEAR();

    /**
     * <code>int32 OBD2_FREEZE_FRAME_INFO = 87;</code>
     * @return The oBD2FREEZEFRAMEINFO.
     */
    int getOBD2FREEZEFRAMEINFO();

    /**
     * <code>int32 OBD2_LIVE_FRAME = 88;</code>
     * @return The oBD2LIVEFRAME.
     */
    int getOBD2LIVEFRAME();

    /**
     * <code>int32 PARKING_BRAKE_AUTO_APPLY = 89;</code>
     * @return The pARKINGBRAKEAUTOAPPLY.
     */
    int getPARKINGBRAKEAUTOAPPLY();

    /**
     * <code>int32 PARKING_BRAKE_ON = 90;</code>
     * @return The pARKINGBRAKEON.
     */
    int getPARKINGBRAKEON();

    /**
     * <code>int32 PERF_ODOMETER = 91;</code>
     * @return The pERFODOMETER.
     */
    int getPERFODOMETER();

    /**
     * <code>int32 PERF_REAR_STEERING_ANGLE = 92;</code>
     * @return The pERFREARSTEERINGANGLE.
     */
    int getPERFREARSTEERINGANGLE();

    /**
     * <code>int32 PERF_STEERING_ANGLE = 93;</code>
     * @return The pERFSTEERINGANGLE.
     */
    int getPERFSTEERINGANGLE();

    /**
     * <code>int32 PERF_VEHICLE_SPEED = 94;</code>
     * @return The pERFVEHICLESPEED.
     */
    int getPERFVEHICLESPEED();

    /**
     * <code>int32 PERF_VEHICLE_SPEED_DISPLAY = 95;</code>
     * @return The pERFVEHICLESPEEDDISPLAY.
     */
    int getPERFVEHICLESPEEDDISPLAY();

    /**
     * <code>int32 RANGE_REMAINING = 96;</code>
     * @return The rANGEREMAINING.
     */
    int getRANGEREMAINING();

    /**
     * <code>int32 READING_LIGHTS_STATE = 97;</code>
     * @return The rEADINGLIGHTSSTATE.
     */
    int getREADINGLIGHTSSTATE();

    /**
     * <code>int32 READING_LIGHTS_SWITCH = 98;</code>
     * @return The rEADINGLIGHTSSWITCH.
     */
    int getREADINGLIGHTSSWITCH();

    /**
     * <code>int32 SEAT_BACKREST_ANGLE_1_MOVE = 99;</code>
     * @return The sEATBACKRESTANGLE1MOVE.
     */
    int getSEATBACKRESTANGLE1MOVE();

    /**
     * <code>int32 SEAT_BACKREST_ANGLE_1_POS = 100;</code>
     * @return The sEATBACKRESTANGLE1POS.
     */
    int getSEATBACKRESTANGLE1POS();

    /**
     * <code>int32 SEAT_BACKREST_ANGLE_2_MOVE = 101;</code>
     * @return The sEATBACKRESTANGLE2MOVE.
     */
    int getSEATBACKRESTANGLE2MOVE();

    /**
     * <code>int32 SEAT_BACKREST_ANGLE_2_POS = 102;</code>
     * @return The sEATBACKRESTANGLE2POS.
     */
    int getSEATBACKRESTANGLE2POS();

    /**
     * <code>int32 SEAT_BELT_BUCKLED = 103;</code>
     * @return The sEATBELTBUCKLED.
     */
    int getSEATBELTBUCKLED();

    /**
     * <code>int32 SEAT_BELT_HEIGHT_MOVE = 104;</code>
     * @return The sEATBELTHEIGHTMOVE.
     */
    int getSEATBELTHEIGHTMOVE();

    /**
     * <code>int32 SEAT_BELT_HEIGHT_POS = 105;</code>
     * @return The sEATBELTHEIGHTPOS.
     */
    int getSEATBELTHEIGHTPOS();

    /**
     * <code>int32 SEAT_DEPTH_MOVE = 106;</code>
     * @return The sEATDEPTHMOVE.
     */
    int getSEATDEPTHMOVE();

    /**
     * <code>int32 SEAT_DEPTH_POS = 107;</code>
     * @return The sEATDEPTHPOS.
     */
    int getSEATDEPTHPOS();

    /**
     * <code>int32 SEAT_FORE_AFT_MOVE = 108;</code>
     * @return The sEATFOREAFTMOVE.
     */
    int getSEATFOREAFTMOVE();

    /**
     * <code>int32 SEAT_FORE_AFT_POS = 109;</code>
     * @return The sEATFOREAFTPOS.
     */
    int getSEATFOREAFTPOS();

    /**
     * <code>int32 SEAT_HEADREST_ANGLE_MOVE = 110;</code>
     * @return The sEATHEADRESTANGLEMOVE.
     */
    int getSEATHEADRESTANGLEMOVE();

    /**
     * <code>int32 SEAT_HEADREST_ANGLE_POS = 111;</code>
     * @return The sEATHEADRESTANGLEPOS.
     */
    int getSEATHEADRESTANGLEPOS();

    /**
     * <code>int32 SEAT_HEADREST_FORE_AFT_MOVE = 112;</code>
     * @return The sEATHEADRESTFOREAFTMOVE.
     */
    int getSEATHEADRESTFOREAFTMOVE();

    /**
     * <code>int32 SEAT_HEADREST_FORE_AFT_POS = 113;</code>
     * @return The sEATHEADRESTFOREAFTPOS.
     */
    int getSEATHEADRESTFOREAFTPOS();

    /**
     * <code>int32 SEAT_HEADREST_HEIGHT_MOVE = 114;</code>
     * @return The sEATHEADRESTHEIGHTMOVE.
     */
    int getSEATHEADRESTHEIGHTMOVE();

    /**
     * <code>int32 SEAT_HEADREST_HEIGHT_POS = 115;</code>
     * @return The sEATHEADRESTHEIGHTPOS.
     */
    int getSEATHEADRESTHEIGHTPOS();

    /**
     * <code>int32 SEAT_HEIGHT_MOVE = 116;</code>
     * @return The sEATHEIGHTMOVE.
     */
    int getSEATHEIGHTMOVE();

    /**
     * <code>int32 SEAT_HEIGHT_POS = 117;</code>
     * @return The sEATHEIGHTPOS.
     */
    int getSEATHEIGHTPOS();

    /**
     * <code>int32 SEAT_LUMBAR_FORE_AFT_MOVE = 118;</code>
     * @return The sEATLUMBARFOREAFTMOVE.
     */
    int getSEATLUMBARFOREAFTMOVE();

    /**
     * <code>int32 SEAT_LUMBAR_FORE_AFT_POS = 119;</code>
     * @return The sEATLUMBARFOREAFTPOS.
     */
    int getSEATLUMBARFOREAFTPOS();

    /**
     * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 120;</code>
     * @return The sEATLUMBARSIDESUPPORTMOVE.
     */
    int getSEATLUMBARSIDESUPPORTMOVE();

    /**
     * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_POS = 121;</code>
     * @return The sEATLUMBARSIDESUPPORTPOS.
     */
    int getSEATLUMBARSIDESUPPORTPOS();

    /**
     * <code>int32 SEAT_MEMORY_SELECT = 122;</code>
     * @return The sEATMEMORYSELECT.
     */
    int getSEATMEMORYSELECT();

    /**
     * <code>int32 SEAT_MEMORY_SET = 123;</code>
     * @return The sEATMEMORYSET.
     */
    int getSEATMEMORYSET();

    /**
     * <code>int32 SEAT_OCCUPANCY = 124;</code>
     * @return The sEATOCCUPANCY.
     */
    int getSEATOCCUPANCY();

    /**
     * <code>int32 SEAT_TILT_MOVE = 125;</code>
     * @return The sEATTILTMOVE.
     */
    int getSEATTILTMOVE();

    /**
     * <code>int32 SEAT_TILT_POS = 126;</code>
     * @return The sEATTILTPOS.
     */
    int getSEATTILTPOS();

    /**
     * <code>int32 STORAGE_ENCRYPTION_BINDING_SEED = 127;</code>
     * @return The sTORAGEENCRYPTIONBINDINGSEED.
     */
    int getSTORAGEENCRYPTIONBINDINGSEED();

    /**
     * <code>int32 TIRE_PRESSURE = 128;</code>
     * @return The tIREPRESSURE.
     */
    int getTIREPRESSURE();

    /**
     * <code>int32 TIRE_PRESSURE_DISPLAY_UNITS = 129;</code>
     * @return The tIREPRESSUREDISPLAYUNITS.
     */
    int getTIREPRESSUREDISPLAYUNITS();

    /**
     * <code>int32 TRACTION_CONTROL_ACTIVE = 130;</code>
     * @return The tRACTIONCONTROLACTIVE.
     */
    int getTRACTIONCONTROLACTIVE();

    /**
     * <code>int32 TURN_SIGNAL_STATE = 131;</code>
     * @return The tURNSIGNALSTATE.
     */
    int getTURNSIGNALSTATE();

    /**
     * <code>int32 VEHICLE_MAP_SERVICE = 132;</code>
     * @return The vEHICLEMAPSERVICE.
     */
    int getVEHICLEMAPSERVICE();

    /**
     * <code>int32 WHEEL_TICK = 133;</code>
     * @return The wHEELTICK.
     */
    int getWHEELTICK();

    /**
     * <code>int32 WINDOW_LOCK = 134;</code>
     * @return The wINDOWLOCK.
     */
    int getWINDOWLOCK();

    /**
     * <code>int32 WINDOW_MOVE = 135;</code>
     * @return The wINDOWMOVE.
     */
    int getWINDOWMOVE();

    /**
     * <code>int32 WINDOW_POS = 136;</code>
     * @return The wINDOWPOS.
     */
    int getWINDOWPOS();
  }
  /**
   * Protobuf type {@code AllFields}
   */
  public static final class AllFields extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AllFields)
      AllFieldsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllFields.newBuilder() to construct.
    private AllFields(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllFields() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllFields();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllFields(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              aBSACTIVE_ = input.readInt32();
              break;
            }
            case 16: {

              aPPOWERBOOTUPREASON_ = input.readInt32();
              break;
            }
            case 24: {

              aPPOWERSTATEREPORT_ = input.readInt32();
              break;
            }
            case 32: {

              aPPOWERSTATEREQ_ = input.readInt32();
              break;
            }
            case 40: {

              cABINLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 48: {

              cABINLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 56: {

              cRITICALLYLOWTIREPRESSURE_ = input.readInt32();
              break;
            }
            case 64: {

              cURRENTGEAR_ = input.readInt32();
              break;
            }
            case 72: {

              dISPLAYBRIGHTNESS_ = input.readInt32();
              break;
            }
            case 80: {

              dISTANCEDISPLAYUNITS_ = input.readInt32();
              break;
            }
            case 88: {

              dOORLOCK_ = input.readInt32();
              break;
            }
            case 96: {

              dOORMOVE_ = input.readInt32();
              break;
            }
            case 104: {

              dOORPOS_ = input.readInt32();
              break;
            }
            case 112: {

              eLECTRONICTOLLCOLLECTIONCARDSTATUS_ = input.readInt32();
              break;
            }
            case 120: {

              eLECTRONICTOLLCOLLECTIONCARDTYPE_ = input.readInt32();
              break;
            }
            case 128: {

              eNGINECOOLANTTEMP_ = input.readInt32();
              break;
            }
            case 136: {

              eNGINEOILLEVEL_ = input.readInt32();
              break;
            }
            case 144: {

              eNGINEOILTEMP_ = input.readInt32();
              break;
            }
            case 152: {

              eNGINERPM_ = input.readInt32();
              break;
            }
            case 160: {

              eNVOUTSIDETEMPERATURE_ = input.readInt32();
              break;
            }
            case 168: {

              ePOCHTIME_ = input.readInt32();
              break;
            }
            case 176: {

              eVBATTERYDISPLAYUNITS_ = input.readInt32();
              break;
            }
            case 184: {

              eVBATTERYINSTANTANEOUSCHARGERATE_ = input.readInt32();
              break;
            }
            case 192: {

              eVBATTERYLEVEL_ = input.readInt32();
              break;
            }
            case 200: {

              eVCHARGEPORTCONNECTED_ = input.readInt32();
              break;
            }
            case 208: {

              eVCHARGEPORTOPEN_ = input.readInt32();
              break;
            }
            case 216: {

              fOGLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 224: {

              fOGLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 232: {

              fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ = input.readInt32();
              break;
            }
            case 240: {

              fUELDOOROPEN_ = input.readInt32();
              break;
            }
            case 248: {

              fUELLEVEL_ = input.readInt32();
              break;
            }
            case 256: {

              fUELLEVELLOW_ = input.readInt32();
              break;
            }
            case 264: {

              fUELVOLUMEDISPLAYUNITS_ = input.readInt32();
              break;
            }
            case 272: {

              gEARSELECTION_ = input.readInt32();
              break;
            }
            case 280: {

              hAZARDLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 288: {

              hAZARDLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 296: {

              hEADLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 304: {

              hEADLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 312: {

              hIGHBEAMLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 320: {

              hIGHBEAMLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 328: {

              hVACACTUALFANSPEEDRPM_ = input.readInt32();
              break;
            }
            case 336: {

              hVACACON_ = input.readInt32();
              break;
            }
            case 344: {

              hVACAUTOON_ = input.readInt32();
              break;
            }
            case 352: {

              hVACAUTORECIRCON_ = input.readInt32();
              break;
            }
            case 360: {

              hVACDEFROSTER_ = input.readInt32();
              break;
            }
            case 368: {

              hVACDUALON_ = input.readInt32();
              break;
            }
            case 376: {

              hVACFANDIRECTION_ = input.readInt32();
              break;
            }
            case 384: {

              hVACFANDIRECTIONAVAILABLE_ = input.readInt32();
              break;
            }
            case 392: {

              hVACFANSPEED_ = input.readInt32();
              break;
            }
            case 400: {

              hVACMAXACON_ = input.readInt32();
              break;
            }
            case 408: {

              hVACMAXDEFROSTON_ = input.readInt32();
              break;
            }
            case 416: {

              hVACPOWERON_ = input.readInt32();
              break;
            }
            case 424: {

              hVACRECIRCON_ = input.readInt32();
              break;
            }
            case 432: {

              hVACSEATTEMPERATURE_ = input.readInt32();
              break;
            }
            case 440: {

              hVACSEATVENTILATION_ = input.readInt32();
              break;
            }
            case 448: {

              hVACSIDEMIRRORHEAT_ = input.readInt32();
              break;
            }
            case 456: {

              hVACSTEERINGWHEELHEAT_ = input.readInt32();
              break;
            }
            case 464: {

              hVACTEMPERATURECURRENT_ = input.readInt32();
              break;
            }
            case 472: {

              hVACTEMPERATUREDISPLAYUNITS_ = input.readInt32();
              break;
            }
            case 480: {

              hVACTEMPERATURESET_ = input.readInt32();
              break;
            }
            case 488: {

              hVACTEMPERATUREVALUESUGGESTION_ = input.readInt32();
              break;
            }
            case 496: {

              hWKEYINPUT_ = input.readInt32();
              break;
            }
            case 504: {

              iGNITIONSTATE_ = input.readInt32();
              break;
            }
            case 512: {

              iNFODRIVERSEAT_ = input.readInt32();
              break;
            }
            case 520: {

              iNFOEVBATTERYCAPACITY_ = input.readInt32();
              break;
            }
            case 528: {

              iNFOEVCONNECTORTYPE_ = input.readInt32();
              break;
            }
            case 536: {

              iNFOEVPORTLOCATION_ = input.readInt32();
              break;
            }
            case 544: {

              iNFOEXTERIORDIMENSIONS_ = input.readInt32();
              break;
            }
            case 552: {

              iNFOFUELCAPACITY_ = input.readInt32();
              break;
            }
            case 560: {

              iNFOFUELDOORLOCATION_ = input.readInt32();
              break;
            }
            case 568: {

              iNFOFUELTYPE_ = input.readInt32();
              break;
            }
            case 576: {

              iNFOMAKE_ = input.readInt32();
              break;
            }
            case 584: {

              iNFOMODEL_ = input.readInt32();
              break;
            }
            case 592: {

              iNFOMODELYEAR_ = input.readInt32();
              break;
            }
            case 600: {

              iNFOMULTIEVPORTLOCATIONS_ = input.readInt32();
              break;
            }
            case 608: {

              iNFOVIN_ = input.readInt32();
              break;
            }
            case 616: {

              iNVALID_ = input.readInt32();
              break;
            }
            case 624: {

              mIRRORFOLD_ = input.readInt32();
              break;
            }
            case 632: {

              mIRRORLOCK_ = input.readInt32();
              break;
            }
            case 640: {

              mIRRORYMOVE_ = input.readInt32();
              break;
            }
            case 648: {

              mIRRORYPOS_ = input.readInt32();
              break;
            }
            case 656: {

              mIRRORZMOVE_ = input.readInt32();
              break;
            }
            case 664: {

              mIRRORZPOS_ = input.readInt32();
              break;
            }
            case 672: {

              nIGHTMODE_ = input.readInt32();
              break;
            }
            case 680: {

              oBD2FREEZEFRAME_ = input.readInt32();
              break;
            }
            case 688: {

              oBD2FREEZEFRAMECLEAR_ = input.readInt32();
              break;
            }
            case 696: {

              oBD2FREEZEFRAMEINFO_ = input.readInt32();
              break;
            }
            case 704: {

              oBD2LIVEFRAME_ = input.readInt32();
              break;
            }
            case 712: {

              pARKINGBRAKEAUTOAPPLY_ = input.readInt32();
              break;
            }
            case 720: {

              pARKINGBRAKEON_ = input.readInt32();
              break;
            }
            case 728: {

              pERFODOMETER_ = input.readInt32();
              break;
            }
            case 736: {

              pERFREARSTEERINGANGLE_ = input.readInt32();
              break;
            }
            case 744: {

              pERFSTEERINGANGLE_ = input.readInt32();
              break;
            }
            case 752: {

              pERFVEHICLESPEED_ = input.readInt32();
              break;
            }
            case 760: {

              pERFVEHICLESPEEDDISPLAY_ = input.readInt32();
              break;
            }
            case 768: {

              rANGEREMAINING_ = input.readInt32();
              break;
            }
            case 776: {

              rEADINGLIGHTSSTATE_ = input.readInt32();
              break;
            }
            case 784: {

              rEADINGLIGHTSSWITCH_ = input.readInt32();
              break;
            }
            case 792: {

              sEATBACKRESTANGLE1MOVE_ = input.readInt32();
              break;
            }
            case 800: {

              sEATBACKRESTANGLE1POS_ = input.readInt32();
              break;
            }
            case 808: {

              sEATBACKRESTANGLE2MOVE_ = input.readInt32();
              break;
            }
            case 816: {

              sEATBACKRESTANGLE2POS_ = input.readInt32();
              break;
            }
            case 824: {

              sEATBELTBUCKLED_ = input.readInt32();
              break;
            }
            case 832: {

              sEATBELTHEIGHTMOVE_ = input.readInt32();
              break;
            }
            case 840: {

              sEATBELTHEIGHTPOS_ = input.readInt32();
              break;
            }
            case 848: {

              sEATDEPTHMOVE_ = input.readInt32();
              break;
            }
            case 856: {

              sEATDEPTHPOS_ = input.readInt32();
              break;
            }
            case 864: {

              sEATFOREAFTMOVE_ = input.readInt32();
              break;
            }
            case 872: {

              sEATFOREAFTPOS_ = input.readInt32();
              break;
            }
            case 880: {

              sEATHEADRESTANGLEMOVE_ = input.readInt32();
              break;
            }
            case 888: {

              sEATHEADRESTANGLEPOS_ = input.readInt32();
              break;
            }
            case 896: {

              sEATHEADRESTFOREAFTMOVE_ = input.readInt32();
              break;
            }
            case 904: {

              sEATHEADRESTFOREAFTPOS_ = input.readInt32();
              break;
            }
            case 912: {

              sEATHEADRESTHEIGHTMOVE_ = input.readInt32();
              break;
            }
            case 920: {

              sEATHEADRESTHEIGHTPOS_ = input.readInt32();
              break;
            }
            case 928: {

              sEATHEIGHTMOVE_ = input.readInt32();
              break;
            }
            case 936: {

              sEATHEIGHTPOS_ = input.readInt32();
              break;
            }
            case 944: {

              sEATLUMBARFOREAFTMOVE_ = input.readInt32();
              break;
            }
            case 952: {

              sEATLUMBARFOREAFTPOS_ = input.readInt32();
              break;
            }
            case 960: {

              sEATLUMBARSIDESUPPORTMOVE_ = input.readInt32();
              break;
            }
            case 968: {

              sEATLUMBARSIDESUPPORTPOS_ = input.readInt32();
              break;
            }
            case 976: {

              sEATMEMORYSELECT_ = input.readInt32();
              break;
            }
            case 984: {

              sEATMEMORYSET_ = input.readInt32();
              break;
            }
            case 992: {

              sEATOCCUPANCY_ = input.readInt32();
              break;
            }
            case 1000: {

              sEATTILTMOVE_ = input.readInt32();
              break;
            }
            case 1008: {

              sEATTILTPOS_ = input.readInt32();
              break;
            }
            case 1016: {

              sTORAGEENCRYPTIONBINDINGSEED_ = input.readInt32();
              break;
            }
            case 1024: {

              tIREPRESSURE_ = input.readInt32();
              break;
            }
            case 1032: {

              tIREPRESSUREDISPLAYUNITS_ = input.readInt32();
              break;
            }
            case 1040: {

              tRACTIONCONTROLACTIVE_ = input.readInt32();
              break;
            }
            case 1048: {

              tURNSIGNALSTATE_ = input.readInt32();
              break;
            }
            case 1056: {

              vEHICLEMAPSERVICE_ = input.readInt32();
              break;
            }
            case 1064: {

              wHEELTICK_ = input.readInt32();
              break;
            }
            case 1072: {

              wINDOWLOCK_ = input.readInt32();
              break;
            }
            case 1080: {

              wINDOWMOVE_ = input.readInt32();
              break;
            }
            case 1088: {

              wINDOWPOS_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return VehicleDataOuterClass.internal_static_AllFields_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return VehicleDataOuterClass.internal_static_AllFields_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VehicleDataOuterClass.AllFields.class, VehicleDataOuterClass.AllFields.Builder.class);
    }

    public static final int ABS_ACTIVE_FIELD_NUMBER = 1;
    private int aBSACTIVE_;
    /**
     * <pre>
     * List of all sensors that can be requested by
     * Android Automotive OS.
     * </pre>
     *
     * <code>int32 ABS_ACTIVE = 1;</code>
     * @return The aBSACTIVE.
     */
    @java.lang.Override
    public int getABSACTIVE() {
      return aBSACTIVE_;
    }

    public static final int AP_POWER_BOOTUP_REASON_FIELD_NUMBER = 2;
    private int aPPOWERBOOTUPREASON_;
    /**
     * <code>int32 AP_POWER_BOOTUP_REASON = 2;</code>
     * @return The aPPOWERBOOTUPREASON.
     */
    @java.lang.Override
    public int getAPPOWERBOOTUPREASON() {
      return aPPOWERBOOTUPREASON_;
    }

    public static final int AP_POWER_STATE_REPORT_FIELD_NUMBER = 3;
    private int aPPOWERSTATEREPORT_;
    /**
     * <code>int32 AP_POWER_STATE_REPORT = 3;</code>
     * @return The aPPOWERSTATEREPORT.
     */
    @java.lang.Override
    public int getAPPOWERSTATEREPORT() {
      return aPPOWERSTATEREPORT_;
    }

    public static final int AP_POWER_STATE_REQ_FIELD_NUMBER = 4;
    private int aPPOWERSTATEREQ_;
    /**
     * <code>int32 AP_POWER_STATE_REQ = 4;</code>
     * @return The aPPOWERSTATEREQ.
     */
    @java.lang.Override
    public int getAPPOWERSTATEREQ() {
      return aPPOWERSTATEREQ_;
    }

    public static final int CABIN_LIGHTS_STATE_FIELD_NUMBER = 5;
    private int cABINLIGHTSSTATE_;
    /**
     * <code>int32 CABIN_LIGHTS_STATE = 5;</code>
     * @return The cABINLIGHTSSTATE.
     */
    @java.lang.Override
    public int getCABINLIGHTSSTATE() {
      return cABINLIGHTSSTATE_;
    }

    public static final int CABIN_LIGHTS_SWITCH_FIELD_NUMBER = 6;
    private int cABINLIGHTSSWITCH_;
    /**
     * <code>int32 CABIN_LIGHTS_SWITCH = 6;</code>
     * @return The cABINLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getCABINLIGHTSSWITCH() {
      return cABINLIGHTSSWITCH_;
    }

    public static final int CRITICALLY_LOW_TIRE_PRESSURE_FIELD_NUMBER = 7;
    private int cRITICALLYLOWTIREPRESSURE_;
    /**
     * <code>int32 CRITICALLY_LOW_TIRE_PRESSURE = 7;</code>
     * @return The cRITICALLYLOWTIREPRESSURE.
     */
    @java.lang.Override
    public int getCRITICALLYLOWTIREPRESSURE() {
      return cRITICALLYLOWTIREPRESSURE_;
    }

    public static final int CURRENT_GEAR_FIELD_NUMBER = 8;
    private int cURRENTGEAR_;
    /**
     * <code>int32 CURRENT_GEAR = 8;</code>
     * @return The cURRENTGEAR.
     */
    @java.lang.Override
    public int getCURRENTGEAR() {
      return cURRENTGEAR_;
    }

    public static final int DISPLAY_BRIGHTNESS_FIELD_NUMBER = 9;
    private int dISPLAYBRIGHTNESS_;
    /**
     * <code>int32 DISPLAY_BRIGHTNESS = 9;</code>
     * @return The dISPLAYBRIGHTNESS.
     */
    @java.lang.Override
    public int getDISPLAYBRIGHTNESS() {
      return dISPLAYBRIGHTNESS_;
    }

    public static final int DISTANCE_DISPLAY_UNITS_FIELD_NUMBER = 10;
    private int dISTANCEDISPLAYUNITS_;
    /**
     * <code>int32 DISTANCE_DISPLAY_UNITS = 10;</code>
     * @return The dISTANCEDISPLAYUNITS.
     */
    @java.lang.Override
    public int getDISTANCEDISPLAYUNITS() {
      return dISTANCEDISPLAYUNITS_;
    }

    public static final int DOOR_LOCK_FIELD_NUMBER = 11;
    private int dOORLOCK_;
    /**
     * <code>int32 DOOR_LOCK = 11;</code>
     * @return The dOORLOCK.
     */
    @java.lang.Override
    public int getDOORLOCK() {
      return dOORLOCK_;
    }

    public static final int DOOR_MOVE_FIELD_NUMBER = 12;
    private int dOORMOVE_;
    /**
     * <code>int32 DOOR_MOVE = 12;</code>
     * @return The dOORMOVE.
     */
    @java.lang.Override
    public int getDOORMOVE() {
      return dOORMOVE_;
    }

    public static final int DOOR_POS_FIELD_NUMBER = 13;
    private int dOORPOS_;
    /**
     * <code>int32 DOOR_POS = 13;</code>
     * @return The dOORPOS.
     */
    @java.lang.Override
    public int getDOORPOS() {
      return dOORPOS_;
    }

    public static final int ELECTRONIC_TOLL_COLLECTION_CARD_STATUS_FIELD_NUMBER = 14;
    private int eLECTRONICTOLLCOLLECTIONCARDSTATUS_;
    /**
     * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 14;</code>
     * @return The eLECTRONICTOLLCOLLECTIONCARDSTATUS.
     */
    @java.lang.Override
    public int getELECTRONICTOLLCOLLECTIONCARDSTATUS() {
      return eLECTRONICTOLLCOLLECTIONCARDSTATUS_;
    }

    public static final int ELECTRONIC_TOLL_COLLECTION_CARD_TYPE_FIELD_NUMBER = 15;
    private int eLECTRONICTOLLCOLLECTIONCARDTYPE_;
    /**
     * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 15;</code>
     * @return The eLECTRONICTOLLCOLLECTIONCARDTYPE.
     */
    @java.lang.Override
    public int getELECTRONICTOLLCOLLECTIONCARDTYPE() {
      return eLECTRONICTOLLCOLLECTIONCARDTYPE_;
    }

    public static final int ENGINE_COOLANT_TEMP_FIELD_NUMBER = 16;
    private int eNGINECOOLANTTEMP_;
    /**
     * <code>int32 ENGINE_COOLANT_TEMP = 16;</code>
     * @return The eNGINECOOLANTTEMP.
     */
    @java.lang.Override
    public int getENGINECOOLANTTEMP() {
      return eNGINECOOLANTTEMP_;
    }

    public static final int ENGINE_OIL_LEVEL_FIELD_NUMBER = 17;
    private int eNGINEOILLEVEL_;
    /**
     * <code>int32 ENGINE_OIL_LEVEL = 17;</code>
     * @return The eNGINEOILLEVEL.
     */
    @java.lang.Override
    public int getENGINEOILLEVEL() {
      return eNGINEOILLEVEL_;
    }

    public static final int ENGINE_OIL_TEMP_FIELD_NUMBER = 18;
    private int eNGINEOILTEMP_;
    /**
     * <code>int32 ENGINE_OIL_TEMP = 18;</code>
     * @return The eNGINEOILTEMP.
     */
    @java.lang.Override
    public int getENGINEOILTEMP() {
      return eNGINEOILTEMP_;
    }

    public static final int ENGINE_RPM_FIELD_NUMBER = 19;
    private int eNGINERPM_;
    /**
     * <code>int32 ENGINE_RPM = 19;</code>
     * @return The eNGINERPM.
     */
    @java.lang.Override
    public int getENGINERPM() {
      return eNGINERPM_;
    }

    public static final int ENV_OUTSIDE_TEMPERATURE_FIELD_NUMBER = 20;
    private int eNVOUTSIDETEMPERATURE_;
    /**
     * <code>int32 ENV_OUTSIDE_TEMPERATURE = 20;</code>
     * @return The eNVOUTSIDETEMPERATURE.
     */
    @java.lang.Override
    public int getENVOUTSIDETEMPERATURE() {
      return eNVOUTSIDETEMPERATURE_;
    }

    public static final int EPOCH_TIME_FIELD_NUMBER = 21;
    private int ePOCHTIME_;
    /**
     * <code>int32 EPOCH_TIME = 21;</code>
     * @return The ePOCHTIME.
     */
    @java.lang.Override
    public int getEPOCHTIME() {
      return ePOCHTIME_;
    }

    public static final int EV_BATTERY_DISPLAY_UNITS_FIELD_NUMBER = 22;
    private int eVBATTERYDISPLAYUNITS_;
    /**
     * <code>int32 EV_BATTERY_DISPLAY_UNITS = 22;</code>
     * @return The eVBATTERYDISPLAYUNITS.
     */
    @java.lang.Override
    public int getEVBATTERYDISPLAYUNITS() {
      return eVBATTERYDISPLAYUNITS_;
    }

    public static final int EV_BATTERY_INSTANTANEOUS_CHARGE_RATE_FIELD_NUMBER = 23;
    private int eVBATTERYINSTANTANEOUSCHARGERATE_;
    /**
     * <code>int32 EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 23;</code>
     * @return The eVBATTERYINSTANTANEOUSCHARGERATE.
     */
    @java.lang.Override
    public int getEVBATTERYINSTANTANEOUSCHARGERATE() {
      return eVBATTERYINSTANTANEOUSCHARGERATE_;
    }

    public static final int EV_BATTERY_LEVEL_FIELD_NUMBER = 24;
    private int eVBATTERYLEVEL_;
    /**
     * <code>int32 EV_BATTERY_LEVEL = 24;</code>
     * @return The eVBATTERYLEVEL.
     */
    @java.lang.Override
    public int getEVBATTERYLEVEL() {
      return eVBATTERYLEVEL_;
    }

    public static final int EV_CHARGE_PORT_CONNECTED_FIELD_NUMBER = 25;
    private int eVCHARGEPORTCONNECTED_;
    /**
     * <code>int32 EV_CHARGE_PORT_CONNECTED = 25;</code>
     * @return The eVCHARGEPORTCONNECTED.
     */
    @java.lang.Override
    public int getEVCHARGEPORTCONNECTED() {
      return eVCHARGEPORTCONNECTED_;
    }

    public static final int EV_CHARGE_PORT_OPEN_FIELD_NUMBER = 26;
    private int eVCHARGEPORTOPEN_;
    /**
     * <code>int32 EV_CHARGE_PORT_OPEN = 26;</code>
     * @return The eVCHARGEPORTOPEN.
     */
    @java.lang.Override
    public int getEVCHARGEPORTOPEN() {
      return eVCHARGEPORTOPEN_;
    }

    public static final int FOG_LIGHTS_STATE_FIELD_NUMBER = 27;
    private int fOGLIGHTSSTATE_;
    /**
     * <code>int32 FOG_LIGHTS_STATE = 27;</code>
     * @return The fOGLIGHTSSTATE.
     */
    @java.lang.Override
    public int getFOGLIGHTSSTATE() {
      return fOGLIGHTSSTATE_;
    }

    public static final int FOG_LIGHTS_SWITCH_FIELD_NUMBER = 28;
    private int fOGLIGHTSSWITCH_;
    /**
     * <code>int32 FOG_LIGHTS_SWITCH = 28;</code>
     * @return The fOGLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getFOGLIGHTSSWITCH() {
      return fOGLIGHTSSWITCH_;
    }

    public static final int FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME_FIELD_NUMBER = 29;
    private int fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_;
    /**
     * <code>int32 FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 29;</code>
     * @return The fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME.
     */
    @java.lang.Override
    public int getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME() {
      return fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_;
    }

    public static final int FUEL_DOOR_OPEN_FIELD_NUMBER = 30;
    private int fUELDOOROPEN_;
    /**
     * <code>int32 FUEL_DOOR_OPEN = 30;</code>
     * @return The fUELDOOROPEN.
     */
    @java.lang.Override
    public int getFUELDOOROPEN() {
      return fUELDOOROPEN_;
    }

    public static final int FUEL_LEVEL_FIELD_NUMBER = 31;
    private int fUELLEVEL_;
    /**
     * <code>int32 FUEL_LEVEL = 31;</code>
     * @return The fUELLEVEL.
     */
    @java.lang.Override
    public int getFUELLEVEL() {
      return fUELLEVEL_;
    }

    public static final int FUEL_LEVEL_LOW_FIELD_NUMBER = 32;
    private int fUELLEVELLOW_;
    /**
     * <code>int32 FUEL_LEVEL_LOW = 32;</code>
     * @return The fUELLEVELLOW.
     */
    @java.lang.Override
    public int getFUELLEVELLOW() {
      return fUELLEVELLOW_;
    }

    public static final int FUEL_VOLUME_DISPLAY_UNITS_FIELD_NUMBER = 33;
    private int fUELVOLUMEDISPLAYUNITS_;
    /**
     * <code>int32 FUEL_VOLUME_DISPLAY_UNITS = 33;</code>
     * @return The fUELVOLUMEDISPLAYUNITS.
     */
    @java.lang.Override
    public int getFUELVOLUMEDISPLAYUNITS() {
      return fUELVOLUMEDISPLAYUNITS_;
    }

    public static final int GEAR_SELECTION_FIELD_NUMBER = 34;
    private int gEARSELECTION_;
    /**
     * <code>int32 GEAR_SELECTION = 34;</code>
     * @return The gEARSELECTION.
     */
    @java.lang.Override
    public int getGEARSELECTION() {
      return gEARSELECTION_;
    }

    public static final int HAZARD_LIGHTS_STATE_FIELD_NUMBER = 35;
    private int hAZARDLIGHTSSTATE_;
    /**
     * <code>int32 HAZARD_LIGHTS_STATE = 35;</code>
     * @return The hAZARDLIGHTSSTATE.
     */
    @java.lang.Override
    public int getHAZARDLIGHTSSTATE() {
      return hAZARDLIGHTSSTATE_;
    }

    public static final int HAZARD_LIGHTS_SWITCH_FIELD_NUMBER = 36;
    private int hAZARDLIGHTSSWITCH_;
    /**
     * <code>int32 HAZARD_LIGHTS_SWITCH = 36;</code>
     * @return The hAZARDLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getHAZARDLIGHTSSWITCH() {
      return hAZARDLIGHTSSWITCH_;
    }

    public static final int HEADLIGHTS_STATE_FIELD_NUMBER = 37;
    private int hEADLIGHTSSTATE_;
    /**
     * <code>int32 HEADLIGHTS_STATE = 37;</code>
     * @return The hEADLIGHTSSTATE.
     */
    @java.lang.Override
    public int getHEADLIGHTSSTATE() {
      return hEADLIGHTSSTATE_;
    }

    public static final int HEADLIGHTS_SWITCH_FIELD_NUMBER = 38;
    private int hEADLIGHTSSWITCH_;
    /**
     * <code>int32 HEADLIGHTS_SWITCH = 38;</code>
     * @return The hEADLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getHEADLIGHTSSWITCH() {
      return hEADLIGHTSSWITCH_;
    }

    public static final int HIGH_BEAM_LIGHTS_STATE_FIELD_NUMBER = 39;
    private int hIGHBEAMLIGHTSSTATE_;
    /**
     * <code>int32 HIGH_BEAM_LIGHTS_STATE = 39;</code>
     * @return The hIGHBEAMLIGHTSSTATE.
     */
    @java.lang.Override
    public int getHIGHBEAMLIGHTSSTATE() {
      return hIGHBEAMLIGHTSSTATE_;
    }

    public static final int HIGH_BEAM_LIGHTS_SWITCH_FIELD_NUMBER = 40;
    private int hIGHBEAMLIGHTSSWITCH_;
    /**
     * <code>int32 HIGH_BEAM_LIGHTS_SWITCH = 40;</code>
     * @return The hIGHBEAMLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getHIGHBEAMLIGHTSSWITCH() {
      return hIGHBEAMLIGHTSSWITCH_;
    }

    public static final int HVAC_ACTUAL_FAN_SPEED_RPM_FIELD_NUMBER = 41;
    private int hVACACTUALFANSPEEDRPM_;
    /**
     * <code>int32 HVAC_ACTUAL_FAN_SPEED_RPM = 41;</code>
     * @return The hVACACTUALFANSPEEDRPM.
     */
    @java.lang.Override
    public int getHVACACTUALFANSPEEDRPM() {
      return hVACACTUALFANSPEEDRPM_;
    }

    public static final int HVAC_AC_ON_FIELD_NUMBER = 42;
    private int hVACACON_;
    /**
     * <code>int32 HVAC_AC_ON = 42;</code>
     * @return The hVACACON.
     */
    @java.lang.Override
    public int getHVACACON() {
      return hVACACON_;
    }

    public static final int HVAC_AUTO_ON_FIELD_NUMBER = 43;
    private int hVACAUTOON_;
    /**
     * <code>int32 HVAC_AUTO_ON = 43;</code>
     * @return The hVACAUTOON.
     */
    @java.lang.Override
    public int getHVACAUTOON() {
      return hVACAUTOON_;
    }

    public static final int HVAC_AUTO_RECIRC_ON_FIELD_NUMBER = 44;
    private int hVACAUTORECIRCON_;
    /**
     * <code>int32 HVAC_AUTO_RECIRC_ON = 44;</code>
     * @return The hVACAUTORECIRCON.
     */
    @java.lang.Override
    public int getHVACAUTORECIRCON() {
      return hVACAUTORECIRCON_;
    }

    public static final int HVAC_DEFROSTER_FIELD_NUMBER = 45;
    private int hVACDEFROSTER_;
    /**
     * <code>int32 HVAC_DEFROSTER = 45;</code>
     * @return The hVACDEFROSTER.
     */
    @java.lang.Override
    public int getHVACDEFROSTER() {
      return hVACDEFROSTER_;
    }

    public static final int HVAC_DUAL_ON_FIELD_NUMBER = 46;
    private int hVACDUALON_;
    /**
     * <code>int32 HVAC_DUAL_ON = 46;</code>
     * @return The hVACDUALON.
     */
    @java.lang.Override
    public int getHVACDUALON() {
      return hVACDUALON_;
    }

    public static final int HVAC_FAN_DIRECTION_FIELD_NUMBER = 47;
    private int hVACFANDIRECTION_;
    /**
     * <code>int32 HVAC_FAN_DIRECTION = 47;</code>
     * @return The hVACFANDIRECTION.
     */
    @java.lang.Override
    public int getHVACFANDIRECTION() {
      return hVACFANDIRECTION_;
    }

    public static final int HVAC_FAN_DIRECTION_AVAILABLE_FIELD_NUMBER = 48;
    private int hVACFANDIRECTIONAVAILABLE_;
    /**
     * <code>int32 HVAC_FAN_DIRECTION_AVAILABLE = 48;</code>
     * @return The hVACFANDIRECTIONAVAILABLE.
     */
    @java.lang.Override
    public int getHVACFANDIRECTIONAVAILABLE() {
      return hVACFANDIRECTIONAVAILABLE_;
    }

    public static final int HVAC_FAN_SPEED_FIELD_NUMBER = 49;
    private int hVACFANSPEED_;
    /**
     * <code>int32 HVAC_FAN_SPEED = 49;</code>
     * @return The hVACFANSPEED.
     */
    @java.lang.Override
    public int getHVACFANSPEED() {
      return hVACFANSPEED_;
    }

    public static final int HVAC_MAX_AC_ON_FIELD_NUMBER = 50;
    private int hVACMAXACON_;
    /**
     * <code>int32 HVAC_MAX_AC_ON = 50;</code>
     * @return The hVACMAXACON.
     */
    @java.lang.Override
    public int getHVACMAXACON() {
      return hVACMAXACON_;
    }

    public static final int HVAC_MAX_DEFROST_ON_FIELD_NUMBER = 51;
    private int hVACMAXDEFROSTON_;
    /**
     * <code>int32 HVAC_MAX_DEFROST_ON = 51;</code>
     * @return The hVACMAXDEFROSTON.
     */
    @java.lang.Override
    public int getHVACMAXDEFROSTON() {
      return hVACMAXDEFROSTON_;
    }

    public static final int HVAC_POWER_ON_FIELD_NUMBER = 52;
    private int hVACPOWERON_;
    /**
     * <code>int32 HVAC_POWER_ON = 52;</code>
     * @return The hVACPOWERON.
     */
    @java.lang.Override
    public int getHVACPOWERON() {
      return hVACPOWERON_;
    }

    public static final int HVAC_RECIRC_ON_FIELD_NUMBER = 53;
    private int hVACRECIRCON_;
    /**
     * <code>int32 HVAC_RECIRC_ON = 53;</code>
     * @return The hVACRECIRCON.
     */
    @java.lang.Override
    public int getHVACRECIRCON() {
      return hVACRECIRCON_;
    }

    public static final int HVAC_SEAT_TEMPERATURE_FIELD_NUMBER = 54;
    private int hVACSEATTEMPERATURE_;
    /**
     * <code>int32 HVAC_SEAT_TEMPERATURE = 54;</code>
     * @return The hVACSEATTEMPERATURE.
     */
    @java.lang.Override
    public int getHVACSEATTEMPERATURE() {
      return hVACSEATTEMPERATURE_;
    }

    public static final int HVAC_SEAT_VENTILATION_FIELD_NUMBER = 55;
    private int hVACSEATVENTILATION_;
    /**
     * <code>int32 HVAC_SEAT_VENTILATION = 55;</code>
     * @return The hVACSEATVENTILATION.
     */
    @java.lang.Override
    public int getHVACSEATVENTILATION() {
      return hVACSEATVENTILATION_;
    }

    public static final int HVAC_SIDE_MIRROR_HEAT_FIELD_NUMBER = 56;
    private int hVACSIDEMIRRORHEAT_;
    /**
     * <code>int32 HVAC_SIDE_MIRROR_HEAT = 56;</code>
     * @return The hVACSIDEMIRRORHEAT.
     */
    @java.lang.Override
    public int getHVACSIDEMIRRORHEAT() {
      return hVACSIDEMIRRORHEAT_;
    }

    public static final int HVAC_STEERING_WHEEL_HEAT_FIELD_NUMBER = 57;
    private int hVACSTEERINGWHEELHEAT_;
    /**
     * <code>int32 HVAC_STEERING_WHEEL_HEAT = 57;</code>
     * @return The hVACSTEERINGWHEELHEAT.
     */
    @java.lang.Override
    public int getHVACSTEERINGWHEELHEAT() {
      return hVACSTEERINGWHEELHEAT_;
    }

    public static final int HVAC_TEMPERATURE_CURRENT_FIELD_NUMBER = 58;
    private int hVACTEMPERATURECURRENT_;
    /**
     * <code>int32 HVAC_TEMPERATURE_CURRENT = 58;</code>
     * @return The hVACTEMPERATURECURRENT.
     */
    @java.lang.Override
    public int getHVACTEMPERATURECURRENT() {
      return hVACTEMPERATURECURRENT_;
    }

    public static final int HVAC_TEMPERATURE_DISPLAY_UNITS_FIELD_NUMBER = 59;
    private int hVACTEMPERATUREDISPLAYUNITS_;
    /**
     * <code>int32 HVAC_TEMPERATURE_DISPLAY_UNITS = 59;</code>
     * @return The hVACTEMPERATUREDISPLAYUNITS.
     */
    @java.lang.Override
    public int getHVACTEMPERATUREDISPLAYUNITS() {
      return hVACTEMPERATUREDISPLAYUNITS_;
    }

    public static final int HVAC_TEMPERATURE_SET_FIELD_NUMBER = 60;
    private int hVACTEMPERATURESET_;
    /**
     * <code>int32 HVAC_TEMPERATURE_SET = 60;</code>
     * @return The hVACTEMPERATURESET.
     */
    @java.lang.Override
    public int getHVACTEMPERATURESET() {
      return hVACTEMPERATURESET_;
    }

    public static final int HVAC_TEMPERATURE_VALUE_SUGGESTION_FIELD_NUMBER = 61;
    private int hVACTEMPERATUREVALUESUGGESTION_;
    /**
     * <code>int32 HVAC_TEMPERATURE_VALUE_SUGGESTION = 61;</code>
     * @return The hVACTEMPERATUREVALUESUGGESTION.
     */
    @java.lang.Override
    public int getHVACTEMPERATUREVALUESUGGESTION() {
      return hVACTEMPERATUREVALUESUGGESTION_;
    }

    public static final int HW_KEY_INPUT_FIELD_NUMBER = 62;
    private int hWKEYINPUT_;
    /**
     * <code>int32 HW_KEY_INPUT = 62;</code>
     * @return The hWKEYINPUT.
     */
    @java.lang.Override
    public int getHWKEYINPUT() {
      return hWKEYINPUT_;
    }

    public static final int IGNITION_STATE_FIELD_NUMBER = 63;
    private int iGNITIONSTATE_;
    /**
     * <code>int32 IGNITION_STATE = 63;</code>
     * @return The iGNITIONSTATE.
     */
    @java.lang.Override
    public int getIGNITIONSTATE() {
      return iGNITIONSTATE_;
    }

    public static final int INFO_DRIVER_SEAT_FIELD_NUMBER = 64;
    private int iNFODRIVERSEAT_;
    /**
     * <code>int32 INFO_DRIVER_SEAT = 64;</code>
     * @return The iNFODRIVERSEAT.
     */
    @java.lang.Override
    public int getINFODRIVERSEAT() {
      return iNFODRIVERSEAT_;
    }

    public static final int INFO_EV_BATTERY_CAPACITY_FIELD_NUMBER = 65;
    private int iNFOEVBATTERYCAPACITY_;
    /**
     * <code>int32 INFO_EV_BATTERY_CAPACITY = 65;</code>
     * @return The iNFOEVBATTERYCAPACITY.
     */
    @java.lang.Override
    public int getINFOEVBATTERYCAPACITY() {
      return iNFOEVBATTERYCAPACITY_;
    }

    public static final int INFO_EV_CONNECTOR_TYPE_FIELD_NUMBER = 66;
    private int iNFOEVCONNECTORTYPE_;
    /**
     * <code>int32 INFO_EV_CONNECTOR_TYPE = 66;</code>
     * @return The iNFOEVCONNECTORTYPE.
     */
    @java.lang.Override
    public int getINFOEVCONNECTORTYPE() {
      return iNFOEVCONNECTORTYPE_;
    }

    public static final int INFO_EV_PORT_LOCATION_FIELD_NUMBER = 67;
    private int iNFOEVPORTLOCATION_;
    /**
     * <code>int32 INFO_EV_PORT_LOCATION = 67;</code>
     * @return The iNFOEVPORTLOCATION.
     */
    @java.lang.Override
    public int getINFOEVPORTLOCATION() {
      return iNFOEVPORTLOCATION_;
    }

    public static final int INFO_EXTERIOR_DIMENSIONS_FIELD_NUMBER = 68;
    private int iNFOEXTERIORDIMENSIONS_;
    /**
     * <code>int32 INFO_EXTERIOR_DIMENSIONS = 68;</code>
     * @return The iNFOEXTERIORDIMENSIONS.
     */
    @java.lang.Override
    public int getINFOEXTERIORDIMENSIONS() {
      return iNFOEXTERIORDIMENSIONS_;
    }

    public static final int INFO_FUEL_CAPACITY_FIELD_NUMBER = 69;
    private int iNFOFUELCAPACITY_;
    /**
     * <code>int32 INFO_FUEL_CAPACITY = 69;</code>
     * @return The iNFOFUELCAPACITY.
     */
    @java.lang.Override
    public int getINFOFUELCAPACITY() {
      return iNFOFUELCAPACITY_;
    }

    public static final int INFO_FUEL_DOOR_LOCATION_FIELD_NUMBER = 70;
    private int iNFOFUELDOORLOCATION_;
    /**
     * <code>int32 INFO_FUEL_DOOR_LOCATION = 70;</code>
     * @return The iNFOFUELDOORLOCATION.
     */
    @java.lang.Override
    public int getINFOFUELDOORLOCATION() {
      return iNFOFUELDOORLOCATION_;
    }

    public static final int INFO_FUEL_TYPE_FIELD_NUMBER = 71;
    private int iNFOFUELTYPE_;
    /**
     * <code>int32 INFO_FUEL_TYPE = 71;</code>
     * @return The iNFOFUELTYPE.
     */
    @java.lang.Override
    public int getINFOFUELTYPE() {
      return iNFOFUELTYPE_;
    }

    public static final int INFO_MAKE_FIELD_NUMBER = 72;
    private int iNFOMAKE_;
    /**
     * <code>int32 INFO_MAKE = 72;</code>
     * @return The iNFOMAKE.
     */
    @java.lang.Override
    public int getINFOMAKE() {
      return iNFOMAKE_;
    }

    public static final int INFO_MODEL_FIELD_NUMBER = 73;
    private int iNFOMODEL_;
    /**
     * <code>int32 INFO_MODEL = 73;</code>
     * @return The iNFOMODEL.
     */
    @java.lang.Override
    public int getINFOMODEL() {
      return iNFOMODEL_;
    }

    public static final int INFO_MODEL_YEAR_FIELD_NUMBER = 74;
    private int iNFOMODELYEAR_;
    /**
     * <code>int32 INFO_MODEL_YEAR = 74;</code>
     * @return The iNFOMODELYEAR.
     */
    @java.lang.Override
    public int getINFOMODELYEAR() {
      return iNFOMODELYEAR_;
    }

    public static final int INFO_MULTI_EV_PORT_LOCATIONS_FIELD_NUMBER = 75;
    private int iNFOMULTIEVPORTLOCATIONS_;
    /**
     * <code>int32 INFO_MULTI_EV_PORT_LOCATIONS = 75;</code>
     * @return The iNFOMULTIEVPORTLOCATIONS.
     */
    @java.lang.Override
    public int getINFOMULTIEVPORTLOCATIONS() {
      return iNFOMULTIEVPORTLOCATIONS_;
    }

    public static final int INFO_VIN_FIELD_NUMBER = 76;
    private int iNFOVIN_;
    /**
     * <code>int32 INFO_VIN = 76;</code>
     * @return The iNFOVIN.
     */
    @java.lang.Override
    public int getINFOVIN() {
      return iNFOVIN_;
    }

    public static final int INVALID_FIELD_NUMBER = 77;
    private int iNVALID_;
    /**
     * <code>int32 INVALID = 77;</code>
     * @return The iNVALID.
     */
    @java.lang.Override
    public int getINVALID() {
      return iNVALID_;
    }

    public static final int MIRROR_FOLD_FIELD_NUMBER = 78;
    private int mIRRORFOLD_;
    /**
     * <code>int32 MIRROR_FOLD = 78;</code>
     * @return The mIRRORFOLD.
     */
    @java.lang.Override
    public int getMIRRORFOLD() {
      return mIRRORFOLD_;
    }

    public static final int MIRROR_LOCK_FIELD_NUMBER = 79;
    private int mIRRORLOCK_;
    /**
     * <code>int32 MIRROR_LOCK = 79;</code>
     * @return The mIRRORLOCK.
     */
    @java.lang.Override
    public int getMIRRORLOCK() {
      return mIRRORLOCK_;
    }

    public static final int MIRROR_Y_MOVE_FIELD_NUMBER = 80;
    private int mIRRORYMOVE_;
    /**
     * <code>int32 MIRROR_Y_MOVE = 80;</code>
     * @return The mIRRORYMOVE.
     */
    @java.lang.Override
    public int getMIRRORYMOVE() {
      return mIRRORYMOVE_;
    }

    public static final int MIRROR_Y_POS_FIELD_NUMBER = 81;
    private int mIRRORYPOS_;
    /**
     * <code>int32 MIRROR_Y_POS = 81;</code>
     * @return The mIRRORYPOS.
     */
    @java.lang.Override
    public int getMIRRORYPOS() {
      return mIRRORYPOS_;
    }

    public static final int MIRROR_Z_MOVE_FIELD_NUMBER = 82;
    private int mIRRORZMOVE_;
    /**
     * <code>int32 MIRROR_Z_MOVE = 82;</code>
     * @return The mIRRORZMOVE.
     */
    @java.lang.Override
    public int getMIRRORZMOVE() {
      return mIRRORZMOVE_;
    }

    public static final int MIRROR_Z_POS_FIELD_NUMBER = 83;
    private int mIRRORZPOS_;
    /**
     * <code>int32 MIRROR_Z_POS = 83;</code>
     * @return The mIRRORZPOS.
     */
    @java.lang.Override
    public int getMIRRORZPOS() {
      return mIRRORZPOS_;
    }

    public static final int NIGHT_MODE_FIELD_NUMBER = 84;
    private int nIGHTMODE_;
    /**
     * <code>int32 NIGHT_MODE = 84;</code>
     * @return The nIGHTMODE.
     */
    @java.lang.Override
    public int getNIGHTMODE() {
      return nIGHTMODE_;
    }

    public static final int OBD2_FREEZE_FRAME_FIELD_NUMBER = 85;
    private int oBD2FREEZEFRAME_;
    /**
     * <code>int32 OBD2_FREEZE_FRAME = 85;</code>
     * @return The oBD2FREEZEFRAME.
     */
    @java.lang.Override
    public int getOBD2FREEZEFRAME() {
      return oBD2FREEZEFRAME_;
    }

    public static final int OBD2_FREEZE_FRAME_CLEAR_FIELD_NUMBER = 86;
    private int oBD2FREEZEFRAMECLEAR_;
    /**
     * <code>int32 OBD2_FREEZE_FRAME_CLEAR = 86;</code>
     * @return The oBD2FREEZEFRAMECLEAR.
     */
    @java.lang.Override
    public int getOBD2FREEZEFRAMECLEAR() {
      return oBD2FREEZEFRAMECLEAR_;
    }

    public static final int OBD2_FREEZE_FRAME_INFO_FIELD_NUMBER = 87;
    private int oBD2FREEZEFRAMEINFO_;
    /**
     * <code>int32 OBD2_FREEZE_FRAME_INFO = 87;</code>
     * @return The oBD2FREEZEFRAMEINFO.
     */
    @java.lang.Override
    public int getOBD2FREEZEFRAMEINFO() {
      return oBD2FREEZEFRAMEINFO_;
    }

    public static final int OBD2_LIVE_FRAME_FIELD_NUMBER = 88;
    private int oBD2LIVEFRAME_;
    /**
     * <code>int32 OBD2_LIVE_FRAME = 88;</code>
     * @return The oBD2LIVEFRAME.
     */
    @java.lang.Override
    public int getOBD2LIVEFRAME() {
      return oBD2LIVEFRAME_;
    }

    public static final int PARKING_BRAKE_AUTO_APPLY_FIELD_NUMBER = 89;
    private int pARKINGBRAKEAUTOAPPLY_;
    /**
     * <code>int32 PARKING_BRAKE_AUTO_APPLY = 89;</code>
     * @return The pARKINGBRAKEAUTOAPPLY.
     */
    @java.lang.Override
    public int getPARKINGBRAKEAUTOAPPLY() {
      return pARKINGBRAKEAUTOAPPLY_;
    }

    public static final int PARKING_BRAKE_ON_FIELD_NUMBER = 90;
    private int pARKINGBRAKEON_;
    /**
     * <code>int32 PARKING_BRAKE_ON = 90;</code>
     * @return The pARKINGBRAKEON.
     */
    @java.lang.Override
    public int getPARKINGBRAKEON() {
      return pARKINGBRAKEON_;
    }

    public static final int PERF_ODOMETER_FIELD_NUMBER = 91;
    private int pERFODOMETER_;
    /**
     * <code>int32 PERF_ODOMETER = 91;</code>
     * @return The pERFODOMETER.
     */
    @java.lang.Override
    public int getPERFODOMETER() {
      return pERFODOMETER_;
    }

    public static final int PERF_REAR_STEERING_ANGLE_FIELD_NUMBER = 92;
    private int pERFREARSTEERINGANGLE_;
    /**
     * <code>int32 PERF_REAR_STEERING_ANGLE = 92;</code>
     * @return The pERFREARSTEERINGANGLE.
     */
    @java.lang.Override
    public int getPERFREARSTEERINGANGLE() {
      return pERFREARSTEERINGANGLE_;
    }

    public static final int PERF_STEERING_ANGLE_FIELD_NUMBER = 93;
    private int pERFSTEERINGANGLE_;
    /**
     * <code>int32 PERF_STEERING_ANGLE = 93;</code>
     * @return The pERFSTEERINGANGLE.
     */
    @java.lang.Override
    public int getPERFSTEERINGANGLE() {
      return pERFSTEERINGANGLE_;
    }

    public static final int PERF_VEHICLE_SPEED_FIELD_NUMBER = 94;
    private int pERFVEHICLESPEED_;
    /**
     * <code>int32 PERF_VEHICLE_SPEED = 94;</code>
     * @return The pERFVEHICLESPEED.
     */
    @java.lang.Override
    public int getPERFVEHICLESPEED() {
      return pERFVEHICLESPEED_;
    }

    public static final int PERF_VEHICLE_SPEED_DISPLAY_FIELD_NUMBER = 95;
    private int pERFVEHICLESPEEDDISPLAY_;
    /**
     * <code>int32 PERF_VEHICLE_SPEED_DISPLAY = 95;</code>
     * @return The pERFVEHICLESPEEDDISPLAY.
     */
    @java.lang.Override
    public int getPERFVEHICLESPEEDDISPLAY() {
      return pERFVEHICLESPEEDDISPLAY_;
    }

    public static final int RANGE_REMAINING_FIELD_NUMBER = 96;
    private int rANGEREMAINING_;
    /**
     * <code>int32 RANGE_REMAINING = 96;</code>
     * @return The rANGEREMAINING.
     */
    @java.lang.Override
    public int getRANGEREMAINING() {
      return rANGEREMAINING_;
    }

    public static final int READING_LIGHTS_STATE_FIELD_NUMBER = 97;
    private int rEADINGLIGHTSSTATE_;
    /**
     * <code>int32 READING_LIGHTS_STATE = 97;</code>
     * @return The rEADINGLIGHTSSTATE.
     */
    @java.lang.Override
    public int getREADINGLIGHTSSTATE() {
      return rEADINGLIGHTSSTATE_;
    }

    public static final int READING_LIGHTS_SWITCH_FIELD_NUMBER = 98;
    private int rEADINGLIGHTSSWITCH_;
    /**
     * <code>int32 READING_LIGHTS_SWITCH = 98;</code>
     * @return The rEADINGLIGHTSSWITCH.
     */
    @java.lang.Override
    public int getREADINGLIGHTSSWITCH() {
      return rEADINGLIGHTSSWITCH_;
    }

    public static final int SEAT_BACKREST_ANGLE_1_MOVE_FIELD_NUMBER = 99;
    private int sEATBACKRESTANGLE1MOVE_;
    /**
     * <code>int32 SEAT_BACKREST_ANGLE_1_MOVE = 99;</code>
     * @return The sEATBACKRESTANGLE1MOVE.
     */
    @java.lang.Override
    public int getSEATBACKRESTANGLE1MOVE() {
      return sEATBACKRESTANGLE1MOVE_;
    }

    public static final int SEAT_BACKREST_ANGLE_1_POS_FIELD_NUMBER = 100;
    private int sEATBACKRESTANGLE1POS_;
    /**
     * <code>int32 SEAT_BACKREST_ANGLE_1_POS = 100;</code>
     * @return The sEATBACKRESTANGLE1POS.
     */
    @java.lang.Override
    public int getSEATBACKRESTANGLE1POS() {
      return sEATBACKRESTANGLE1POS_;
    }

    public static final int SEAT_BACKREST_ANGLE_2_MOVE_FIELD_NUMBER = 101;
    private int sEATBACKRESTANGLE2MOVE_;
    /**
     * <code>int32 SEAT_BACKREST_ANGLE_2_MOVE = 101;</code>
     * @return The sEATBACKRESTANGLE2MOVE.
     */
    @java.lang.Override
    public int getSEATBACKRESTANGLE2MOVE() {
      return sEATBACKRESTANGLE2MOVE_;
    }

    public static final int SEAT_BACKREST_ANGLE_2_POS_FIELD_NUMBER = 102;
    private int sEATBACKRESTANGLE2POS_;
    /**
     * <code>int32 SEAT_BACKREST_ANGLE_2_POS = 102;</code>
     * @return The sEATBACKRESTANGLE2POS.
     */
    @java.lang.Override
    public int getSEATBACKRESTANGLE2POS() {
      return sEATBACKRESTANGLE2POS_;
    }

    public static final int SEAT_BELT_BUCKLED_FIELD_NUMBER = 103;
    private int sEATBELTBUCKLED_;
    /**
     * <code>int32 SEAT_BELT_BUCKLED = 103;</code>
     * @return The sEATBELTBUCKLED.
     */
    @java.lang.Override
    public int getSEATBELTBUCKLED() {
      return sEATBELTBUCKLED_;
    }

    public static final int SEAT_BELT_HEIGHT_MOVE_FIELD_NUMBER = 104;
    private int sEATBELTHEIGHTMOVE_;
    /**
     * <code>int32 SEAT_BELT_HEIGHT_MOVE = 104;</code>
     * @return The sEATBELTHEIGHTMOVE.
     */
    @java.lang.Override
    public int getSEATBELTHEIGHTMOVE() {
      return sEATBELTHEIGHTMOVE_;
    }

    public static final int SEAT_BELT_HEIGHT_POS_FIELD_NUMBER = 105;
    private int sEATBELTHEIGHTPOS_;
    /**
     * <code>int32 SEAT_BELT_HEIGHT_POS = 105;</code>
     * @return The sEATBELTHEIGHTPOS.
     */
    @java.lang.Override
    public int getSEATBELTHEIGHTPOS() {
      return sEATBELTHEIGHTPOS_;
    }

    public static final int SEAT_DEPTH_MOVE_FIELD_NUMBER = 106;
    private int sEATDEPTHMOVE_;
    /**
     * <code>int32 SEAT_DEPTH_MOVE = 106;</code>
     * @return The sEATDEPTHMOVE.
     */
    @java.lang.Override
    public int getSEATDEPTHMOVE() {
      return sEATDEPTHMOVE_;
    }

    public static final int SEAT_DEPTH_POS_FIELD_NUMBER = 107;
    private int sEATDEPTHPOS_;
    /**
     * <code>int32 SEAT_DEPTH_POS = 107;</code>
     * @return The sEATDEPTHPOS.
     */
    @java.lang.Override
    public int getSEATDEPTHPOS() {
      return sEATDEPTHPOS_;
    }

    public static final int SEAT_FORE_AFT_MOVE_FIELD_NUMBER = 108;
    private int sEATFOREAFTMOVE_;
    /**
     * <code>int32 SEAT_FORE_AFT_MOVE = 108;</code>
     * @return The sEATFOREAFTMOVE.
     */
    @java.lang.Override
    public int getSEATFOREAFTMOVE() {
      return sEATFOREAFTMOVE_;
    }

    public static final int SEAT_FORE_AFT_POS_FIELD_NUMBER = 109;
    private int sEATFOREAFTPOS_;
    /**
     * <code>int32 SEAT_FORE_AFT_POS = 109;</code>
     * @return The sEATFOREAFTPOS.
     */
    @java.lang.Override
    public int getSEATFOREAFTPOS() {
      return sEATFOREAFTPOS_;
    }

    public static final int SEAT_HEADREST_ANGLE_MOVE_FIELD_NUMBER = 110;
    private int sEATHEADRESTANGLEMOVE_;
    /**
     * <code>int32 SEAT_HEADREST_ANGLE_MOVE = 110;</code>
     * @return The sEATHEADRESTANGLEMOVE.
     */
    @java.lang.Override
    public int getSEATHEADRESTANGLEMOVE() {
      return sEATHEADRESTANGLEMOVE_;
    }

    public static final int SEAT_HEADREST_ANGLE_POS_FIELD_NUMBER = 111;
    private int sEATHEADRESTANGLEPOS_;
    /**
     * <code>int32 SEAT_HEADREST_ANGLE_POS = 111;</code>
     * @return The sEATHEADRESTANGLEPOS.
     */
    @java.lang.Override
    public int getSEATHEADRESTANGLEPOS() {
      return sEATHEADRESTANGLEPOS_;
    }

    public static final int SEAT_HEADREST_FORE_AFT_MOVE_FIELD_NUMBER = 112;
    private int sEATHEADRESTFOREAFTMOVE_;
    /**
     * <code>int32 SEAT_HEADREST_FORE_AFT_MOVE = 112;</code>
     * @return The sEATHEADRESTFOREAFTMOVE.
     */
    @java.lang.Override
    public int getSEATHEADRESTFOREAFTMOVE() {
      return sEATHEADRESTFOREAFTMOVE_;
    }

    public static final int SEAT_HEADREST_FORE_AFT_POS_FIELD_NUMBER = 113;
    private int sEATHEADRESTFOREAFTPOS_;
    /**
     * <code>int32 SEAT_HEADREST_FORE_AFT_POS = 113;</code>
     * @return The sEATHEADRESTFOREAFTPOS.
     */
    @java.lang.Override
    public int getSEATHEADRESTFOREAFTPOS() {
      return sEATHEADRESTFOREAFTPOS_;
    }

    public static final int SEAT_HEADREST_HEIGHT_MOVE_FIELD_NUMBER = 114;
    private int sEATHEADRESTHEIGHTMOVE_;
    /**
     * <code>int32 SEAT_HEADREST_HEIGHT_MOVE = 114;</code>
     * @return The sEATHEADRESTHEIGHTMOVE.
     */
    @java.lang.Override
    public int getSEATHEADRESTHEIGHTMOVE() {
      return sEATHEADRESTHEIGHTMOVE_;
    }

    public static final int SEAT_HEADREST_HEIGHT_POS_FIELD_NUMBER = 115;
    private int sEATHEADRESTHEIGHTPOS_;
    /**
     * <code>int32 SEAT_HEADREST_HEIGHT_POS = 115;</code>
     * @return The sEATHEADRESTHEIGHTPOS.
     */
    @java.lang.Override
    public int getSEATHEADRESTHEIGHTPOS() {
      return sEATHEADRESTHEIGHTPOS_;
    }

    public static final int SEAT_HEIGHT_MOVE_FIELD_NUMBER = 116;
    private int sEATHEIGHTMOVE_;
    /**
     * <code>int32 SEAT_HEIGHT_MOVE = 116;</code>
     * @return The sEATHEIGHTMOVE.
     */
    @java.lang.Override
    public int getSEATHEIGHTMOVE() {
      return sEATHEIGHTMOVE_;
    }

    public static final int SEAT_HEIGHT_POS_FIELD_NUMBER = 117;
    private int sEATHEIGHTPOS_;
    /**
     * <code>int32 SEAT_HEIGHT_POS = 117;</code>
     * @return The sEATHEIGHTPOS.
     */
    @java.lang.Override
    public int getSEATHEIGHTPOS() {
      return sEATHEIGHTPOS_;
    }

    public static final int SEAT_LUMBAR_FORE_AFT_MOVE_FIELD_NUMBER = 118;
    private int sEATLUMBARFOREAFTMOVE_;
    /**
     * <code>int32 SEAT_LUMBAR_FORE_AFT_MOVE = 118;</code>
     * @return The sEATLUMBARFOREAFTMOVE.
     */
    @java.lang.Override
    public int getSEATLUMBARFOREAFTMOVE() {
      return sEATLUMBARFOREAFTMOVE_;
    }

    public static final int SEAT_LUMBAR_FORE_AFT_POS_FIELD_NUMBER = 119;
    private int sEATLUMBARFOREAFTPOS_;
    /**
     * <code>int32 SEAT_LUMBAR_FORE_AFT_POS = 119;</code>
     * @return The sEATLUMBARFOREAFTPOS.
     */
    @java.lang.Override
    public int getSEATLUMBARFOREAFTPOS() {
      return sEATLUMBARFOREAFTPOS_;
    }

    public static final int SEAT_LUMBAR_SIDE_SUPPORT_MOVE_FIELD_NUMBER = 120;
    private int sEATLUMBARSIDESUPPORTMOVE_;
    /**
     * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 120;</code>
     * @return The sEATLUMBARSIDESUPPORTMOVE.
     */
    @java.lang.Override
    public int getSEATLUMBARSIDESUPPORTMOVE() {
      return sEATLUMBARSIDESUPPORTMOVE_;
    }

    public static final int SEAT_LUMBAR_SIDE_SUPPORT_POS_FIELD_NUMBER = 121;
    private int sEATLUMBARSIDESUPPORTPOS_;
    /**
     * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_POS = 121;</code>
     * @return The sEATLUMBARSIDESUPPORTPOS.
     */
    @java.lang.Override
    public int getSEATLUMBARSIDESUPPORTPOS() {
      return sEATLUMBARSIDESUPPORTPOS_;
    }

    public static final int SEAT_MEMORY_SELECT_FIELD_NUMBER = 122;
    private int sEATMEMORYSELECT_;
    /**
     * <code>int32 SEAT_MEMORY_SELECT = 122;</code>
     * @return The sEATMEMORYSELECT.
     */
    @java.lang.Override
    public int getSEATMEMORYSELECT() {
      return sEATMEMORYSELECT_;
    }

    public static final int SEAT_MEMORY_SET_FIELD_NUMBER = 123;
    private int sEATMEMORYSET_;
    /**
     * <code>int32 SEAT_MEMORY_SET = 123;</code>
     * @return The sEATMEMORYSET.
     */
    @java.lang.Override
    public int getSEATMEMORYSET() {
      return sEATMEMORYSET_;
    }

    public static final int SEAT_OCCUPANCY_FIELD_NUMBER = 124;
    private int sEATOCCUPANCY_;
    /**
     * <code>int32 SEAT_OCCUPANCY = 124;</code>
     * @return The sEATOCCUPANCY.
     */
    @java.lang.Override
    public int getSEATOCCUPANCY() {
      return sEATOCCUPANCY_;
    }

    public static final int SEAT_TILT_MOVE_FIELD_NUMBER = 125;
    private int sEATTILTMOVE_;
    /**
     * <code>int32 SEAT_TILT_MOVE = 125;</code>
     * @return The sEATTILTMOVE.
     */
    @java.lang.Override
    public int getSEATTILTMOVE() {
      return sEATTILTMOVE_;
    }

    public static final int SEAT_TILT_POS_FIELD_NUMBER = 126;
    private int sEATTILTPOS_;
    /**
     * <code>int32 SEAT_TILT_POS = 126;</code>
     * @return The sEATTILTPOS.
     */
    @java.lang.Override
    public int getSEATTILTPOS() {
      return sEATTILTPOS_;
    }

    public static final int STORAGE_ENCRYPTION_BINDING_SEED_FIELD_NUMBER = 127;
    private int sTORAGEENCRYPTIONBINDINGSEED_;
    /**
     * <code>int32 STORAGE_ENCRYPTION_BINDING_SEED = 127;</code>
     * @return The sTORAGEENCRYPTIONBINDINGSEED.
     */
    @java.lang.Override
    public int getSTORAGEENCRYPTIONBINDINGSEED() {
      return sTORAGEENCRYPTIONBINDINGSEED_;
    }

    public static final int TIRE_PRESSURE_FIELD_NUMBER = 128;
    private int tIREPRESSURE_;
    /**
     * <code>int32 TIRE_PRESSURE = 128;</code>
     * @return The tIREPRESSURE.
     */
    @java.lang.Override
    public int getTIREPRESSURE() {
      return tIREPRESSURE_;
    }

    public static final int TIRE_PRESSURE_DISPLAY_UNITS_FIELD_NUMBER = 129;
    private int tIREPRESSUREDISPLAYUNITS_;
    /**
     * <code>int32 TIRE_PRESSURE_DISPLAY_UNITS = 129;</code>
     * @return The tIREPRESSUREDISPLAYUNITS.
     */
    @java.lang.Override
    public int getTIREPRESSUREDISPLAYUNITS() {
      return tIREPRESSUREDISPLAYUNITS_;
    }

    public static final int TRACTION_CONTROL_ACTIVE_FIELD_NUMBER = 130;
    private int tRACTIONCONTROLACTIVE_;
    /**
     * <code>int32 TRACTION_CONTROL_ACTIVE = 130;</code>
     * @return The tRACTIONCONTROLACTIVE.
     */
    @java.lang.Override
    public int getTRACTIONCONTROLACTIVE() {
      return tRACTIONCONTROLACTIVE_;
    }

    public static final int TURN_SIGNAL_STATE_FIELD_NUMBER = 131;
    private int tURNSIGNALSTATE_;
    /**
     * <code>int32 TURN_SIGNAL_STATE = 131;</code>
     * @return The tURNSIGNALSTATE.
     */
    @java.lang.Override
    public int getTURNSIGNALSTATE() {
      return tURNSIGNALSTATE_;
    }

    public static final int VEHICLE_MAP_SERVICE_FIELD_NUMBER = 132;
    private int vEHICLEMAPSERVICE_;
    /**
     * <code>int32 VEHICLE_MAP_SERVICE = 132;</code>
     * @return The vEHICLEMAPSERVICE.
     */
    @java.lang.Override
    public int getVEHICLEMAPSERVICE() {
      return vEHICLEMAPSERVICE_;
    }

    public static final int WHEEL_TICK_FIELD_NUMBER = 133;
    private int wHEELTICK_;
    /**
     * <code>int32 WHEEL_TICK = 133;</code>
     * @return The wHEELTICK.
     */
    @java.lang.Override
    public int getWHEELTICK() {
      return wHEELTICK_;
    }

    public static final int WINDOW_LOCK_FIELD_NUMBER = 134;
    private int wINDOWLOCK_;
    /**
     * <code>int32 WINDOW_LOCK = 134;</code>
     * @return The wINDOWLOCK.
     */
    @java.lang.Override
    public int getWINDOWLOCK() {
      return wINDOWLOCK_;
    }

    public static final int WINDOW_MOVE_FIELD_NUMBER = 135;
    private int wINDOWMOVE_;
    /**
     * <code>int32 WINDOW_MOVE = 135;</code>
     * @return The wINDOWMOVE.
     */
    @java.lang.Override
    public int getWINDOWMOVE() {
      return wINDOWMOVE_;
    }

    public static final int WINDOW_POS_FIELD_NUMBER = 136;
    private int wINDOWPOS_;
    /**
     * <code>int32 WINDOW_POS = 136;</code>
     * @return The wINDOWPOS.
     */
    @java.lang.Override
    public int getWINDOWPOS() {
      return wINDOWPOS_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (aBSACTIVE_ != 0) {
        output.writeInt32(1, aBSACTIVE_);
      }
      if (aPPOWERBOOTUPREASON_ != 0) {
        output.writeInt32(2, aPPOWERBOOTUPREASON_);
      }
      if (aPPOWERSTATEREPORT_ != 0) {
        output.writeInt32(3, aPPOWERSTATEREPORT_);
      }
      if (aPPOWERSTATEREQ_ != 0) {
        output.writeInt32(4, aPPOWERSTATEREQ_);
      }
      if (cABINLIGHTSSTATE_ != 0) {
        output.writeInt32(5, cABINLIGHTSSTATE_);
      }
      if (cABINLIGHTSSWITCH_ != 0) {
        output.writeInt32(6, cABINLIGHTSSWITCH_);
      }
      if (cRITICALLYLOWTIREPRESSURE_ != 0) {
        output.writeInt32(7, cRITICALLYLOWTIREPRESSURE_);
      }
      if (cURRENTGEAR_ != 0) {
        output.writeInt32(8, cURRENTGEAR_);
      }
      if (dISPLAYBRIGHTNESS_ != 0) {
        output.writeInt32(9, dISPLAYBRIGHTNESS_);
      }
      if (dISTANCEDISPLAYUNITS_ != 0) {
        output.writeInt32(10, dISTANCEDISPLAYUNITS_);
      }
      if (dOORLOCK_ != 0) {
        output.writeInt32(11, dOORLOCK_);
      }
      if (dOORMOVE_ != 0) {
        output.writeInt32(12, dOORMOVE_);
      }
      if (dOORPOS_ != 0) {
        output.writeInt32(13, dOORPOS_);
      }
      if (eLECTRONICTOLLCOLLECTIONCARDSTATUS_ != 0) {
        output.writeInt32(14, eLECTRONICTOLLCOLLECTIONCARDSTATUS_);
      }
      if (eLECTRONICTOLLCOLLECTIONCARDTYPE_ != 0) {
        output.writeInt32(15, eLECTRONICTOLLCOLLECTIONCARDTYPE_);
      }
      if (eNGINECOOLANTTEMP_ != 0) {
        output.writeInt32(16, eNGINECOOLANTTEMP_);
      }
      if (eNGINEOILLEVEL_ != 0) {
        output.writeInt32(17, eNGINEOILLEVEL_);
      }
      if (eNGINEOILTEMP_ != 0) {
        output.writeInt32(18, eNGINEOILTEMP_);
      }
      if (eNGINERPM_ != 0) {
        output.writeInt32(19, eNGINERPM_);
      }
      if (eNVOUTSIDETEMPERATURE_ != 0) {
        output.writeInt32(20, eNVOUTSIDETEMPERATURE_);
      }
      if (ePOCHTIME_ != 0) {
        output.writeInt32(21, ePOCHTIME_);
      }
      if (eVBATTERYDISPLAYUNITS_ != 0) {
        output.writeInt32(22, eVBATTERYDISPLAYUNITS_);
      }
      if (eVBATTERYINSTANTANEOUSCHARGERATE_ != 0) {
        output.writeInt32(23, eVBATTERYINSTANTANEOUSCHARGERATE_);
      }
      if (eVBATTERYLEVEL_ != 0) {
        output.writeInt32(24, eVBATTERYLEVEL_);
      }
      if (eVCHARGEPORTCONNECTED_ != 0) {
        output.writeInt32(25, eVCHARGEPORTCONNECTED_);
      }
      if (eVCHARGEPORTOPEN_ != 0) {
        output.writeInt32(26, eVCHARGEPORTOPEN_);
      }
      if (fOGLIGHTSSTATE_ != 0) {
        output.writeInt32(27, fOGLIGHTSSTATE_);
      }
      if (fOGLIGHTSSWITCH_ != 0) {
        output.writeInt32(28, fOGLIGHTSSWITCH_);
      }
      if (fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ != 0) {
        output.writeInt32(29, fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_);
      }
      if (fUELDOOROPEN_ != 0) {
        output.writeInt32(30, fUELDOOROPEN_);
      }
      if (fUELLEVEL_ != 0) {
        output.writeInt32(31, fUELLEVEL_);
      }
      if (fUELLEVELLOW_ != 0) {
        output.writeInt32(32, fUELLEVELLOW_);
      }
      if (fUELVOLUMEDISPLAYUNITS_ != 0) {
        output.writeInt32(33, fUELVOLUMEDISPLAYUNITS_);
      }
      if (gEARSELECTION_ != 0) {
        output.writeInt32(34, gEARSELECTION_);
      }
      if (hAZARDLIGHTSSTATE_ != 0) {
        output.writeInt32(35, hAZARDLIGHTSSTATE_);
      }
      if (hAZARDLIGHTSSWITCH_ != 0) {
        output.writeInt32(36, hAZARDLIGHTSSWITCH_);
      }
      if (hEADLIGHTSSTATE_ != 0) {
        output.writeInt32(37, hEADLIGHTSSTATE_);
      }
      if (hEADLIGHTSSWITCH_ != 0) {
        output.writeInt32(38, hEADLIGHTSSWITCH_);
      }
      if (hIGHBEAMLIGHTSSTATE_ != 0) {
        output.writeInt32(39, hIGHBEAMLIGHTSSTATE_);
      }
      if (hIGHBEAMLIGHTSSWITCH_ != 0) {
        output.writeInt32(40, hIGHBEAMLIGHTSSWITCH_);
      }
      if (hVACACTUALFANSPEEDRPM_ != 0) {
        output.writeInt32(41, hVACACTUALFANSPEEDRPM_);
      }
      if (hVACACON_ != 0) {
        output.writeInt32(42, hVACACON_);
      }
      if (hVACAUTOON_ != 0) {
        output.writeInt32(43, hVACAUTOON_);
      }
      if (hVACAUTORECIRCON_ != 0) {
        output.writeInt32(44, hVACAUTORECIRCON_);
      }
      if (hVACDEFROSTER_ != 0) {
        output.writeInt32(45, hVACDEFROSTER_);
      }
      if (hVACDUALON_ != 0) {
        output.writeInt32(46, hVACDUALON_);
      }
      if (hVACFANDIRECTION_ != 0) {
        output.writeInt32(47, hVACFANDIRECTION_);
      }
      if (hVACFANDIRECTIONAVAILABLE_ != 0) {
        output.writeInt32(48, hVACFANDIRECTIONAVAILABLE_);
      }
      if (hVACFANSPEED_ != 0) {
        output.writeInt32(49, hVACFANSPEED_);
      }
      if (hVACMAXACON_ != 0) {
        output.writeInt32(50, hVACMAXACON_);
      }
      if (hVACMAXDEFROSTON_ != 0) {
        output.writeInt32(51, hVACMAXDEFROSTON_);
      }
      if (hVACPOWERON_ != 0) {
        output.writeInt32(52, hVACPOWERON_);
      }
      if (hVACRECIRCON_ != 0) {
        output.writeInt32(53, hVACRECIRCON_);
      }
      if (hVACSEATTEMPERATURE_ != 0) {
        output.writeInt32(54, hVACSEATTEMPERATURE_);
      }
      if (hVACSEATVENTILATION_ != 0) {
        output.writeInt32(55, hVACSEATVENTILATION_);
      }
      if (hVACSIDEMIRRORHEAT_ != 0) {
        output.writeInt32(56, hVACSIDEMIRRORHEAT_);
      }
      if (hVACSTEERINGWHEELHEAT_ != 0) {
        output.writeInt32(57, hVACSTEERINGWHEELHEAT_);
      }
      if (hVACTEMPERATURECURRENT_ != 0) {
        output.writeInt32(58, hVACTEMPERATURECURRENT_);
      }
      if (hVACTEMPERATUREDISPLAYUNITS_ != 0) {
        output.writeInt32(59, hVACTEMPERATUREDISPLAYUNITS_);
      }
      if (hVACTEMPERATURESET_ != 0) {
        output.writeInt32(60, hVACTEMPERATURESET_);
      }
      if (hVACTEMPERATUREVALUESUGGESTION_ != 0) {
        output.writeInt32(61, hVACTEMPERATUREVALUESUGGESTION_);
      }
      if (hWKEYINPUT_ != 0) {
        output.writeInt32(62, hWKEYINPUT_);
      }
      if (iGNITIONSTATE_ != 0) {
        output.writeInt32(63, iGNITIONSTATE_);
      }
      if (iNFODRIVERSEAT_ != 0) {
        output.writeInt32(64, iNFODRIVERSEAT_);
      }
      if (iNFOEVBATTERYCAPACITY_ != 0) {
        output.writeInt32(65, iNFOEVBATTERYCAPACITY_);
      }
      if (iNFOEVCONNECTORTYPE_ != 0) {
        output.writeInt32(66, iNFOEVCONNECTORTYPE_);
      }
      if (iNFOEVPORTLOCATION_ != 0) {
        output.writeInt32(67, iNFOEVPORTLOCATION_);
      }
      if (iNFOEXTERIORDIMENSIONS_ != 0) {
        output.writeInt32(68, iNFOEXTERIORDIMENSIONS_);
      }
      if (iNFOFUELCAPACITY_ != 0) {
        output.writeInt32(69, iNFOFUELCAPACITY_);
      }
      if (iNFOFUELDOORLOCATION_ != 0) {
        output.writeInt32(70, iNFOFUELDOORLOCATION_);
      }
      if (iNFOFUELTYPE_ != 0) {
        output.writeInt32(71, iNFOFUELTYPE_);
      }
      if (iNFOMAKE_ != 0) {
        output.writeInt32(72, iNFOMAKE_);
      }
      if (iNFOMODEL_ != 0) {
        output.writeInt32(73, iNFOMODEL_);
      }
      if (iNFOMODELYEAR_ != 0) {
        output.writeInt32(74, iNFOMODELYEAR_);
      }
      if (iNFOMULTIEVPORTLOCATIONS_ != 0) {
        output.writeInt32(75, iNFOMULTIEVPORTLOCATIONS_);
      }
      if (iNFOVIN_ != 0) {
        output.writeInt32(76, iNFOVIN_);
      }
      if (iNVALID_ != 0) {
        output.writeInt32(77, iNVALID_);
      }
      if (mIRRORFOLD_ != 0) {
        output.writeInt32(78, mIRRORFOLD_);
      }
      if (mIRRORLOCK_ != 0) {
        output.writeInt32(79, mIRRORLOCK_);
      }
      if (mIRRORYMOVE_ != 0) {
        output.writeInt32(80, mIRRORYMOVE_);
      }
      if (mIRRORYPOS_ != 0) {
        output.writeInt32(81, mIRRORYPOS_);
      }
      if (mIRRORZMOVE_ != 0) {
        output.writeInt32(82, mIRRORZMOVE_);
      }
      if (mIRRORZPOS_ != 0) {
        output.writeInt32(83, mIRRORZPOS_);
      }
      if (nIGHTMODE_ != 0) {
        output.writeInt32(84, nIGHTMODE_);
      }
      if (oBD2FREEZEFRAME_ != 0) {
        output.writeInt32(85, oBD2FREEZEFRAME_);
      }
      if (oBD2FREEZEFRAMECLEAR_ != 0) {
        output.writeInt32(86, oBD2FREEZEFRAMECLEAR_);
      }
      if (oBD2FREEZEFRAMEINFO_ != 0) {
        output.writeInt32(87, oBD2FREEZEFRAMEINFO_);
      }
      if (oBD2LIVEFRAME_ != 0) {
        output.writeInt32(88, oBD2LIVEFRAME_);
      }
      if (pARKINGBRAKEAUTOAPPLY_ != 0) {
        output.writeInt32(89, pARKINGBRAKEAUTOAPPLY_);
      }
      if (pARKINGBRAKEON_ != 0) {
        output.writeInt32(90, pARKINGBRAKEON_);
      }
      if (pERFODOMETER_ != 0) {
        output.writeInt32(91, pERFODOMETER_);
      }
      if (pERFREARSTEERINGANGLE_ != 0) {
        output.writeInt32(92, pERFREARSTEERINGANGLE_);
      }
      if (pERFSTEERINGANGLE_ != 0) {
        output.writeInt32(93, pERFSTEERINGANGLE_);
      }
      if (pERFVEHICLESPEED_ != 0) {
        output.writeInt32(94, pERFVEHICLESPEED_);
      }
      if (pERFVEHICLESPEEDDISPLAY_ != 0) {
        output.writeInt32(95, pERFVEHICLESPEEDDISPLAY_);
      }
      if (rANGEREMAINING_ != 0) {
        output.writeInt32(96, rANGEREMAINING_);
      }
      if (rEADINGLIGHTSSTATE_ != 0) {
        output.writeInt32(97, rEADINGLIGHTSSTATE_);
      }
      if (rEADINGLIGHTSSWITCH_ != 0) {
        output.writeInt32(98, rEADINGLIGHTSSWITCH_);
      }
      if (sEATBACKRESTANGLE1MOVE_ != 0) {
        output.writeInt32(99, sEATBACKRESTANGLE1MOVE_);
      }
      if (sEATBACKRESTANGLE1POS_ != 0) {
        output.writeInt32(100, sEATBACKRESTANGLE1POS_);
      }
      if (sEATBACKRESTANGLE2MOVE_ != 0) {
        output.writeInt32(101, sEATBACKRESTANGLE2MOVE_);
      }
      if (sEATBACKRESTANGLE2POS_ != 0) {
        output.writeInt32(102, sEATBACKRESTANGLE2POS_);
      }
      if (sEATBELTBUCKLED_ != 0) {
        output.writeInt32(103, sEATBELTBUCKLED_);
      }
      if (sEATBELTHEIGHTMOVE_ != 0) {
        output.writeInt32(104, sEATBELTHEIGHTMOVE_);
      }
      if (sEATBELTHEIGHTPOS_ != 0) {
        output.writeInt32(105, sEATBELTHEIGHTPOS_);
      }
      if (sEATDEPTHMOVE_ != 0) {
        output.writeInt32(106, sEATDEPTHMOVE_);
      }
      if (sEATDEPTHPOS_ != 0) {
        output.writeInt32(107, sEATDEPTHPOS_);
      }
      if (sEATFOREAFTMOVE_ != 0) {
        output.writeInt32(108, sEATFOREAFTMOVE_);
      }
      if (sEATFOREAFTPOS_ != 0) {
        output.writeInt32(109, sEATFOREAFTPOS_);
      }
      if (sEATHEADRESTANGLEMOVE_ != 0) {
        output.writeInt32(110, sEATHEADRESTANGLEMOVE_);
      }
      if (sEATHEADRESTANGLEPOS_ != 0) {
        output.writeInt32(111, sEATHEADRESTANGLEPOS_);
      }
      if (sEATHEADRESTFOREAFTMOVE_ != 0) {
        output.writeInt32(112, sEATHEADRESTFOREAFTMOVE_);
      }
      if (sEATHEADRESTFOREAFTPOS_ != 0) {
        output.writeInt32(113, sEATHEADRESTFOREAFTPOS_);
      }
      if (sEATHEADRESTHEIGHTMOVE_ != 0) {
        output.writeInt32(114, sEATHEADRESTHEIGHTMOVE_);
      }
      if (sEATHEADRESTHEIGHTPOS_ != 0) {
        output.writeInt32(115, sEATHEADRESTHEIGHTPOS_);
      }
      if (sEATHEIGHTMOVE_ != 0) {
        output.writeInt32(116, sEATHEIGHTMOVE_);
      }
      if (sEATHEIGHTPOS_ != 0) {
        output.writeInt32(117, sEATHEIGHTPOS_);
      }
      if (sEATLUMBARFOREAFTMOVE_ != 0) {
        output.writeInt32(118, sEATLUMBARFOREAFTMOVE_);
      }
      if (sEATLUMBARFOREAFTPOS_ != 0) {
        output.writeInt32(119, sEATLUMBARFOREAFTPOS_);
      }
      if (sEATLUMBARSIDESUPPORTMOVE_ != 0) {
        output.writeInt32(120, sEATLUMBARSIDESUPPORTMOVE_);
      }
      if (sEATLUMBARSIDESUPPORTPOS_ != 0) {
        output.writeInt32(121, sEATLUMBARSIDESUPPORTPOS_);
      }
      if (sEATMEMORYSELECT_ != 0) {
        output.writeInt32(122, sEATMEMORYSELECT_);
      }
      if (sEATMEMORYSET_ != 0) {
        output.writeInt32(123, sEATMEMORYSET_);
      }
      if (sEATOCCUPANCY_ != 0) {
        output.writeInt32(124, sEATOCCUPANCY_);
      }
      if (sEATTILTMOVE_ != 0) {
        output.writeInt32(125, sEATTILTMOVE_);
      }
      if (sEATTILTPOS_ != 0) {
        output.writeInt32(126, sEATTILTPOS_);
      }
      if (sTORAGEENCRYPTIONBINDINGSEED_ != 0) {
        output.writeInt32(127, sTORAGEENCRYPTIONBINDINGSEED_);
      }
      if (tIREPRESSURE_ != 0) {
        output.writeInt32(128, tIREPRESSURE_);
      }
      if (tIREPRESSUREDISPLAYUNITS_ != 0) {
        output.writeInt32(129, tIREPRESSUREDISPLAYUNITS_);
      }
      if (tRACTIONCONTROLACTIVE_ != 0) {
        output.writeInt32(130, tRACTIONCONTROLACTIVE_);
      }
      if (tURNSIGNALSTATE_ != 0) {
        output.writeInt32(131, tURNSIGNALSTATE_);
      }
      if (vEHICLEMAPSERVICE_ != 0) {
        output.writeInt32(132, vEHICLEMAPSERVICE_);
      }
      if (wHEELTICK_ != 0) {
        output.writeInt32(133, wHEELTICK_);
      }
      if (wINDOWLOCK_ != 0) {
        output.writeInt32(134, wINDOWLOCK_);
      }
      if (wINDOWMOVE_ != 0) {
        output.writeInt32(135, wINDOWMOVE_);
      }
      if (wINDOWPOS_ != 0) {
        output.writeInt32(136, wINDOWPOS_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (aBSACTIVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, aBSACTIVE_);
      }
      if (aPPOWERBOOTUPREASON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, aPPOWERBOOTUPREASON_);
      }
      if (aPPOWERSTATEREPORT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, aPPOWERSTATEREPORT_);
      }
      if (aPPOWERSTATEREQ_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, aPPOWERSTATEREQ_);
      }
      if (cABINLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cABINLIGHTSSTATE_);
      }
      if (cABINLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cABINLIGHTSSWITCH_);
      }
      if (cRITICALLYLOWTIREPRESSURE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cRITICALLYLOWTIREPRESSURE_);
      }
      if (cURRENTGEAR_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, cURRENTGEAR_);
      }
      if (dISPLAYBRIGHTNESS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, dISPLAYBRIGHTNESS_);
      }
      if (dISTANCEDISPLAYUNITS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, dISTANCEDISPLAYUNITS_);
      }
      if (dOORLOCK_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, dOORLOCK_);
      }
      if (dOORMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, dOORMOVE_);
      }
      if (dOORPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, dOORPOS_);
      }
      if (eLECTRONICTOLLCOLLECTIONCARDSTATUS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, eLECTRONICTOLLCOLLECTIONCARDSTATUS_);
      }
      if (eLECTRONICTOLLCOLLECTIONCARDTYPE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, eLECTRONICTOLLCOLLECTIONCARDTYPE_);
      }
      if (eNGINECOOLANTTEMP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, eNGINECOOLANTTEMP_);
      }
      if (eNGINEOILLEVEL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, eNGINEOILLEVEL_);
      }
      if (eNGINEOILTEMP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, eNGINEOILTEMP_);
      }
      if (eNGINERPM_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, eNGINERPM_);
      }
      if (eNVOUTSIDETEMPERATURE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, eNVOUTSIDETEMPERATURE_);
      }
      if (ePOCHTIME_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, ePOCHTIME_);
      }
      if (eVBATTERYDISPLAYUNITS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, eVBATTERYDISPLAYUNITS_);
      }
      if (eVBATTERYINSTANTANEOUSCHARGERATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, eVBATTERYINSTANTANEOUSCHARGERATE_);
      }
      if (eVBATTERYLEVEL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, eVBATTERYLEVEL_);
      }
      if (eVCHARGEPORTCONNECTED_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, eVCHARGEPORTCONNECTED_);
      }
      if (eVCHARGEPORTOPEN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, eVCHARGEPORTOPEN_);
      }
      if (fOGLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, fOGLIGHTSSTATE_);
      }
      if (fOGLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, fOGLIGHTSSWITCH_);
      }
      if (fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_);
      }
      if (fUELDOOROPEN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, fUELDOOROPEN_);
      }
      if (fUELLEVEL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, fUELLEVEL_);
      }
      if (fUELLEVELLOW_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, fUELLEVELLOW_);
      }
      if (fUELVOLUMEDISPLAYUNITS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, fUELVOLUMEDISPLAYUNITS_);
      }
      if (gEARSELECTION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, gEARSELECTION_);
      }
      if (hAZARDLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, hAZARDLIGHTSSTATE_);
      }
      if (hAZARDLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, hAZARDLIGHTSSWITCH_);
      }
      if (hEADLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, hEADLIGHTSSTATE_);
      }
      if (hEADLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, hEADLIGHTSSWITCH_);
      }
      if (hIGHBEAMLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, hIGHBEAMLIGHTSSTATE_);
      }
      if (hIGHBEAMLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, hIGHBEAMLIGHTSSWITCH_);
      }
      if (hVACACTUALFANSPEEDRPM_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, hVACACTUALFANSPEEDRPM_);
      }
      if (hVACACON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, hVACACON_);
      }
      if (hVACAUTOON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, hVACAUTOON_);
      }
      if (hVACAUTORECIRCON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, hVACAUTORECIRCON_);
      }
      if (hVACDEFROSTER_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, hVACDEFROSTER_);
      }
      if (hVACDUALON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, hVACDUALON_);
      }
      if (hVACFANDIRECTION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, hVACFANDIRECTION_);
      }
      if (hVACFANDIRECTIONAVAILABLE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, hVACFANDIRECTIONAVAILABLE_);
      }
      if (hVACFANSPEED_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, hVACFANSPEED_);
      }
      if (hVACMAXACON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, hVACMAXACON_);
      }
      if (hVACMAXDEFROSTON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, hVACMAXDEFROSTON_);
      }
      if (hVACPOWERON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, hVACPOWERON_);
      }
      if (hVACRECIRCON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, hVACRECIRCON_);
      }
      if (hVACSEATTEMPERATURE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, hVACSEATTEMPERATURE_);
      }
      if (hVACSEATVENTILATION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, hVACSEATVENTILATION_);
      }
      if (hVACSIDEMIRRORHEAT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(56, hVACSIDEMIRRORHEAT_);
      }
      if (hVACSTEERINGWHEELHEAT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(57, hVACSTEERINGWHEELHEAT_);
      }
      if (hVACTEMPERATURECURRENT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, hVACTEMPERATURECURRENT_);
      }
      if (hVACTEMPERATUREDISPLAYUNITS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(59, hVACTEMPERATUREDISPLAYUNITS_);
      }
      if (hVACTEMPERATURESET_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, hVACTEMPERATURESET_);
      }
      if (hVACTEMPERATUREVALUESUGGESTION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, hVACTEMPERATUREVALUESUGGESTION_);
      }
      if (hWKEYINPUT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, hWKEYINPUT_);
      }
      if (iGNITIONSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(63, iGNITIONSTATE_);
      }
      if (iNFODRIVERSEAT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, iNFODRIVERSEAT_);
      }
      if (iNFOEVBATTERYCAPACITY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, iNFOEVBATTERYCAPACITY_);
      }
      if (iNFOEVCONNECTORTYPE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, iNFOEVCONNECTORTYPE_);
      }
      if (iNFOEVPORTLOCATION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, iNFOEVPORTLOCATION_);
      }
      if (iNFOEXTERIORDIMENSIONS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, iNFOEXTERIORDIMENSIONS_);
      }
      if (iNFOFUELCAPACITY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(69, iNFOFUELCAPACITY_);
      }
      if (iNFOFUELDOORLOCATION_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, iNFOFUELDOORLOCATION_);
      }
      if (iNFOFUELTYPE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(71, iNFOFUELTYPE_);
      }
      if (iNFOMAKE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(72, iNFOMAKE_);
      }
      if (iNFOMODEL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, iNFOMODEL_);
      }
      if (iNFOMODELYEAR_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(74, iNFOMODELYEAR_);
      }
      if (iNFOMULTIEVPORTLOCATIONS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(75, iNFOMULTIEVPORTLOCATIONS_);
      }
      if (iNFOVIN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(76, iNFOVIN_);
      }
      if (iNVALID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(77, iNVALID_);
      }
      if (mIRRORFOLD_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(78, mIRRORFOLD_);
      }
      if (mIRRORLOCK_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(79, mIRRORLOCK_);
      }
      if (mIRRORYMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(80, mIRRORYMOVE_);
      }
      if (mIRRORYPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(81, mIRRORYPOS_);
      }
      if (mIRRORZMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(82, mIRRORZMOVE_);
      }
      if (mIRRORZPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(83, mIRRORZPOS_);
      }
      if (nIGHTMODE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(84, nIGHTMODE_);
      }
      if (oBD2FREEZEFRAME_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(85, oBD2FREEZEFRAME_);
      }
      if (oBD2FREEZEFRAMECLEAR_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(86, oBD2FREEZEFRAMECLEAR_);
      }
      if (oBD2FREEZEFRAMEINFO_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(87, oBD2FREEZEFRAMEINFO_);
      }
      if (oBD2LIVEFRAME_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(88, oBD2LIVEFRAME_);
      }
      if (pARKINGBRAKEAUTOAPPLY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(89, pARKINGBRAKEAUTOAPPLY_);
      }
      if (pARKINGBRAKEON_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(90, pARKINGBRAKEON_);
      }
      if (pERFODOMETER_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(91, pERFODOMETER_);
      }
      if (pERFREARSTEERINGANGLE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(92, pERFREARSTEERINGANGLE_);
      }
      if (pERFSTEERINGANGLE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(93, pERFSTEERINGANGLE_);
      }
      if (pERFVEHICLESPEED_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(94, pERFVEHICLESPEED_);
      }
      if (pERFVEHICLESPEEDDISPLAY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(95, pERFVEHICLESPEEDDISPLAY_);
      }
      if (rANGEREMAINING_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(96, rANGEREMAINING_);
      }
      if (rEADINGLIGHTSSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(97, rEADINGLIGHTSSTATE_);
      }
      if (rEADINGLIGHTSSWITCH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(98, rEADINGLIGHTSSWITCH_);
      }
      if (sEATBACKRESTANGLE1MOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(99, sEATBACKRESTANGLE1MOVE_);
      }
      if (sEATBACKRESTANGLE1POS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(100, sEATBACKRESTANGLE1POS_);
      }
      if (sEATBACKRESTANGLE2MOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(101, sEATBACKRESTANGLE2MOVE_);
      }
      if (sEATBACKRESTANGLE2POS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(102, sEATBACKRESTANGLE2POS_);
      }
      if (sEATBELTBUCKLED_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(103, sEATBELTBUCKLED_);
      }
      if (sEATBELTHEIGHTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(104, sEATBELTHEIGHTMOVE_);
      }
      if (sEATBELTHEIGHTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(105, sEATBELTHEIGHTPOS_);
      }
      if (sEATDEPTHMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(106, sEATDEPTHMOVE_);
      }
      if (sEATDEPTHPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(107, sEATDEPTHPOS_);
      }
      if (sEATFOREAFTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(108, sEATFOREAFTMOVE_);
      }
      if (sEATFOREAFTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(109, sEATFOREAFTPOS_);
      }
      if (sEATHEADRESTANGLEMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(110, sEATHEADRESTANGLEMOVE_);
      }
      if (sEATHEADRESTANGLEPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(111, sEATHEADRESTANGLEPOS_);
      }
      if (sEATHEADRESTFOREAFTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(112, sEATHEADRESTFOREAFTMOVE_);
      }
      if (sEATHEADRESTFOREAFTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(113, sEATHEADRESTFOREAFTPOS_);
      }
      if (sEATHEADRESTHEIGHTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(114, sEATHEADRESTHEIGHTMOVE_);
      }
      if (sEATHEADRESTHEIGHTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(115, sEATHEADRESTHEIGHTPOS_);
      }
      if (sEATHEIGHTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(116, sEATHEIGHTMOVE_);
      }
      if (sEATHEIGHTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(117, sEATHEIGHTPOS_);
      }
      if (sEATLUMBARFOREAFTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(118, sEATLUMBARFOREAFTMOVE_);
      }
      if (sEATLUMBARFOREAFTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(119, sEATLUMBARFOREAFTPOS_);
      }
      if (sEATLUMBARSIDESUPPORTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, sEATLUMBARSIDESUPPORTMOVE_);
      }
      if (sEATLUMBARSIDESUPPORTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(121, sEATLUMBARSIDESUPPORTPOS_);
      }
      if (sEATMEMORYSELECT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(122, sEATMEMORYSELECT_);
      }
      if (sEATMEMORYSET_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(123, sEATMEMORYSET_);
      }
      if (sEATOCCUPANCY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(124, sEATOCCUPANCY_);
      }
      if (sEATTILTMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(125, sEATTILTMOVE_);
      }
      if (sEATTILTPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(126, sEATTILTPOS_);
      }
      if (sTORAGEENCRYPTIONBINDINGSEED_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(127, sTORAGEENCRYPTIONBINDINGSEED_);
      }
      if (tIREPRESSURE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(128, tIREPRESSURE_);
      }
      if (tIREPRESSUREDISPLAYUNITS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(129, tIREPRESSUREDISPLAYUNITS_);
      }
      if (tRACTIONCONTROLACTIVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(130, tRACTIONCONTROLACTIVE_);
      }
      if (tURNSIGNALSTATE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(131, tURNSIGNALSTATE_);
      }
      if (vEHICLEMAPSERVICE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(132, vEHICLEMAPSERVICE_);
      }
      if (wHEELTICK_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(133, wHEELTICK_);
      }
      if (wINDOWLOCK_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(134, wINDOWLOCK_);
      }
      if (wINDOWMOVE_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(135, wINDOWMOVE_);
      }
      if (wINDOWPOS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(136, wINDOWPOS_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VehicleDataOuterClass.AllFields)) {
        return super.equals(obj);
      }
      VehicleDataOuterClass.AllFields other = (VehicleDataOuterClass.AllFields) obj;

      if (getABSACTIVE()
          != other.getABSACTIVE()) return false;
      if (getAPPOWERBOOTUPREASON()
          != other.getAPPOWERBOOTUPREASON()) return false;
      if (getAPPOWERSTATEREPORT()
          != other.getAPPOWERSTATEREPORT()) return false;
      if (getAPPOWERSTATEREQ()
          != other.getAPPOWERSTATEREQ()) return false;
      if (getCABINLIGHTSSTATE()
          != other.getCABINLIGHTSSTATE()) return false;
      if (getCABINLIGHTSSWITCH()
          != other.getCABINLIGHTSSWITCH()) return false;
      if (getCRITICALLYLOWTIREPRESSURE()
          != other.getCRITICALLYLOWTIREPRESSURE()) return false;
      if (getCURRENTGEAR()
          != other.getCURRENTGEAR()) return false;
      if (getDISPLAYBRIGHTNESS()
          != other.getDISPLAYBRIGHTNESS()) return false;
      if (getDISTANCEDISPLAYUNITS()
          != other.getDISTANCEDISPLAYUNITS()) return false;
      if (getDOORLOCK()
          != other.getDOORLOCK()) return false;
      if (getDOORMOVE()
          != other.getDOORMOVE()) return false;
      if (getDOORPOS()
          != other.getDOORPOS()) return false;
      if (getELECTRONICTOLLCOLLECTIONCARDSTATUS()
          != other.getELECTRONICTOLLCOLLECTIONCARDSTATUS()) return false;
      if (getELECTRONICTOLLCOLLECTIONCARDTYPE()
          != other.getELECTRONICTOLLCOLLECTIONCARDTYPE()) return false;
      if (getENGINECOOLANTTEMP()
          != other.getENGINECOOLANTTEMP()) return false;
      if (getENGINEOILLEVEL()
          != other.getENGINEOILLEVEL()) return false;
      if (getENGINEOILTEMP()
          != other.getENGINEOILTEMP()) return false;
      if (getENGINERPM()
          != other.getENGINERPM()) return false;
      if (getENVOUTSIDETEMPERATURE()
          != other.getENVOUTSIDETEMPERATURE()) return false;
      if (getEPOCHTIME()
          != other.getEPOCHTIME()) return false;
      if (getEVBATTERYDISPLAYUNITS()
          != other.getEVBATTERYDISPLAYUNITS()) return false;
      if (getEVBATTERYINSTANTANEOUSCHARGERATE()
          != other.getEVBATTERYINSTANTANEOUSCHARGERATE()) return false;
      if (getEVBATTERYLEVEL()
          != other.getEVBATTERYLEVEL()) return false;
      if (getEVCHARGEPORTCONNECTED()
          != other.getEVCHARGEPORTCONNECTED()) return false;
      if (getEVCHARGEPORTOPEN()
          != other.getEVCHARGEPORTOPEN()) return false;
      if (getFOGLIGHTSSTATE()
          != other.getFOGLIGHTSSTATE()) return false;
      if (getFOGLIGHTSSWITCH()
          != other.getFOGLIGHTSSWITCH()) return false;
      if (getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME()
          != other.getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME()) return false;
      if (getFUELDOOROPEN()
          != other.getFUELDOOROPEN()) return false;
      if (getFUELLEVEL()
          != other.getFUELLEVEL()) return false;
      if (getFUELLEVELLOW()
          != other.getFUELLEVELLOW()) return false;
      if (getFUELVOLUMEDISPLAYUNITS()
          != other.getFUELVOLUMEDISPLAYUNITS()) return false;
      if (getGEARSELECTION()
          != other.getGEARSELECTION()) return false;
      if (getHAZARDLIGHTSSTATE()
          != other.getHAZARDLIGHTSSTATE()) return false;
      if (getHAZARDLIGHTSSWITCH()
          != other.getHAZARDLIGHTSSWITCH()) return false;
      if (getHEADLIGHTSSTATE()
          != other.getHEADLIGHTSSTATE()) return false;
      if (getHEADLIGHTSSWITCH()
          != other.getHEADLIGHTSSWITCH()) return false;
      if (getHIGHBEAMLIGHTSSTATE()
          != other.getHIGHBEAMLIGHTSSTATE()) return false;
      if (getHIGHBEAMLIGHTSSWITCH()
          != other.getHIGHBEAMLIGHTSSWITCH()) return false;
      if (getHVACACTUALFANSPEEDRPM()
          != other.getHVACACTUALFANSPEEDRPM()) return false;
      if (getHVACACON()
          != other.getHVACACON()) return false;
      if (getHVACAUTOON()
          != other.getHVACAUTOON()) return false;
      if (getHVACAUTORECIRCON()
          != other.getHVACAUTORECIRCON()) return false;
      if (getHVACDEFROSTER()
          != other.getHVACDEFROSTER()) return false;
      if (getHVACDUALON()
          != other.getHVACDUALON()) return false;
      if (getHVACFANDIRECTION()
          != other.getHVACFANDIRECTION()) return false;
      if (getHVACFANDIRECTIONAVAILABLE()
          != other.getHVACFANDIRECTIONAVAILABLE()) return false;
      if (getHVACFANSPEED()
          != other.getHVACFANSPEED()) return false;
      if (getHVACMAXACON()
          != other.getHVACMAXACON()) return false;
      if (getHVACMAXDEFROSTON()
          != other.getHVACMAXDEFROSTON()) return false;
      if (getHVACPOWERON()
          != other.getHVACPOWERON()) return false;
      if (getHVACRECIRCON()
          != other.getHVACRECIRCON()) return false;
      if (getHVACSEATTEMPERATURE()
          != other.getHVACSEATTEMPERATURE()) return false;
      if (getHVACSEATVENTILATION()
          != other.getHVACSEATVENTILATION()) return false;
      if (getHVACSIDEMIRRORHEAT()
          != other.getHVACSIDEMIRRORHEAT()) return false;
      if (getHVACSTEERINGWHEELHEAT()
          != other.getHVACSTEERINGWHEELHEAT()) return false;
      if (getHVACTEMPERATURECURRENT()
          != other.getHVACTEMPERATURECURRENT()) return false;
      if (getHVACTEMPERATUREDISPLAYUNITS()
          != other.getHVACTEMPERATUREDISPLAYUNITS()) return false;
      if (getHVACTEMPERATURESET()
          != other.getHVACTEMPERATURESET()) return false;
      if (getHVACTEMPERATUREVALUESUGGESTION()
          != other.getHVACTEMPERATUREVALUESUGGESTION()) return false;
      if (getHWKEYINPUT()
          != other.getHWKEYINPUT()) return false;
      if (getIGNITIONSTATE()
          != other.getIGNITIONSTATE()) return false;
      if (getINFODRIVERSEAT()
          != other.getINFODRIVERSEAT()) return false;
      if (getINFOEVBATTERYCAPACITY()
          != other.getINFOEVBATTERYCAPACITY()) return false;
      if (getINFOEVCONNECTORTYPE()
          != other.getINFOEVCONNECTORTYPE()) return false;
      if (getINFOEVPORTLOCATION()
          != other.getINFOEVPORTLOCATION()) return false;
      if (getINFOEXTERIORDIMENSIONS()
          != other.getINFOEXTERIORDIMENSIONS()) return false;
      if (getINFOFUELCAPACITY()
          != other.getINFOFUELCAPACITY()) return false;
      if (getINFOFUELDOORLOCATION()
          != other.getINFOFUELDOORLOCATION()) return false;
      if (getINFOFUELTYPE()
          != other.getINFOFUELTYPE()) return false;
      if (getINFOMAKE()
          != other.getINFOMAKE()) return false;
      if (getINFOMODEL()
          != other.getINFOMODEL()) return false;
      if (getINFOMODELYEAR()
          != other.getINFOMODELYEAR()) return false;
      if (getINFOMULTIEVPORTLOCATIONS()
          != other.getINFOMULTIEVPORTLOCATIONS()) return false;
      if (getINFOVIN()
          != other.getINFOVIN()) return false;
      if (getINVALID()
          != other.getINVALID()) return false;
      if (getMIRRORFOLD()
          != other.getMIRRORFOLD()) return false;
      if (getMIRRORLOCK()
          != other.getMIRRORLOCK()) return false;
      if (getMIRRORYMOVE()
          != other.getMIRRORYMOVE()) return false;
      if (getMIRRORYPOS()
          != other.getMIRRORYPOS()) return false;
      if (getMIRRORZMOVE()
          != other.getMIRRORZMOVE()) return false;
      if (getMIRRORZPOS()
          != other.getMIRRORZPOS()) return false;
      if (getNIGHTMODE()
          != other.getNIGHTMODE()) return false;
      if (getOBD2FREEZEFRAME()
          != other.getOBD2FREEZEFRAME()) return false;
      if (getOBD2FREEZEFRAMECLEAR()
          != other.getOBD2FREEZEFRAMECLEAR()) return false;
      if (getOBD2FREEZEFRAMEINFO()
          != other.getOBD2FREEZEFRAMEINFO()) return false;
      if (getOBD2LIVEFRAME()
          != other.getOBD2LIVEFRAME()) return false;
      if (getPARKINGBRAKEAUTOAPPLY()
          != other.getPARKINGBRAKEAUTOAPPLY()) return false;
      if (getPARKINGBRAKEON()
          != other.getPARKINGBRAKEON()) return false;
      if (getPERFODOMETER()
          != other.getPERFODOMETER()) return false;
      if (getPERFREARSTEERINGANGLE()
          != other.getPERFREARSTEERINGANGLE()) return false;
      if (getPERFSTEERINGANGLE()
          != other.getPERFSTEERINGANGLE()) return false;
      if (getPERFVEHICLESPEED()
          != other.getPERFVEHICLESPEED()) return false;
      if (getPERFVEHICLESPEEDDISPLAY()
          != other.getPERFVEHICLESPEEDDISPLAY()) return false;
      if (getRANGEREMAINING()
          != other.getRANGEREMAINING()) return false;
      if (getREADINGLIGHTSSTATE()
          != other.getREADINGLIGHTSSTATE()) return false;
      if (getREADINGLIGHTSSWITCH()
          != other.getREADINGLIGHTSSWITCH()) return false;
      if (getSEATBACKRESTANGLE1MOVE()
          != other.getSEATBACKRESTANGLE1MOVE()) return false;
      if (getSEATBACKRESTANGLE1POS()
          != other.getSEATBACKRESTANGLE1POS()) return false;
      if (getSEATBACKRESTANGLE2MOVE()
          != other.getSEATBACKRESTANGLE2MOVE()) return false;
      if (getSEATBACKRESTANGLE2POS()
          != other.getSEATBACKRESTANGLE2POS()) return false;
      if (getSEATBELTBUCKLED()
          != other.getSEATBELTBUCKLED()) return false;
      if (getSEATBELTHEIGHTMOVE()
          != other.getSEATBELTHEIGHTMOVE()) return false;
      if (getSEATBELTHEIGHTPOS()
          != other.getSEATBELTHEIGHTPOS()) return false;
      if (getSEATDEPTHMOVE()
          != other.getSEATDEPTHMOVE()) return false;
      if (getSEATDEPTHPOS()
          != other.getSEATDEPTHPOS()) return false;
      if (getSEATFOREAFTMOVE()
          != other.getSEATFOREAFTMOVE()) return false;
      if (getSEATFOREAFTPOS()
          != other.getSEATFOREAFTPOS()) return false;
      if (getSEATHEADRESTANGLEMOVE()
          != other.getSEATHEADRESTANGLEMOVE()) return false;
      if (getSEATHEADRESTANGLEPOS()
          != other.getSEATHEADRESTANGLEPOS()) return false;
      if (getSEATHEADRESTFOREAFTMOVE()
          != other.getSEATHEADRESTFOREAFTMOVE()) return false;
      if (getSEATHEADRESTFOREAFTPOS()
          != other.getSEATHEADRESTFOREAFTPOS()) return false;
      if (getSEATHEADRESTHEIGHTMOVE()
          != other.getSEATHEADRESTHEIGHTMOVE()) return false;
      if (getSEATHEADRESTHEIGHTPOS()
          != other.getSEATHEADRESTHEIGHTPOS()) return false;
      if (getSEATHEIGHTMOVE()
          != other.getSEATHEIGHTMOVE()) return false;
      if (getSEATHEIGHTPOS()
          != other.getSEATHEIGHTPOS()) return false;
      if (getSEATLUMBARFOREAFTMOVE()
          != other.getSEATLUMBARFOREAFTMOVE()) return false;
      if (getSEATLUMBARFOREAFTPOS()
          != other.getSEATLUMBARFOREAFTPOS()) return false;
      if (getSEATLUMBARSIDESUPPORTMOVE()
          != other.getSEATLUMBARSIDESUPPORTMOVE()) return false;
      if (getSEATLUMBARSIDESUPPORTPOS()
          != other.getSEATLUMBARSIDESUPPORTPOS()) return false;
      if (getSEATMEMORYSELECT()
          != other.getSEATMEMORYSELECT()) return false;
      if (getSEATMEMORYSET()
          != other.getSEATMEMORYSET()) return false;
      if (getSEATOCCUPANCY()
          != other.getSEATOCCUPANCY()) return false;
      if (getSEATTILTMOVE()
          != other.getSEATTILTMOVE()) return false;
      if (getSEATTILTPOS()
          != other.getSEATTILTPOS()) return false;
      if (getSTORAGEENCRYPTIONBINDINGSEED()
          != other.getSTORAGEENCRYPTIONBINDINGSEED()) return false;
      if (getTIREPRESSURE()
          != other.getTIREPRESSURE()) return false;
      if (getTIREPRESSUREDISPLAYUNITS()
          != other.getTIREPRESSUREDISPLAYUNITS()) return false;
      if (getTRACTIONCONTROLACTIVE()
          != other.getTRACTIONCONTROLACTIVE()) return false;
      if (getTURNSIGNALSTATE()
          != other.getTURNSIGNALSTATE()) return false;
      if (getVEHICLEMAPSERVICE()
          != other.getVEHICLEMAPSERVICE()) return false;
      if (getWHEELTICK()
          != other.getWHEELTICK()) return false;
      if (getWINDOWLOCK()
          != other.getWINDOWLOCK()) return false;
      if (getWINDOWMOVE()
          != other.getWINDOWMOVE()) return false;
      if (getWINDOWPOS()
          != other.getWINDOWPOS()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ABS_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + getABSACTIVE();
      hash = (37 * hash) + AP_POWER_BOOTUP_REASON_FIELD_NUMBER;
      hash = (53 * hash) + getAPPOWERBOOTUPREASON();
      hash = (37 * hash) + AP_POWER_STATE_REPORT_FIELD_NUMBER;
      hash = (53 * hash) + getAPPOWERSTATEREPORT();
      hash = (37 * hash) + AP_POWER_STATE_REQ_FIELD_NUMBER;
      hash = (53 * hash) + getAPPOWERSTATEREQ();
      hash = (37 * hash) + CABIN_LIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getCABINLIGHTSSTATE();
      hash = (37 * hash) + CABIN_LIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getCABINLIGHTSSWITCH();
      hash = (37 * hash) + CRITICALLY_LOW_TIRE_PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + getCRITICALLYLOWTIREPRESSURE();
      hash = (37 * hash) + CURRENT_GEAR_FIELD_NUMBER;
      hash = (53 * hash) + getCURRENTGEAR();
      hash = (37 * hash) + DISPLAY_BRIGHTNESS_FIELD_NUMBER;
      hash = (53 * hash) + getDISPLAYBRIGHTNESS();
      hash = (37 * hash) + DISTANCE_DISPLAY_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getDISTANCEDISPLAYUNITS();
      hash = (37 * hash) + DOOR_LOCK_FIELD_NUMBER;
      hash = (53 * hash) + getDOORLOCK();
      hash = (37 * hash) + DOOR_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getDOORMOVE();
      hash = (37 * hash) + DOOR_POS_FIELD_NUMBER;
      hash = (53 * hash) + getDOORPOS();
      hash = (37 * hash) + ELECTRONIC_TOLL_COLLECTION_CARD_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getELECTRONICTOLLCOLLECTIONCARDSTATUS();
      hash = (37 * hash) + ELECTRONIC_TOLL_COLLECTION_CARD_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getELECTRONICTOLLCOLLECTIONCARDTYPE();
      hash = (37 * hash) + ENGINE_COOLANT_TEMP_FIELD_NUMBER;
      hash = (53 * hash) + getENGINECOOLANTTEMP();
      hash = (37 * hash) + ENGINE_OIL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getENGINEOILLEVEL();
      hash = (37 * hash) + ENGINE_OIL_TEMP_FIELD_NUMBER;
      hash = (53 * hash) + getENGINEOILTEMP();
      hash = (37 * hash) + ENGINE_RPM_FIELD_NUMBER;
      hash = (53 * hash) + getENGINERPM();
      hash = (37 * hash) + ENV_OUTSIDE_TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + getENVOUTSIDETEMPERATURE();
      hash = (37 * hash) + EPOCH_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEPOCHTIME();
      hash = (37 * hash) + EV_BATTERY_DISPLAY_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getEVBATTERYDISPLAYUNITS();
      hash = (37 * hash) + EV_BATTERY_INSTANTANEOUS_CHARGE_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getEVBATTERYINSTANTANEOUSCHARGERATE();
      hash = (37 * hash) + EV_BATTERY_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getEVBATTERYLEVEL();
      hash = (37 * hash) + EV_CHARGE_PORT_CONNECTED_FIELD_NUMBER;
      hash = (53 * hash) + getEVCHARGEPORTCONNECTED();
      hash = (37 * hash) + EV_CHARGE_PORT_OPEN_FIELD_NUMBER;
      hash = (53 * hash) + getEVCHARGEPORTOPEN();
      hash = (37 * hash) + FOG_LIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getFOGLIGHTSSTATE();
      hash = (37 * hash) + FOG_LIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getFOGLIGHTSSWITCH();
      hash = (37 * hash) + FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME();
      hash = (37 * hash) + FUEL_DOOR_OPEN_FIELD_NUMBER;
      hash = (53 * hash) + getFUELDOOROPEN();
      hash = (37 * hash) + FUEL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getFUELLEVEL();
      hash = (37 * hash) + FUEL_LEVEL_LOW_FIELD_NUMBER;
      hash = (53 * hash) + getFUELLEVELLOW();
      hash = (37 * hash) + FUEL_VOLUME_DISPLAY_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getFUELVOLUMEDISPLAYUNITS();
      hash = (37 * hash) + GEAR_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + getGEARSELECTION();
      hash = (37 * hash) + HAZARD_LIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getHAZARDLIGHTSSTATE();
      hash = (37 * hash) + HAZARD_LIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getHAZARDLIGHTSSWITCH();
      hash = (37 * hash) + HEADLIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getHEADLIGHTSSTATE();
      hash = (37 * hash) + HEADLIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getHEADLIGHTSSWITCH();
      hash = (37 * hash) + HIGH_BEAM_LIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getHIGHBEAMLIGHTSSTATE();
      hash = (37 * hash) + HIGH_BEAM_LIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getHIGHBEAMLIGHTSSWITCH();
      hash = (37 * hash) + HVAC_ACTUAL_FAN_SPEED_RPM_FIELD_NUMBER;
      hash = (53 * hash) + getHVACACTUALFANSPEEDRPM();
      hash = (37 * hash) + HVAC_AC_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACACON();
      hash = (37 * hash) + HVAC_AUTO_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACAUTOON();
      hash = (37 * hash) + HVAC_AUTO_RECIRC_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACAUTORECIRCON();
      hash = (37 * hash) + HVAC_DEFROSTER_FIELD_NUMBER;
      hash = (53 * hash) + getHVACDEFROSTER();
      hash = (37 * hash) + HVAC_DUAL_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACDUALON();
      hash = (37 * hash) + HVAC_FAN_DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getHVACFANDIRECTION();
      hash = (37 * hash) + HVAC_FAN_DIRECTION_AVAILABLE_FIELD_NUMBER;
      hash = (53 * hash) + getHVACFANDIRECTIONAVAILABLE();
      hash = (37 * hash) + HVAC_FAN_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getHVACFANSPEED();
      hash = (37 * hash) + HVAC_MAX_AC_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACMAXACON();
      hash = (37 * hash) + HVAC_MAX_DEFROST_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACMAXDEFROSTON();
      hash = (37 * hash) + HVAC_POWER_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACPOWERON();
      hash = (37 * hash) + HVAC_RECIRC_ON_FIELD_NUMBER;
      hash = (53 * hash) + getHVACRECIRCON();
      hash = (37 * hash) + HVAC_SEAT_TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + getHVACSEATTEMPERATURE();
      hash = (37 * hash) + HVAC_SEAT_VENTILATION_FIELD_NUMBER;
      hash = (53 * hash) + getHVACSEATVENTILATION();
      hash = (37 * hash) + HVAC_SIDE_MIRROR_HEAT_FIELD_NUMBER;
      hash = (53 * hash) + getHVACSIDEMIRRORHEAT();
      hash = (37 * hash) + HVAC_STEERING_WHEEL_HEAT_FIELD_NUMBER;
      hash = (53 * hash) + getHVACSTEERINGWHEELHEAT();
      hash = (37 * hash) + HVAC_TEMPERATURE_CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + getHVACTEMPERATURECURRENT();
      hash = (37 * hash) + HVAC_TEMPERATURE_DISPLAY_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getHVACTEMPERATUREDISPLAYUNITS();
      hash = (37 * hash) + HVAC_TEMPERATURE_SET_FIELD_NUMBER;
      hash = (53 * hash) + getHVACTEMPERATURESET();
      hash = (37 * hash) + HVAC_TEMPERATURE_VALUE_SUGGESTION_FIELD_NUMBER;
      hash = (53 * hash) + getHVACTEMPERATUREVALUESUGGESTION();
      hash = (37 * hash) + HW_KEY_INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getHWKEYINPUT();
      hash = (37 * hash) + IGNITION_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getIGNITIONSTATE();
      hash = (37 * hash) + INFO_DRIVER_SEAT_FIELD_NUMBER;
      hash = (53 * hash) + getINFODRIVERSEAT();
      hash = (37 * hash) + INFO_EV_BATTERY_CAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getINFOEVBATTERYCAPACITY();
      hash = (37 * hash) + INFO_EV_CONNECTOR_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getINFOEVCONNECTORTYPE();
      hash = (37 * hash) + INFO_EV_PORT_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getINFOEVPORTLOCATION();
      hash = (37 * hash) + INFO_EXTERIOR_DIMENSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getINFOEXTERIORDIMENSIONS();
      hash = (37 * hash) + INFO_FUEL_CAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getINFOFUELCAPACITY();
      hash = (37 * hash) + INFO_FUEL_DOOR_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getINFOFUELDOORLOCATION();
      hash = (37 * hash) + INFO_FUEL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getINFOFUELTYPE();
      hash = (37 * hash) + INFO_MAKE_FIELD_NUMBER;
      hash = (53 * hash) + getINFOMAKE();
      hash = (37 * hash) + INFO_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + getINFOMODEL();
      hash = (37 * hash) + INFO_MODEL_YEAR_FIELD_NUMBER;
      hash = (53 * hash) + getINFOMODELYEAR();
      hash = (37 * hash) + INFO_MULTI_EV_PORT_LOCATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getINFOMULTIEVPORTLOCATIONS();
      hash = (37 * hash) + INFO_VIN_FIELD_NUMBER;
      hash = (53 * hash) + getINFOVIN();
      hash = (37 * hash) + INVALID_FIELD_NUMBER;
      hash = (53 * hash) + getINVALID();
      hash = (37 * hash) + MIRROR_FOLD_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORFOLD();
      hash = (37 * hash) + MIRROR_LOCK_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORLOCK();
      hash = (37 * hash) + MIRROR_Y_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORYMOVE();
      hash = (37 * hash) + MIRROR_Y_POS_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORYPOS();
      hash = (37 * hash) + MIRROR_Z_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORZMOVE();
      hash = (37 * hash) + MIRROR_Z_POS_FIELD_NUMBER;
      hash = (53 * hash) + getMIRRORZPOS();
      hash = (37 * hash) + NIGHT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getNIGHTMODE();
      hash = (37 * hash) + OBD2_FREEZE_FRAME_FIELD_NUMBER;
      hash = (53 * hash) + getOBD2FREEZEFRAME();
      hash = (37 * hash) + OBD2_FREEZE_FRAME_CLEAR_FIELD_NUMBER;
      hash = (53 * hash) + getOBD2FREEZEFRAMECLEAR();
      hash = (37 * hash) + OBD2_FREEZE_FRAME_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getOBD2FREEZEFRAMEINFO();
      hash = (37 * hash) + OBD2_LIVE_FRAME_FIELD_NUMBER;
      hash = (53 * hash) + getOBD2LIVEFRAME();
      hash = (37 * hash) + PARKING_BRAKE_AUTO_APPLY_FIELD_NUMBER;
      hash = (53 * hash) + getPARKINGBRAKEAUTOAPPLY();
      hash = (37 * hash) + PARKING_BRAKE_ON_FIELD_NUMBER;
      hash = (53 * hash) + getPARKINGBRAKEON();
      hash = (37 * hash) + PERF_ODOMETER_FIELD_NUMBER;
      hash = (53 * hash) + getPERFODOMETER();
      hash = (37 * hash) + PERF_REAR_STEERING_ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + getPERFREARSTEERINGANGLE();
      hash = (37 * hash) + PERF_STEERING_ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + getPERFSTEERINGANGLE();
      hash = (37 * hash) + PERF_VEHICLE_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getPERFVEHICLESPEED();
      hash = (37 * hash) + PERF_VEHICLE_SPEED_DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getPERFVEHICLESPEEDDISPLAY();
      hash = (37 * hash) + RANGE_REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + getRANGEREMAINING();
      hash = (37 * hash) + READING_LIGHTS_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getREADINGLIGHTSSTATE();
      hash = (37 * hash) + READING_LIGHTS_SWITCH_FIELD_NUMBER;
      hash = (53 * hash) + getREADINGLIGHTSSWITCH();
      hash = (37 * hash) + SEAT_BACKREST_ANGLE_1_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBACKRESTANGLE1MOVE();
      hash = (37 * hash) + SEAT_BACKREST_ANGLE_1_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBACKRESTANGLE1POS();
      hash = (37 * hash) + SEAT_BACKREST_ANGLE_2_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBACKRESTANGLE2MOVE();
      hash = (37 * hash) + SEAT_BACKREST_ANGLE_2_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBACKRESTANGLE2POS();
      hash = (37 * hash) + SEAT_BELT_BUCKLED_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBELTBUCKLED();
      hash = (37 * hash) + SEAT_BELT_HEIGHT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBELTHEIGHTMOVE();
      hash = (37 * hash) + SEAT_BELT_HEIGHT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATBELTHEIGHTPOS();
      hash = (37 * hash) + SEAT_DEPTH_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATDEPTHMOVE();
      hash = (37 * hash) + SEAT_DEPTH_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATDEPTHPOS();
      hash = (37 * hash) + SEAT_FORE_AFT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATFOREAFTMOVE();
      hash = (37 * hash) + SEAT_FORE_AFT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATFOREAFTPOS();
      hash = (37 * hash) + SEAT_HEADREST_ANGLE_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTANGLEMOVE();
      hash = (37 * hash) + SEAT_HEADREST_ANGLE_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTANGLEPOS();
      hash = (37 * hash) + SEAT_HEADREST_FORE_AFT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTFOREAFTMOVE();
      hash = (37 * hash) + SEAT_HEADREST_FORE_AFT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTFOREAFTPOS();
      hash = (37 * hash) + SEAT_HEADREST_HEIGHT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTHEIGHTMOVE();
      hash = (37 * hash) + SEAT_HEADREST_HEIGHT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEADRESTHEIGHTPOS();
      hash = (37 * hash) + SEAT_HEIGHT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEIGHTMOVE();
      hash = (37 * hash) + SEAT_HEIGHT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATHEIGHTPOS();
      hash = (37 * hash) + SEAT_LUMBAR_FORE_AFT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATLUMBARFOREAFTMOVE();
      hash = (37 * hash) + SEAT_LUMBAR_FORE_AFT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATLUMBARFOREAFTPOS();
      hash = (37 * hash) + SEAT_LUMBAR_SIDE_SUPPORT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATLUMBARSIDESUPPORTMOVE();
      hash = (37 * hash) + SEAT_LUMBAR_SIDE_SUPPORT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATLUMBARSIDESUPPORTPOS();
      hash = (37 * hash) + SEAT_MEMORY_SELECT_FIELD_NUMBER;
      hash = (53 * hash) + getSEATMEMORYSELECT();
      hash = (37 * hash) + SEAT_MEMORY_SET_FIELD_NUMBER;
      hash = (53 * hash) + getSEATMEMORYSET();
      hash = (37 * hash) + SEAT_OCCUPANCY_FIELD_NUMBER;
      hash = (53 * hash) + getSEATOCCUPANCY();
      hash = (37 * hash) + SEAT_TILT_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getSEATTILTMOVE();
      hash = (37 * hash) + SEAT_TILT_POS_FIELD_NUMBER;
      hash = (53 * hash) + getSEATTILTPOS();
      hash = (37 * hash) + STORAGE_ENCRYPTION_BINDING_SEED_FIELD_NUMBER;
      hash = (53 * hash) + getSTORAGEENCRYPTIONBINDINGSEED();
      hash = (37 * hash) + TIRE_PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + getTIREPRESSURE();
      hash = (37 * hash) + TIRE_PRESSURE_DISPLAY_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getTIREPRESSUREDISPLAYUNITS();
      hash = (37 * hash) + TRACTION_CONTROL_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + getTRACTIONCONTROLACTIVE();
      hash = (37 * hash) + TURN_SIGNAL_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getTURNSIGNALSTATE();
      hash = (37 * hash) + VEHICLE_MAP_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getVEHICLEMAPSERVICE();
      hash = (37 * hash) + WHEEL_TICK_FIELD_NUMBER;
      hash = (53 * hash) + getWHEELTICK();
      hash = (37 * hash) + WINDOW_LOCK_FIELD_NUMBER;
      hash = (53 * hash) + getWINDOWLOCK();
      hash = (37 * hash) + WINDOW_MOVE_FIELD_NUMBER;
      hash = (53 * hash) + getWINDOWMOVE();
      hash = (37 * hash) + WINDOW_POS_FIELD_NUMBER;
      hash = (53 * hash) + getWINDOWPOS();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VehicleDataOuterClass.AllFields parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VehicleDataOuterClass.AllFields parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.AllFields parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VehicleDataOuterClass.AllFields parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VehicleDataOuterClass.AllFields prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AllFields}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AllFields)
        VehicleDataOuterClass.AllFieldsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return VehicleDataOuterClass.internal_static_AllFields_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return VehicleDataOuterClass.internal_static_AllFields_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleDataOuterClass.AllFields.class, VehicleDataOuterClass.AllFields.Builder.class);
      }

      // Construct using VehicleDataOuterClass.AllFields.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        aBSACTIVE_ = 0;

        aPPOWERBOOTUPREASON_ = 0;

        aPPOWERSTATEREPORT_ = 0;

        aPPOWERSTATEREQ_ = 0;

        cABINLIGHTSSTATE_ = 0;

        cABINLIGHTSSWITCH_ = 0;

        cRITICALLYLOWTIREPRESSURE_ = 0;

        cURRENTGEAR_ = 0;

        dISPLAYBRIGHTNESS_ = 0;

        dISTANCEDISPLAYUNITS_ = 0;

        dOORLOCK_ = 0;

        dOORMOVE_ = 0;

        dOORPOS_ = 0;

        eLECTRONICTOLLCOLLECTIONCARDSTATUS_ = 0;

        eLECTRONICTOLLCOLLECTIONCARDTYPE_ = 0;

        eNGINECOOLANTTEMP_ = 0;

        eNGINEOILLEVEL_ = 0;

        eNGINEOILTEMP_ = 0;

        eNGINERPM_ = 0;

        eNVOUTSIDETEMPERATURE_ = 0;

        ePOCHTIME_ = 0;

        eVBATTERYDISPLAYUNITS_ = 0;

        eVBATTERYINSTANTANEOUSCHARGERATE_ = 0;

        eVBATTERYLEVEL_ = 0;

        eVCHARGEPORTCONNECTED_ = 0;

        eVCHARGEPORTOPEN_ = 0;

        fOGLIGHTSSTATE_ = 0;

        fOGLIGHTSSWITCH_ = 0;

        fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ = 0;

        fUELDOOROPEN_ = 0;

        fUELLEVEL_ = 0;

        fUELLEVELLOW_ = 0;

        fUELVOLUMEDISPLAYUNITS_ = 0;

        gEARSELECTION_ = 0;

        hAZARDLIGHTSSTATE_ = 0;

        hAZARDLIGHTSSWITCH_ = 0;

        hEADLIGHTSSTATE_ = 0;

        hEADLIGHTSSWITCH_ = 0;

        hIGHBEAMLIGHTSSTATE_ = 0;

        hIGHBEAMLIGHTSSWITCH_ = 0;

        hVACACTUALFANSPEEDRPM_ = 0;

        hVACACON_ = 0;

        hVACAUTOON_ = 0;

        hVACAUTORECIRCON_ = 0;

        hVACDEFROSTER_ = 0;

        hVACDUALON_ = 0;

        hVACFANDIRECTION_ = 0;

        hVACFANDIRECTIONAVAILABLE_ = 0;

        hVACFANSPEED_ = 0;

        hVACMAXACON_ = 0;

        hVACMAXDEFROSTON_ = 0;

        hVACPOWERON_ = 0;

        hVACRECIRCON_ = 0;

        hVACSEATTEMPERATURE_ = 0;

        hVACSEATVENTILATION_ = 0;

        hVACSIDEMIRRORHEAT_ = 0;

        hVACSTEERINGWHEELHEAT_ = 0;

        hVACTEMPERATURECURRENT_ = 0;

        hVACTEMPERATUREDISPLAYUNITS_ = 0;

        hVACTEMPERATURESET_ = 0;

        hVACTEMPERATUREVALUESUGGESTION_ = 0;

        hWKEYINPUT_ = 0;

        iGNITIONSTATE_ = 0;

        iNFODRIVERSEAT_ = 0;

        iNFOEVBATTERYCAPACITY_ = 0;

        iNFOEVCONNECTORTYPE_ = 0;

        iNFOEVPORTLOCATION_ = 0;

        iNFOEXTERIORDIMENSIONS_ = 0;

        iNFOFUELCAPACITY_ = 0;

        iNFOFUELDOORLOCATION_ = 0;

        iNFOFUELTYPE_ = 0;

        iNFOMAKE_ = 0;

        iNFOMODEL_ = 0;

        iNFOMODELYEAR_ = 0;

        iNFOMULTIEVPORTLOCATIONS_ = 0;

        iNFOVIN_ = 0;

        iNVALID_ = 0;

        mIRRORFOLD_ = 0;

        mIRRORLOCK_ = 0;

        mIRRORYMOVE_ = 0;

        mIRRORYPOS_ = 0;

        mIRRORZMOVE_ = 0;

        mIRRORZPOS_ = 0;

        nIGHTMODE_ = 0;

        oBD2FREEZEFRAME_ = 0;

        oBD2FREEZEFRAMECLEAR_ = 0;

        oBD2FREEZEFRAMEINFO_ = 0;

        oBD2LIVEFRAME_ = 0;

        pARKINGBRAKEAUTOAPPLY_ = 0;

        pARKINGBRAKEON_ = 0;

        pERFODOMETER_ = 0;

        pERFREARSTEERINGANGLE_ = 0;

        pERFSTEERINGANGLE_ = 0;

        pERFVEHICLESPEED_ = 0;

        pERFVEHICLESPEEDDISPLAY_ = 0;

        rANGEREMAINING_ = 0;

        rEADINGLIGHTSSTATE_ = 0;

        rEADINGLIGHTSSWITCH_ = 0;

        sEATBACKRESTANGLE1MOVE_ = 0;

        sEATBACKRESTANGLE1POS_ = 0;

        sEATBACKRESTANGLE2MOVE_ = 0;

        sEATBACKRESTANGLE2POS_ = 0;

        sEATBELTBUCKLED_ = 0;

        sEATBELTHEIGHTMOVE_ = 0;

        sEATBELTHEIGHTPOS_ = 0;

        sEATDEPTHMOVE_ = 0;

        sEATDEPTHPOS_ = 0;

        sEATFOREAFTMOVE_ = 0;

        sEATFOREAFTPOS_ = 0;

        sEATHEADRESTANGLEMOVE_ = 0;

        sEATHEADRESTANGLEPOS_ = 0;

        sEATHEADRESTFOREAFTMOVE_ = 0;

        sEATHEADRESTFOREAFTPOS_ = 0;

        sEATHEADRESTHEIGHTMOVE_ = 0;

        sEATHEADRESTHEIGHTPOS_ = 0;

        sEATHEIGHTMOVE_ = 0;

        sEATHEIGHTPOS_ = 0;

        sEATLUMBARFOREAFTMOVE_ = 0;

        sEATLUMBARFOREAFTPOS_ = 0;

        sEATLUMBARSIDESUPPORTMOVE_ = 0;

        sEATLUMBARSIDESUPPORTPOS_ = 0;

        sEATMEMORYSELECT_ = 0;

        sEATMEMORYSET_ = 0;

        sEATOCCUPANCY_ = 0;

        sEATTILTMOVE_ = 0;

        sEATTILTPOS_ = 0;

        sTORAGEENCRYPTIONBINDINGSEED_ = 0;

        tIREPRESSURE_ = 0;

        tIREPRESSUREDISPLAYUNITS_ = 0;

        tRACTIONCONTROLACTIVE_ = 0;

        tURNSIGNALSTATE_ = 0;

        vEHICLEMAPSERVICE_ = 0;

        wHEELTICK_ = 0;

        wINDOWLOCK_ = 0;

        wINDOWMOVE_ = 0;

        wINDOWPOS_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return VehicleDataOuterClass.internal_static_AllFields_descriptor;
      }

      @java.lang.Override
      public VehicleDataOuterClass.AllFields getDefaultInstanceForType() {
        return VehicleDataOuterClass.AllFields.getDefaultInstance();
      }

      @java.lang.Override
      public VehicleDataOuterClass.AllFields build() {
        VehicleDataOuterClass.AllFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public VehicleDataOuterClass.AllFields buildPartial() {
        VehicleDataOuterClass.AllFields result = new VehicleDataOuterClass.AllFields(this);
        result.aBSACTIVE_ = aBSACTIVE_;
        result.aPPOWERBOOTUPREASON_ = aPPOWERBOOTUPREASON_;
        result.aPPOWERSTATEREPORT_ = aPPOWERSTATEREPORT_;
        result.aPPOWERSTATEREQ_ = aPPOWERSTATEREQ_;
        result.cABINLIGHTSSTATE_ = cABINLIGHTSSTATE_;
        result.cABINLIGHTSSWITCH_ = cABINLIGHTSSWITCH_;
        result.cRITICALLYLOWTIREPRESSURE_ = cRITICALLYLOWTIREPRESSURE_;
        result.cURRENTGEAR_ = cURRENTGEAR_;
        result.dISPLAYBRIGHTNESS_ = dISPLAYBRIGHTNESS_;
        result.dISTANCEDISPLAYUNITS_ = dISTANCEDISPLAYUNITS_;
        result.dOORLOCK_ = dOORLOCK_;
        result.dOORMOVE_ = dOORMOVE_;
        result.dOORPOS_ = dOORPOS_;
        result.eLECTRONICTOLLCOLLECTIONCARDSTATUS_ = eLECTRONICTOLLCOLLECTIONCARDSTATUS_;
        result.eLECTRONICTOLLCOLLECTIONCARDTYPE_ = eLECTRONICTOLLCOLLECTIONCARDTYPE_;
        result.eNGINECOOLANTTEMP_ = eNGINECOOLANTTEMP_;
        result.eNGINEOILLEVEL_ = eNGINEOILLEVEL_;
        result.eNGINEOILTEMP_ = eNGINEOILTEMP_;
        result.eNGINERPM_ = eNGINERPM_;
        result.eNVOUTSIDETEMPERATURE_ = eNVOUTSIDETEMPERATURE_;
        result.ePOCHTIME_ = ePOCHTIME_;
        result.eVBATTERYDISPLAYUNITS_ = eVBATTERYDISPLAYUNITS_;
        result.eVBATTERYINSTANTANEOUSCHARGERATE_ = eVBATTERYINSTANTANEOUSCHARGERATE_;
        result.eVBATTERYLEVEL_ = eVBATTERYLEVEL_;
        result.eVCHARGEPORTCONNECTED_ = eVCHARGEPORTCONNECTED_;
        result.eVCHARGEPORTOPEN_ = eVCHARGEPORTOPEN_;
        result.fOGLIGHTSSTATE_ = fOGLIGHTSSTATE_;
        result.fOGLIGHTSSWITCH_ = fOGLIGHTSSWITCH_;
        result.fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ = fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_;
        result.fUELDOOROPEN_ = fUELDOOROPEN_;
        result.fUELLEVEL_ = fUELLEVEL_;
        result.fUELLEVELLOW_ = fUELLEVELLOW_;
        result.fUELVOLUMEDISPLAYUNITS_ = fUELVOLUMEDISPLAYUNITS_;
        result.gEARSELECTION_ = gEARSELECTION_;
        result.hAZARDLIGHTSSTATE_ = hAZARDLIGHTSSTATE_;
        result.hAZARDLIGHTSSWITCH_ = hAZARDLIGHTSSWITCH_;
        result.hEADLIGHTSSTATE_ = hEADLIGHTSSTATE_;
        result.hEADLIGHTSSWITCH_ = hEADLIGHTSSWITCH_;
        result.hIGHBEAMLIGHTSSTATE_ = hIGHBEAMLIGHTSSTATE_;
        result.hIGHBEAMLIGHTSSWITCH_ = hIGHBEAMLIGHTSSWITCH_;
        result.hVACACTUALFANSPEEDRPM_ = hVACACTUALFANSPEEDRPM_;
        result.hVACACON_ = hVACACON_;
        result.hVACAUTOON_ = hVACAUTOON_;
        result.hVACAUTORECIRCON_ = hVACAUTORECIRCON_;
        result.hVACDEFROSTER_ = hVACDEFROSTER_;
        result.hVACDUALON_ = hVACDUALON_;
        result.hVACFANDIRECTION_ = hVACFANDIRECTION_;
        result.hVACFANDIRECTIONAVAILABLE_ = hVACFANDIRECTIONAVAILABLE_;
        result.hVACFANSPEED_ = hVACFANSPEED_;
        result.hVACMAXACON_ = hVACMAXACON_;
        result.hVACMAXDEFROSTON_ = hVACMAXDEFROSTON_;
        result.hVACPOWERON_ = hVACPOWERON_;
        result.hVACRECIRCON_ = hVACRECIRCON_;
        result.hVACSEATTEMPERATURE_ = hVACSEATTEMPERATURE_;
        result.hVACSEATVENTILATION_ = hVACSEATVENTILATION_;
        result.hVACSIDEMIRRORHEAT_ = hVACSIDEMIRRORHEAT_;
        result.hVACSTEERINGWHEELHEAT_ = hVACSTEERINGWHEELHEAT_;
        result.hVACTEMPERATURECURRENT_ = hVACTEMPERATURECURRENT_;
        result.hVACTEMPERATUREDISPLAYUNITS_ = hVACTEMPERATUREDISPLAYUNITS_;
        result.hVACTEMPERATURESET_ = hVACTEMPERATURESET_;
        result.hVACTEMPERATUREVALUESUGGESTION_ = hVACTEMPERATUREVALUESUGGESTION_;
        result.hWKEYINPUT_ = hWKEYINPUT_;
        result.iGNITIONSTATE_ = iGNITIONSTATE_;
        result.iNFODRIVERSEAT_ = iNFODRIVERSEAT_;
        result.iNFOEVBATTERYCAPACITY_ = iNFOEVBATTERYCAPACITY_;
        result.iNFOEVCONNECTORTYPE_ = iNFOEVCONNECTORTYPE_;
        result.iNFOEVPORTLOCATION_ = iNFOEVPORTLOCATION_;
        result.iNFOEXTERIORDIMENSIONS_ = iNFOEXTERIORDIMENSIONS_;
        result.iNFOFUELCAPACITY_ = iNFOFUELCAPACITY_;
        result.iNFOFUELDOORLOCATION_ = iNFOFUELDOORLOCATION_;
        result.iNFOFUELTYPE_ = iNFOFUELTYPE_;
        result.iNFOMAKE_ = iNFOMAKE_;
        result.iNFOMODEL_ = iNFOMODEL_;
        result.iNFOMODELYEAR_ = iNFOMODELYEAR_;
        result.iNFOMULTIEVPORTLOCATIONS_ = iNFOMULTIEVPORTLOCATIONS_;
        result.iNFOVIN_ = iNFOVIN_;
        result.iNVALID_ = iNVALID_;
        result.mIRRORFOLD_ = mIRRORFOLD_;
        result.mIRRORLOCK_ = mIRRORLOCK_;
        result.mIRRORYMOVE_ = mIRRORYMOVE_;
        result.mIRRORYPOS_ = mIRRORYPOS_;
        result.mIRRORZMOVE_ = mIRRORZMOVE_;
        result.mIRRORZPOS_ = mIRRORZPOS_;
        result.nIGHTMODE_ = nIGHTMODE_;
        result.oBD2FREEZEFRAME_ = oBD2FREEZEFRAME_;
        result.oBD2FREEZEFRAMECLEAR_ = oBD2FREEZEFRAMECLEAR_;
        result.oBD2FREEZEFRAMEINFO_ = oBD2FREEZEFRAMEINFO_;
        result.oBD2LIVEFRAME_ = oBD2LIVEFRAME_;
        result.pARKINGBRAKEAUTOAPPLY_ = pARKINGBRAKEAUTOAPPLY_;
        result.pARKINGBRAKEON_ = pARKINGBRAKEON_;
        result.pERFODOMETER_ = pERFODOMETER_;
        result.pERFREARSTEERINGANGLE_ = pERFREARSTEERINGANGLE_;
        result.pERFSTEERINGANGLE_ = pERFSTEERINGANGLE_;
        result.pERFVEHICLESPEED_ = pERFVEHICLESPEED_;
        result.pERFVEHICLESPEEDDISPLAY_ = pERFVEHICLESPEEDDISPLAY_;
        result.rANGEREMAINING_ = rANGEREMAINING_;
        result.rEADINGLIGHTSSTATE_ = rEADINGLIGHTSSTATE_;
        result.rEADINGLIGHTSSWITCH_ = rEADINGLIGHTSSWITCH_;
        result.sEATBACKRESTANGLE1MOVE_ = sEATBACKRESTANGLE1MOVE_;
        result.sEATBACKRESTANGLE1POS_ = sEATBACKRESTANGLE1POS_;
        result.sEATBACKRESTANGLE2MOVE_ = sEATBACKRESTANGLE2MOVE_;
        result.sEATBACKRESTANGLE2POS_ = sEATBACKRESTANGLE2POS_;
        result.sEATBELTBUCKLED_ = sEATBELTBUCKLED_;
        result.sEATBELTHEIGHTMOVE_ = sEATBELTHEIGHTMOVE_;
        result.sEATBELTHEIGHTPOS_ = sEATBELTHEIGHTPOS_;
        result.sEATDEPTHMOVE_ = sEATDEPTHMOVE_;
        result.sEATDEPTHPOS_ = sEATDEPTHPOS_;
        result.sEATFOREAFTMOVE_ = sEATFOREAFTMOVE_;
        result.sEATFOREAFTPOS_ = sEATFOREAFTPOS_;
        result.sEATHEADRESTANGLEMOVE_ = sEATHEADRESTANGLEMOVE_;
        result.sEATHEADRESTANGLEPOS_ = sEATHEADRESTANGLEPOS_;
        result.sEATHEADRESTFOREAFTMOVE_ = sEATHEADRESTFOREAFTMOVE_;
        result.sEATHEADRESTFOREAFTPOS_ = sEATHEADRESTFOREAFTPOS_;
        result.sEATHEADRESTHEIGHTMOVE_ = sEATHEADRESTHEIGHTMOVE_;
        result.sEATHEADRESTHEIGHTPOS_ = sEATHEADRESTHEIGHTPOS_;
        result.sEATHEIGHTMOVE_ = sEATHEIGHTMOVE_;
        result.sEATHEIGHTPOS_ = sEATHEIGHTPOS_;
        result.sEATLUMBARFOREAFTMOVE_ = sEATLUMBARFOREAFTMOVE_;
        result.sEATLUMBARFOREAFTPOS_ = sEATLUMBARFOREAFTPOS_;
        result.sEATLUMBARSIDESUPPORTMOVE_ = sEATLUMBARSIDESUPPORTMOVE_;
        result.sEATLUMBARSIDESUPPORTPOS_ = sEATLUMBARSIDESUPPORTPOS_;
        result.sEATMEMORYSELECT_ = sEATMEMORYSELECT_;
        result.sEATMEMORYSET_ = sEATMEMORYSET_;
        result.sEATOCCUPANCY_ = sEATOCCUPANCY_;
        result.sEATTILTMOVE_ = sEATTILTMOVE_;
        result.sEATTILTPOS_ = sEATTILTPOS_;
        result.sTORAGEENCRYPTIONBINDINGSEED_ = sTORAGEENCRYPTIONBINDINGSEED_;
        result.tIREPRESSURE_ = tIREPRESSURE_;
        result.tIREPRESSUREDISPLAYUNITS_ = tIREPRESSUREDISPLAYUNITS_;
        result.tRACTIONCONTROLACTIVE_ = tRACTIONCONTROLACTIVE_;
        result.tURNSIGNALSTATE_ = tURNSIGNALSTATE_;
        result.vEHICLEMAPSERVICE_ = vEHICLEMAPSERVICE_;
        result.wHEELTICK_ = wHEELTICK_;
        result.wINDOWLOCK_ = wINDOWLOCK_;
        result.wINDOWMOVE_ = wINDOWMOVE_;
        result.wINDOWPOS_ = wINDOWPOS_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VehicleDataOuterClass.AllFields) {
          return mergeFrom((VehicleDataOuterClass.AllFields)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VehicleDataOuterClass.AllFields other) {
        if (other == VehicleDataOuterClass.AllFields.getDefaultInstance()) return this;
        if (other.getABSACTIVE() != 0) {
          setABSACTIVE(other.getABSACTIVE());
        }
        if (other.getAPPOWERBOOTUPREASON() != 0) {
          setAPPOWERBOOTUPREASON(other.getAPPOWERBOOTUPREASON());
        }
        if (other.getAPPOWERSTATEREPORT() != 0) {
          setAPPOWERSTATEREPORT(other.getAPPOWERSTATEREPORT());
        }
        if (other.getAPPOWERSTATEREQ() != 0) {
          setAPPOWERSTATEREQ(other.getAPPOWERSTATEREQ());
        }
        if (other.getCABINLIGHTSSTATE() != 0) {
          setCABINLIGHTSSTATE(other.getCABINLIGHTSSTATE());
        }
        if (other.getCABINLIGHTSSWITCH() != 0) {
          setCABINLIGHTSSWITCH(other.getCABINLIGHTSSWITCH());
        }
        if (other.getCRITICALLYLOWTIREPRESSURE() != 0) {
          setCRITICALLYLOWTIREPRESSURE(other.getCRITICALLYLOWTIREPRESSURE());
        }
        if (other.getCURRENTGEAR() != 0) {
          setCURRENTGEAR(other.getCURRENTGEAR());
        }
        if (other.getDISPLAYBRIGHTNESS() != 0) {
          setDISPLAYBRIGHTNESS(other.getDISPLAYBRIGHTNESS());
        }
        if (other.getDISTANCEDISPLAYUNITS() != 0) {
          setDISTANCEDISPLAYUNITS(other.getDISTANCEDISPLAYUNITS());
        }
        if (other.getDOORLOCK() != 0) {
          setDOORLOCK(other.getDOORLOCK());
        }
        if (other.getDOORMOVE() != 0) {
          setDOORMOVE(other.getDOORMOVE());
        }
        if (other.getDOORPOS() != 0) {
          setDOORPOS(other.getDOORPOS());
        }
        if (other.getELECTRONICTOLLCOLLECTIONCARDSTATUS() != 0) {
          setELECTRONICTOLLCOLLECTIONCARDSTATUS(other.getELECTRONICTOLLCOLLECTIONCARDSTATUS());
        }
        if (other.getELECTRONICTOLLCOLLECTIONCARDTYPE() != 0) {
          setELECTRONICTOLLCOLLECTIONCARDTYPE(other.getELECTRONICTOLLCOLLECTIONCARDTYPE());
        }
        if (other.getENGINECOOLANTTEMP() != 0) {
          setENGINECOOLANTTEMP(other.getENGINECOOLANTTEMP());
        }
        if (other.getENGINEOILLEVEL() != 0) {
          setENGINEOILLEVEL(other.getENGINEOILLEVEL());
        }
        if (other.getENGINEOILTEMP() != 0) {
          setENGINEOILTEMP(other.getENGINEOILTEMP());
        }
        if (other.getENGINERPM() != 0) {
          setENGINERPM(other.getENGINERPM());
        }
        if (other.getENVOUTSIDETEMPERATURE() != 0) {
          setENVOUTSIDETEMPERATURE(other.getENVOUTSIDETEMPERATURE());
        }
        if (other.getEPOCHTIME() != 0) {
          setEPOCHTIME(other.getEPOCHTIME());
        }
        if (other.getEVBATTERYDISPLAYUNITS() != 0) {
          setEVBATTERYDISPLAYUNITS(other.getEVBATTERYDISPLAYUNITS());
        }
        if (other.getEVBATTERYINSTANTANEOUSCHARGERATE() != 0) {
          setEVBATTERYINSTANTANEOUSCHARGERATE(other.getEVBATTERYINSTANTANEOUSCHARGERATE());
        }
        if (other.getEVBATTERYLEVEL() != 0) {
          setEVBATTERYLEVEL(other.getEVBATTERYLEVEL());
        }
        if (other.getEVCHARGEPORTCONNECTED() != 0) {
          setEVCHARGEPORTCONNECTED(other.getEVCHARGEPORTCONNECTED());
        }
        if (other.getEVCHARGEPORTOPEN() != 0) {
          setEVCHARGEPORTOPEN(other.getEVCHARGEPORTOPEN());
        }
        if (other.getFOGLIGHTSSTATE() != 0) {
          setFOGLIGHTSSTATE(other.getFOGLIGHTSSTATE());
        }
        if (other.getFOGLIGHTSSWITCH() != 0) {
          setFOGLIGHTSSWITCH(other.getFOGLIGHTSSWITCH());
        }
        if (other.getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME() != 0) {
          setFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME(other.getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME());
        }
        if (other.getFUELDOOROPEN() != 0) {
          setFUELDOOROPEN(other.getFUELDOOROPEN());
        }
        if (other.getFUELLEVEL() != 0) {
          setFUELLEVEL(other.getFUELLEVEL());
        }
        if (other.getFUELLEVELLOW() != 0) {
          setFUELLEVELLOW(other.getFUELLEVELLOW());
        }
        if (other.getFUELVOLUMEDISPLAYUNITS() != 0) {
          setFUELVOLUMEDISPLAYUNITS(other.getFUELVOLUMEDISPLAYUNITS());
        }
        if (other.getGEARSELECTION() != 0) {
          setGEARSELECTION(other.getGEARSELECTION());
        }
        if (other.getHAZARDLIGHTSSTATE() != 0) {
          setHAZARDLIGHTSSTATE(other.getHAZARDLIGHTSSTATE());
        }
        if (other.getHAZARDLIGHTSSWITCH() != 0) {
          setHAZARDLIGHTSSWITCH(other.getHAZARDLIGHTSSWITCH());
        }
        if (other.getHEADLIGHTSSTATE() != 0) {
          setHEADLIGHTSSTATE(other.getHEADLIGHTSSTATE());
        }
        if (other.getHEADLIGHTSSWITCH() != 0) {
          setHEADLIGHTSSWITCH(other.getHEADLIGHTSSWITCH());
        }
        if (other.getHIGHBEAMLIGHTSSTATE() != 0) {
          setHIGHBEAMLIGHTSSTATE(other.getHIGHBEAMLIGHTSSTATE());
        }
        if (other.getHIGHBEAMLIGHTSSWITCH() != 0) {
          setHIGHBEAMLIGHTSSWITCH(other.getHIGHBEAMLIGHTSSWITCH());
        }
        if (other.getHVACACTUALFANSPEEDRPM() != 0) {
          setHVACACTUALFANSPEEDRPM(other.getHVACACTUALFANSPEEDRPM());
        }
        if (other.getHVACACON() != 0) {
          setHVACACON(other.getHVACACON());
        }
        if (other.getHVACAUTOON() != 0) {
          setHVACAUTOON(other.getHVACAUTOON());
        }
        if (other.getHVACAUTORECIRCON() != 0) {
          setHVACAUTORECIRCON(other.getHVACAUTORECIRCON());
        }
        if (other.getHVACDEFROSTER() != 0) {
          setHVACDEFROSTER(other.getHVACDEFROSTER());
        }
        if (other.getHVACDUALON() != 0) {
          setHVACDUALON(other.getHVACDUALON());
        }
        if (other.getHVACFANDIRECTION() != 0) {
          setHVACFANDIRECTION(other.getHVACFANDIRECTION());
        }
        if (other.getHVACFANDIRECTIONAVAILABLE() != 0) {
          setHVACFANDIRECTIONAVAILABLE(other.getHVACFANDIRECTIONAVAILABLE());
        }
        if (other.getHVACFANSPEED() != 0) {
          setHVACFANSPEED(other.getHVACFANSPEED());
        }
        if (other.getHVACMAXACON() != 0) {
          setHVACMAXACON(other.getHVACMAXACON());
        }
        if (other.getHVACMAXDEFROSTON() != 0) {
          setHVACMAXDEFROSTON(other.getHVACMAXDEFROSTON());
        }
        if (other.getHVACPOWERON() != 0) {
          setHVACPOWERON(other.getHVACPOWERON());
        }
        if (other.getHVACRECIRCON() != 0) {
          setHVACRECIRCON(other.getHVACRECIRCON());
        }
        if (other.getHVACSEATTEMPERATURE() != 0) {
          setHVACSEATTEMPERATURE(other.getHVACSEATTEMPERATURE());
        }
        if (other.getHVACSEATVENTILATION() != 0) {
          setHVACSEATVENTILATION(other.getHVACSEATVENTILATION());
        }
        if (other.getHVACSIDEMIRRORHEAT() != 0) {
          setHVACSIDEMIRRORHEAT(other.getHVACSIDEMIRRORHEAT());
        }
        if (other.getHVACSTEERINGWHEELHEAT() != 0) {
          setHVACSTEERINGWHEELHEAT(other.getHVACSTEERINGWHEELHEAT());
        }
        if (other.getHVACTEMPERATURECURRENT() != 0) {
          setHVACTEMPERATURECURRENT(other.getHVACTEMPERATURECURRENT());
        }
        if (other.getHVACTEMPERATUREDISPLAYUNITS() != 0) {
          setHVACTEMPERATUREDISPLAYUNITS(other.getHVACTEMPERATUREDISPLAYUNITS());
        }
        if (other.getHVACTEMPERATURESET() != 0) {
          setHVACTEMPERATURESET(other.getHVACTEMPERATURESET());
        }
        if (other.getHVACTEMPERATUREVALUESUGGESTION() != 0) {
          setHVACTEMPERATUREVALUESUGGESTION(other.getHVACTEMPERATUREVALUESUGGESTION());
        }
        if (other.getHWKEYINPUT() != 0) {
          setHWKEYINPUT(other.getHWKEYINPUT());
        }
        if (other.getIGNITIONSTATE() != 0) {
          setIGNITIONSTATE(other.getIGNITIONSTATE());
        }
        if (other.getINFODRIVERSEAT() != 0) {
          setINFODRIVERSEAT(other.getINFODRIVERSEAT());
        }
        if (other.getINFOEVBATTERYCAPACITY() != 0) {
          setINFOEVBATTERYCAPACITY(other.getINFOEVBATTERYCAPACITY());
        }
        if (other.getINFOEVCONNECTORTYPE() != 0) {
          setINFOEVCONNECTORTYPE(other.getINFOEVCONNECTORTYPE());
        }
        if (other.getINFOEVPORTLOCATION() != 0) {
          setINFOEVPORTLOCATION(other.getINFOEVPORTLOCATION());
        }
        if (other.getINFOEXTERIORDIMENSIONS() != 0) {
          setINFOEXTERIORDIMENSIONS(other.getINFOEXTERIORDIMENSIONS());
        }
        if (other.getINFOFUELCAPACITY() != 0) {
          setINFOFUELCAPACITY(other.getINFOFUELCAPACITY());
        }
        if (other.getINFOFUELDOORLOCATION() != 0) {
          setINFOFUELDOORLOCATION(other.getINFOFUELDOORLOCATION());
        }
        if (other.getINFOFUELTYPE() != 0) {
          setINFOFUELTYPE(other.getINFOFUELTYPE());
        }
        if (other.getINFOMAKE() != 0) {
          setINFOMAKE(other.getINFOMAKE());
        }
        if (other.getINFOMODEL() != 0) {
          setINFOMODEL(other.getINFOMODEL());
        }
        if (other.getINFOMODELYEAR() != 0) {
          setINFOMODELYEAR(other.getINFOMODELYEAR());
        }
        if (other.getINFOMULTIEVPORTLOCATIONS() != 0) {
          setINFOMULTIEVPORTLOCATIONS(other.getINFOMULTIEVPORTLOCATIONS());
        }
        if (other.getINFOVIN() != 0) {
          setINFOVIN(other.getINFOVIN());
        }
        if (other.getINVALID() != 0) {
          setINVALID(other.getINVALID());
        }
        if (other.getMIRRORFOLD() != 0) {
          setMIRRORFOLD(other.getMIRRORFOLD());
        }
        if (other.getMIRRORLOCK() != 0) {
          setMIRRORLOCK(other.getMIRRORLOCK());
        }
        if (other.getMIRRORYMOVE() != 0) {
          setMIRRORYMOVE(other.getMIRRORYMOVE());
        }
        if (other.getMIRRORYPOS() != 0) {
          setMIRRORYPOS(other.getMIRRORYPOS());
        }
        if (other.getMIRRORZMOVE() != 0) {
          setMIRRORZMOVE(other.getMIRRORZMOVE());
        }
        if (other.getMIRRORZPOS() != 0) {
          setMIRRORZPOS(other.getMIRRORZPOS());
        }
        if (other.getNIGHTMODE() != 0) {
          setNIGHTMODE(other.getNIGHTMODE());
        }
        if (other.getOBD2FREEZEFRAME() != 0) {
          setOBD2FREEZEFRAME(other.getOBD2FREEZEFRAME());
        }
        if (other.getOBD2FREEZEFRAMECLEAR() != 0) {
          setOBD2FREEZEFRAMECLEAR(other.getOBD2FREEZEFRAMECLEAR());
        }
        if (other.getOBD2FREEZEFRAMEINFO() != 0) {
          setOBD2FREEZEFRAMEINFO(other.getOBD2FREEZEFRAMEINFO());
        }
        if (other.getOBD2LIVEFRAME() != 0) {
          setOBD2LIVEFRAME(other.getOBD2LIVEFRAME());
        }
        if (other.getPARKINGBRAKEAUTOAPPLY() != 0) {
          setPARKINGBRAKEAUTOAPPLY(other.getPARKINGBRAKEAUTOAPPLY());
        }
        if (other.getPARKINGBRAKEON() != 0) {
          setPARKINGBRAKEON(other.getPARKINGBRAKEON());
        }
        if (other.getPERFODOMETER() != 0) {
          setPERFODOMETER(other.getPERFODOMETER());
        }
        if (other.getPERFREARSTEERINGANGLE() != 0) {
          setPERFREARSTEERINGANGLE(other.getPERFREARSTEERINGANGLE());
        }
        if (other.getPERFSTEERINGANGLE() != 0) {
          setPERFSTEERINGANGLE(other.getPERFSTEERINGANGLE());
        }
        if (other.getPERFVEHICLESPEED() != 0) {
          setPERFVEHICLESPEED(other.getPERFVEHICLESPEED());
        }
        if (other.getPERFVEHICLESPEEDDISPLAY() != 0) {
          setPERFVEHICLESPEEDDISPLAY(other.getPERFVEHICLESPEEDDISPLAY());
        }
        if (other.getRANGEREMAINING() != 0) {
          setRANGEREMAINING(other.getRANGEREMAINING());
        }
        if (other.getREADINGLIGHTSSTATE() != 0) {
          setREADINGLIGHTSSTATE(other.getREADINGLIGHTSSTATE());
        }
        if (other.getREADINGLIGHTSSWITCH() != 0) {
          setREADINGLIGHTSSWITCH(other.getREADINGLIGHTSSWITCH());
        }
        if (other.getSEATBACKRESTANGLE1MOVE() != 0) {
          setSEATBACKRESTANGLE1MOVE(other.getSEATBACKRESTANGLE1MOVE());
        }
        if (other.getSEATBACKRESTANGLE1POS() != 0) {
          setSEATBACKRESTANGLE1POS(other.getSEATBACKRESTANGLE1POS());
        }
        if (other.getSEATBACKRESTANGLE2MOVE() != 0) {
          setSEATBACKRESTANGLE2MOVE(other.getSEATBACKRESTANGLE2MOVE());
        }
        if (other.getSEATBACKRESTANGLE2POS() != 0) {
          setSEATBACKRESTANGLE2POS(other.getSEATBACKRESTANGLE2POS());
        }
        if (other.getSEATBELTBUCKLED() != 0) {
          setSEATBELTBUCKLED(other.getSEATBELTBUCKLED());
        }
        if (other.getSEATBELTHEIGHTMOVE() != 0) {
          setSEATBELTHEIGHTMOVE(other.getSEATBELTHEIGHTMOVE());
        }
        if (other.getSEATBELTHEIGHTPOS() != 0) {
          setSEATBELTHEIGHTPOS(other.getSEATBELTHEIGHTPOS());
        }
        if (other.getSEATDEPTHMOVE() != 0) {
          setSEATDEPTHMOVE(other.getSEATDEPTHMOVE());
        }
        if (other.getSEATDEPTHPOS() != 0) {
          setSEATDEPTHPOS(other.getSEATDEPTHPOS());
        }
        if (other.getSEATFOREAFTMOVE() != 0) {
          setSEATFOREAFTMOVE(other.getSEATFOREAFTMOVE());
        }
        if (other.getSEATFOREAFTPOS() != 0) {
          setSEATFOREAFTPOS(other.getSEATFOREAFTPOS());
        }
        if (other.getSEATHEADRESTANGLEMOVE() != 0) {
          setSEATHEADRESTANGLEMOVE(other.getSEATHEADRESTANGLEMOVE());
        }
        if (other.getSEATHEADRESTANGLEPOS() != 0) {
          setSEATHEADRESTANGLEPOS(other.getSEATHEADRESTANGLEPOS());
        }
        if (other.getSEATHEADRESTFOREAFTMOVE() != 0) {
          setSEATHEADRESTFOREAFTMOVE(other.getSEATHEADRESTFOREAFTMOVE());
        }
        if (other.getSEATHEADRESTFOREAFTPOS() != 0) {
          setSEATHEADRESTFOREAFTPOS(other.getSEATHEADRESTFOREAFTPOS());
        }
        if (other.getSEATHEADRESTHEIGHTMOVE() != 0) {
          setSEATHEADRESTHEIGHTMOVE(other.getSEATHEADRESTHEIGHTMOVE());
        }
        if (other.getSEATHEADRESTHEIGHTPOS() != 0) {
          setSEATHEADRESTHEIGHTPOS(other.getSEATHEADRESTHEIGHTPOS());
        }
        if (other.getSEATHEIGHTMOVE() != 0) {
          setSEATHEIGHTMOVE(other.getSEATHEIGHTMOVE());
        }
        if (other.getSEATHEIGHTPOS() != 0) {
          setSEATHEIGHTPOS(other.getSEATHEIGHTPOS());
        }
        if (other.getSEATLUMBARFOREAFTMOVE() != 0) {
          setSEATLUMBARFOREAFTMOVE(other.getSEATLUMBARFOREAFTMOVE());
        }
        if (other.getSEATLUMBARFOREAFTPOS() != 0) {
          setSEATLUMBARFOREAFTPOS(other.getSEATLUMBARFOREAFTPOS());
        }
        if (other.getSEATLUMBARSIDESUPPORTMOVE() != 0) {
          setSEATLUMBARSIDESUPPORTMOVE(other.getSEATLUMBARSIDESUPPORTMOVE());
        }
        if (other.getSEATLUMBARSIDESUPPORTPOS() != 0) {
          setSEATLUMBARSIDESUPPORTPOS(other.getSEATLUMBARSIDESUPPORTPOS());
        }
        if (other.getSEATMEMORYSELECT() != 0) {
          setSEATMEMORYSELECT(other.getSEATMEMORYSELECT());
        }
        if (other.getSEATMEMORYSET() != 0) {
          setSEATMEMORYSET(other.getSEATMEMORYSET());
        }
        if (other.getSEATOCCUPANCY() != 0) {
          setSEATOCCUPANCY(other.getSEATOCCUPANCY());
        }
        if (other.getSEATTILTMOVE() != 0) {
          setSEATTILTMOVE(other.getSEATTILTMOVE());
        }
        if (other.getSEATTILTPOS() != 0) {
          setSEATTILTPOS(other.getSEATTILTPOS());
        }
        if (other.getSTORAGEENCRYPTIONBINDINGSEED() != 0) {
          setSTORAGEENCRYPTIONBINDINGSEED(other.getSTORAGEENCRYPTIONBINDINGSEED());
        }
        if (other.getTIREPRESSURE() != 0) {
          setTIREPRESSURE(other.getTIREPRESSURE());
        }
        if (other.getTIREPRESSUREDISPLAYUNITS() != 0) {
          setTIREPRESSUREDISPLAYUNITS(other.getTIREPRESSUREDISPLAYUNITS());
        }
        if (other.getTRACTIONCONTROLACTIVE() != 0) {
          setTRACTIONCONTROLACTIVE(other.getTRACTIONCONTROLACTIVE());
        }
        if (other.getTURNSIGNALSTATE() != 0) {
          setTURNSIGNALSTATE(other.getTURNSIGNALSTATE());
        }
        if (other.getVEHICLEMAPSERVICE() != 0) {
          setVEHICLEMAPSERVICE(other.getVEHICLEMAPSERVICE());
        }
        if (other.getWHEELTICK() != 0) {
          setWHEELTICK(other.getWHEELTICK());
        }
        if (other.getWINDOWLOCK() != 0) {
          setWINDOWLOCK(other.getWINDOWLOCK());
        }
        if (other.getWINDOWMOVE() != 0) {
          setWINDOWMOVE(other.getWINDOWMOVE());
        }
        if (other.getWINDOWPOS() != 0) {
          setWINDOWPOS(other.getWINDOWPOS());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VehicleDataOuterClass.AllFields parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VehicleDataOuterClass.AllFields) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int aBSACTIVE_ ;
      /**
       * <pre>
       * List of all sensors that can be requested by
       * Android Automotive OS.
       * </pre>
       *
       * <code>int32 ABS_ACTIVE = 1;</code>
       * @return The aBSACTIVE.
       */
      @java.lang.Override
      public int getABSACTIVE() {
        return aBSACTIVE_;
      }
      /**
       * <pre>
       * List of all sensors that can be requested by
       * Android Automotive OS.
       * </pre>
       *
       * <code>int32 ABS_ACTIVE = 1;</code>
       * @param value The aBSACTIVE to set.
       * @return This builder for chaining.
       */
      public Builder setABSACTIVE(int value) {
        
        aBSACTIVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of all sensors that can be requested by
       * Android Automotive OS.
       * </pre>
       *
       * <code>int32 ABS_ACTIVE = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearABSACTIVE() {
        
        aBSACTIVE_ = 0;
        onChanged();
        return this;
      }

      private int aPPOWERBOOTUPREASON_ ;
      /**
       * <code>int32 AP_POWER_BOOTUP_REASON = 2;</code>
       * @return The aPPOWERBOOTUPREASON.
       */
      @java.lang.Override
      public int getAPPOWERBOOTUPREASON() {
        return aPPOWERBOOTUPREASON_;
      }
      /**
       * <code>int32 AP_POWER_BOOTUP_REASON = 2;</code>
       * @param value The aPPOWERBOOTUPREASON to set.
       * @return This builder for chaining.
       */
      public Builder setAPPOWERBOOTUPREASON(int value) {
        
        aPPOWERBOOTUPREASON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 AP_POWER_BOOTUP_REASON = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAPPOWERBOOTUPREASON() {
        
        aPPOWERBOOTUPREASON_ = 0;
        onChanged();
        return this;
      }

      private int aPPOWERSTATEREPORT_ ;
      /**
       * <code>int32 AP_POWER_STATE_REPORT = 3;</code>
       * @return The aPPOWERSTATEREPORT.
       */
      @java.lang.Override
      public int getAPPOWERSTATEREPORT() {
        return aPPOWERSTATEREPORT_;
      }
      /**
       * <code>int32 AP_POWER_STATE_REPORT = 3;</code>
       * @param value The aPPOWERSTATEREPORT to set.
       * @return This builder for chaining.
       */
      public Builder setAPPOWERSTATEREPORT(int value) {
        
        aPPOWERSTATEREPORT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 AP_POWER_STATE_REPORT = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAPPOWERSTATEREPORT() {
        
        aPPOWERSTATEREPORT_ = 0;
        onChanged();
        return this;
      }

      private int aPPOWERSTATEREQ_ ;
      /**
       * <code>int32 AP_POWER_STATE_REQ = 4;</code>
       * @return The aPPOWERSTATEREQ.
       */
      @java.lang.Override
      public int getAPPOWERSTATEREQ() {
        return aPPOWERSTATEREQ_;
      }
      /**
       * <code>int32 AP_POWER_STATE_REQ = 4;</code>
       * @param value The aPPOWERSTATEREQ to set.
       * @return This builder for chaining.
       */
      public Builder setAPPOWERSTATEREQ(int value) {
        
        aPPOWERSTATEREQ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 AP_POWER_STATE_REQ = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAPPOWERSTATEREQ() {
        
        aPPOWERSTATEREQ_ = 0;
        onChanged();
        return this;
      }

      private int cABINLIGHTSSTATE_ ;
      /**
       * <code>int32 CABIN_LIGHTS_STATE = 5;</code>
       * @return The cABINLIGHTSSTATE.
       */
      @java.lang.Override
      public int getCABINLIGHTSSTATE() {
        return cABINLIGHTSSTATE_;
      }
      /**
       * <code>int32 CABIN_LIGHTS_STATE = 5;</code>
       * @param value The cABINLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setCABINLIGHTSSTATE(int value) {
        
        cABINLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 CABIN_LIGHTS_STATE = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCABINLIGHTSSTATE() {
        
        cABINLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int cABINLIGHTSSWITCH_ ;
      /**
       * <code>int32 CABIN_LIGHTS_SWITCH = 6;</code>
       * @return The cABINLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getCABINLIGHTSSWITCH() {
        return cABINLIGHTSSWITCH_;
      }
      /**
       * <code>int32 CABIN_LIGHTS_SWITCH = 6;</code>
       * @param value The cABINLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setCABINLIGHTSSWITCH(int value) {
        
        cABINLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 CABIN_LIGHTS_SWITCH = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCABINLIGHTSSWITCH() {
        
        cABINLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int cRITICALLYLOWTIREPRESSURE_ ;
      /**
       * <code>int32 CRITICALLY_LOW_TIRE_PRESSURE = 7;</code>
       * @return The cRITICALLYLOWTIREPRESSURE.
       */
      @java.lang.Override
      public int getCRITICALLYLOWTIREPRESSURE() {
        return cRITICALLYLOWTIREPRESSURE_;
      }
      /**
       * <code>int32 CRITICALLY_LOW_TIRE_PRESSURE = 7;</code>
       * @param value The cRITICALLYLOWTIREPRESSURE to set.
       * @return This builder for chaining.
       */
      public Builder setCRITICALLYLOWTIREPRESSURE(int value) {
        
        cRITICALLYLOWTIREPRESSURE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 CRITICALLY_LOW_TIRE_PRESSURE = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCRITICALLYLOWTIREPRESSURE() {
        
        cRITICALLYLOWTIREPRESSURE_ = 0;
        onChanged();
        return this;
      }

      private int cURRENTGEAR_ ;
      /**
       * <code>int32 CURRENT_GEAR = 8;</code>
       * @return The cURRENTGEAR.
       */
      @java.lang.Override
      public int getCURRENTGEAR() {
        return cURRENTGEAR_;
      }
      /**
       * <code>int32 CURRENT_GEAR = 8;</code>
       * @param value The cURRENTGEAR to set.
       * @return This builder for chaining.
       */
      public Builder setCURRENTGEAR(int value) {
        
        cURRENTGEAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 CURRENT_GEAR = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCURRENTGEAR() {
        
        cURRENTGEAR_ = 0;
        onChanged();
        return this;
      }

      private int dISPLAYBRIGHTNESS_ ;
      /**
       * <code>int32 DISPLAY_BRIGHTNESS = 9;</code>
       * @return The dISPLAYBRIGHTNESS.
       */
      @java.lang.Override
      public int getDISPLAYBRIGHTNESS() {
        return dISPLAYBRIGHTNESS_;
      }
      /**
       * <code>int32 DISPLAY_BRIGHTNESS = 9;</code>
       * @param value The dISPLAYBRIGHTNESS to set.
       * @return This builder for chaining.
       */
      public Builder setDISPLAYBRIGHTNESS(int value) {
        
        dISPLAYBRIGHTNESS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DISPLAY_BRIGHTNESS = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDISPLAYBRIGHTNESS() {
        
        dISPLAYBRIGHTNESS_ = 0;
        onChanged();
        return this;
      }

      private int dISTANCEDISPLAYUNITS_ ;
      /**
       * <code>int32 DISTANCE_DISPLAY_UNITS = 10;</code>
       * @return The dISTANCEDISPLAYUNITS.
       */
      @java.lang.Override
      public int getDISTANCEDISPLAYUNITS() {
        return dISTANCEDISPLAYUNITS_;
      }
      /**
       * <code>int32 DISTANCE_DISPLAY_UNITS = 10;</code>
       * @param value The dISTANCEDISPLAYUNITS to set.
       * @return This builder for chaining.
       */
      public Builder setDISTANCEDISPLAYUNITS(int value) {
        
        dISTANCEDISPLAYUNITS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DISTANCE_DISPLAY_UNITS = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDISTANCEDISPLAYUNITS() {
        
        dISTANCEDISPLAYUNITS_ = 0;
        onChanged();
        return this;
      }

      private int dOORLOCK_ ;
      /**
       * <code>int32 DOOR_LOCK = 11;</code>
       * @return The dOORLOCK.
       */
      @java.lang.Override
      public int getDOORLOCK() {
        return dOORLOCK_;
      }
      /**
       * <code>int32 DOOR_LOCK = 11;</code>
       * @param value The dOORLOCK to set.
       * @return This builder for chaining.
       */
      public Builder setDOORLOCK(int value) {
        
        dOORLOCK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DOOR_LOCK = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDOORLOCK() {
        
        dOORLOCK_ = 0;
        onChanged();
        return this;
      }

      private int dOORMOVE_ ;
      /**
       * <code>int32 DOOR_MOVE = 12;</code>
       * @return The dOORMOVE.
       */
      @java.lang.Override
      public int getDOORMOVE() {
        return dOORMOVE_;
      }
      /**
       * <code>int32 DOOR_MOVE = 12;</code>
       * @param value The dOORMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setDOORMOVE(int value) {
        
        dOORMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DOOR_MOVE = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDOORMOVE() {
        
        dOORMOVE_ = 0;
        onChanged();
        return this;
      }

      private int dOORPOS_ ;
      /**
       * <code>int32 DOOR_POS = 13;</code>
       * @return The dOORPOS.
       */
      @java.lang.Override
      public int getDOORPOS() {
        return dOORPOS_;
      }
      /**
       * <code>int32 DOOR_POS = 13;</code>
       * @param value The dOORPOS to set.
       * @return This builder for chaining.
       */
      public Builder setDOORPOS(int value) {
        
        dOORPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DOOR_POS = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDOORPOS() {
        
        dOORPOS_ = 0;
        onChanged();
        return this;
      }

      private int eLECTRONICTOLLCOLLECTIONCARDSTATUS_ ;
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 14;</code>
       * @return The eLECTRONICTOLLCOLLECTIONCARDSTATUS.
       */
      @java.lang.Override
      public int getELECTRONICTOLLCOLLECTIONCARDSTATUS() {
        return eLECTRONICTOLLCOLLECTIONCARDSTATUS_;
      }
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 14;</code>
       * @param value The eLECTRONICTOLLCOLLECTIONCARDSTATUS to set.
       * @return This builder for chaining.
       */
      public Builder setELECTRONICTOLLCOLLECTIONCARDSTATUS(int value) {
        
        eLECTRONICTOLLCOLLECTIONCARDSTATUS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearELECTRONICTOLLCOLLECTIONCARDSTATUS() {
        
        eLECTRONICTOLLCOLLECTIONCARDSTATUS_ = 0;
        onChanged();
        return this;
      }

      private int eLECTRONICTOLLCOLLECTIONCARDTYPE_ ;
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 15;</code>
       * @return The eLECTRONICTOLLCOLLECTIONCARDTYPE.
       */
      @java.lang.Override
      public int getELECTRONICTOLLCOLLECTIONCARDTYPE() {
        return eLECTRONICTOLLCOLLECTIONCARDTYPE_;
      }
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 15;</code>
       * @param value The eLECTRONICTOLLCOLLECTIONCARDTYPE to set.
       * @return This builder for chaining.
       */
      public Builder setELECTRONICTOLLCOLLECTIONCARDTYPE(int value) {
        
        eLECTRONICTOLLCOLLECTIONCARDTYPE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearELECTRONICTOLLCOLLECTIONCARDTYPE() {
        
        eLECTRONICTOLLCOLLECTIONCARDTYPE_ = 0;
        onChanged();
        return this;
      }

      private int eNGINECOOLANTTEMP_ ;
      /**
       * <code>int32 ENGINE_COOLANT_TEMP = 16;</code>
       * @return The eNGINECOOLANTTEMP.
       */
      @java.lang.Override
      public int getENGINECOOLANTTEMP() {
        return eNGINECOOLANTTEMP_;
      }
      /**
       * <code>int32 ENGINE_COOLANT_TEMP = 16;</code>
       * @param value The eNGINECOOLANTTEMP to set.
       * @return This builder for chaining.
       */
      public Builder setENGINECOOLANTTEMP(int value) {
        
        eNGINECOOLANTTEMP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ENGINE_COOLANT_TEMP = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearENGINECOOLANTTEMP() {
        
        eNGINECOOLANTTEMP_ = 0;
        onChanged();
        return this;
      }

      private int eNGINEOILLEVEL_ ;
      /**
       * <code>int32 ENGINE_OIL_LEVEL = 17;</code>
       * @return The eNGINEOILLEVEL.
       */
      @java.lang.Override
      public int getENGINEOILLEVEL() {
        return eNGINEOILLEVEL_;
      }
      /**
       * <code>int32 ENGINE_OIL_LEVEL = 17;</code>
       * @param value The eNGINEOILLEVEL to set.
       * @return This builder for chaining.
       */
      public Builder setENGINEOILLEVEL(int value) {
        
        eNGINEOILLEVEL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ENGINE_OIL_LEVEL = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearENGINEOILLEVEL() {
        
        eNGINEOILLEVEL_ = 0;
        onChanged();
        return this;
      }

      private int eNGINEOILTEMP_ ;
      /**
       * <code>int32 ENGINE_OIL_TEMP = 18;</code>
       * @return The eNGINEOILTEMP.
       */
      @java.lang.Override
      public int getENGINEOILTEMP() {
        return eNGINEOILTEMP_;
      }
      /**
       * <code>int32 ENGINE_OIL_TEMP = 18;</code>
       * @param value The eNGINEOILTEMP to set.
       * @return This builder for chaining.
       */
      public Builder setENGINEOILTEMP(int value) {
        
        eNGINEOILTEMP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ENGINE_OIL_TEMP = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearENGINEOILTEMP() {
        
        eNGINEOILTEMP_ = 0;
        onChanged();
        return this;
      }

      private int eNGINERPM_ ;
      /**
       * <code>int32 ENGINE_RPM = 19;</code>
       * @return The eNGINERPM.
       */
      @java.lang.Override
      public int getENGINERPM() {
        return eNGINERPM_;
      }
      /**
       * <code>int32 ENGINE_RPM = 19;</code>
       * @param value The eNGINERPM to set.
       * @return This builder for chaining.
       */
      public Builder setENGINERPM(int value) {
        
        eNGINERPM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ENGINE_RPM = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearENGINERPM() {
        
        eNGINERPM_ = 0;
        onChanged();
        return this;
      }

      private int eNVOUTSIDETEMPERATURE_ ;
      /**
       * <code>int32 ENV_OUTSIDE_TEMPERATURE = 20;</code>
       * @return The eNVOUTSIDETEMPERATURE.
       */
      @java.lang.Override
      public int getENVOUTSIDETEMPERATURE() {
        return eNVOUTSIDETEMPERATURE_;
      }
      /**
       * <code>int32 ENV_OUTSIDE_TEMPERATURE = 20;</code>
       * @param value The eNVOUTSIDETEMPERATURE to set.
       * @return This builder for chaining.
       */
      public Builder setENVOUTSIDETEMPERATURE(int value) {
        
        eNVOUTSIDETEMPERATURE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ENV_OUTSIDE_TEMPERATURE = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearENVOUTSIDETEMPERATURE() {
        
        eNVOUTSIDETEMPERATURE_ = 0;
        onChanged();
        return this;
      }

      private int ePOCHTIME_ ;
      /**
       * <code>int32 EPOCH_TIME = 21;</code>
       * @return The ePOCHTIME.
       */
      @java.lang.Override
      public int getEPOCHTIME() {
        return ePOCHTIME_;
      }
      /**
       * <code>int32 EPOCH_TIME = 21;</code>
       * @param value The ePOCHTIME to set.
       * @return This builder for chaining.
       */
      public Builder setEPOCHTIME(int value) {
        
        ePOCHTIME_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EPOCH_TIME = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearEPOCHTIME() {
        
        ePOCHTIME_ = 0;
        onChanged();
        return this;
      }

      private int eVBATTERYDISPLAYUNITS_ ;
      /**
       * <code>int32 EV_BATTERY_DISPLAY_UNITS = 22;</code>
       * @return The eVBATTERYDISPLAYUNITS.
       */
      @java.lang.Override
      public int getEVBATTERYDISPLAYUNITS() {
        return eVBATTERYDISPLAYUNITS_;
      }
      /**
       * <code>int32 EV_BATTERY_DISPLAY_UNITS = 22;</code>
       * @param value The eVBATTERYDISPLAYUNITS to set.
       * @return This builder for chaining.
       */
      public Builder setEVBATTERYDISPLAYUNITS(int value) {
        
        eVBATTERYDISPLAYUNITS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EV_BATTERY_DISPLAY_UNITS = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearEVBATTERYDISPLAYUNITS() {
        
        eVBATTERYDISPLAYUNITS_ = 0;
        onChanged();
        return this;
      }

      private int eVBATTERYINSTANTANEOUSCHARGERATE_ ;
      /**
       * <code>int32 EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 23;</code>
       * @return The eVBATTERYINSTANTANEOUSCHARGERATE.
       */
      @java.lang.Override
      public int getEVBATTERYINSTANTANEOUSCHARGERATE() {
        return eVBATTERYINSTANTANEOUSCHARGERATE_;
      }
      /**
       * <code>int32 EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 23;</code>
       * @param value The eVBATTERYINSTANTANEOUSCHARGERATE to set.
       * @return This builder for chaining.
       */
      public Builder setEVBATTERYINSTANTANEOUSCHARGERATE(int value) {
        
        eVBATTERYINSTANTANEOUSCHARGERATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearEVBATTERYINSTANTANEOUSCHARGERATE() {
        
        eVBATTERYINSTANTANEOUSCHARGERATE_ = 0;
        onChanged();
        return this;
      }

      private int eVBATTERYLEVEL_ ;
      /**
       * <code>int32 EV_BATTERY_LEVEL = 24;</code>
       * @return The eVBATTERYLEVEL.
       */
      @java.lang.Override
      public int getEVBATTERYLEVEL() {
        return eVBATTERYLEVEL_;
      }
      /**
       * <code>int32 EV_BATTERY_LEVEL = 24;</code>
       * @param value The eVBATTERYLEVEL to set.
       * @return This builder for chaining.
       */
      public Builder setEVBATTERYLEVEL(int value) {
        
        eVBATTERYLEVEL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EV_BATTERY_LEVEL = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearEVBATTERYLEVEL() {
        
        eVBATTERYLEVEL_ = 0;
        onChanged();
        return this;
      }

      private int eVCHARGEPORTCONNECTED_ ;
      /**
       * <code>int32 EV_CHARGE_PORT_CONNECTED = 25;</code>
       * @return The eVCHARGEPORTCONNECTED.
       */
      @java.lang.Override
      public int getEVCHARGEPORTCONNECTED() {
        return eVCHARGEPORTCONNECTED_;
      }
      /**
       * <code>int32 EV_CHARGE_PORT_CONNECTED = 25;</code>
       * @param value The eVCHARGEPORTCONNECTED to set.
       * @return This builder for chaining.
       */
      public Builder setEVCHARGEPORTCONNECTED(int value) {
        
        eVCHARGEPORTCONNECTED_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EV_CHARGE_PORT_CONNECTED = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearEVCHARGEPORTCONNECTED() {
        
        eVCHARGEPORTCONNECTED_ = 0;
        onChanged();
        return this;
      }

      private int eVCHARGEPORTOPEN_ ;
      /**
       * <code>int32 EV_CHARGE_PORT_OPEN = 26;</code>
       * @return The eVCHARGEPORTOPEN.
       */
      @java.lang.Override
      public int getEVCHARGEPORTOPEN() {
        return eVCHARGEPORTOPEN_;
      }
      /**
       * <code>int32 EV_CHARGE_PORT_OPEN = 26;</code>
       * @param value The eVCHARGEPORTOPEN to set.
       * @return This builder for chaining.
       */
      public Builder setEVCHARGEPORTOPEN(int value) {
        
        eVCHARGEPORTOPEN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 EV_CHARGE_PORT_OPEN = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearEVCHARGEPORTOPEN() {
        
        eVCHARGEPORTOPEN_ = 0;
        onChanged();
        return this;
      }

      private int fOGLIGHTSSTATE_ ;
      /**
       * <code>int32 FOG_LIGHTS_STATE = 27;</code>
       * @return The fOGLIGHTSSTATE.
       */
      @java.lang.Override
      public int getFOGLIGHTSSTATE() {
        return fOGLIGHTSSTATE_;
      }
      /**
       * <code>int32 FOG_LIGHTS_STATE = 27;</code>
       * @param value The fOGLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setFOGLIGHTSSTATE(int value) {
        
        fOGLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FOG_LIGHTS_STATE = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearFOGLIGHTSSTATE() {
        
        fOGLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int fOGLIGHTSSWITCH_ ;
      /**
       * <code>int32 FOG_LIGHTS_SWITCH = 28;</code>
       * @return The fOGLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getFOGLIGHTSSWITCH() {
        return fOGLIGHTSSWITCH_;
      }
      /**
       * <code>int32 FOG_LIGHTS_SWITCH = 28;</code>
       * @param value The fOGLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setFOGLIGHTSSWITCH(int value) {
        
        fOGLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FOG_LIGHTS_SWITCH = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearFOGLIGHTSSWITCH() {
        
        fOGLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ ;
      /**
       * <code>int32 FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 29;</code>
       * @return The fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME.
       */
      @java.lang.Override
      public int getFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME() {
        return fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_;
      }
      /**
       * <code>int32 FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 29;</code>
       * @param value The fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME to set.
       * @return This builder for chaining.
       */
      public Builder setFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME(int value) {
        
        fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearFUELCONSUMPTIONUNITSDISTANCEOVERVOLUME() {
        
        fUELCONSUMPTIONUNITSDISTANCEOVERVOLUME_ = 0;
        onChanged();
        return this;
      }

      private int fUELDOOROPEN_ ;
      /**
       * <code>int32 FUEL_DOOR_OPEN = 30;</code>
       * @return The fUELDOOROPEN.
       */
      @java.lang.Override
      public int getFUELDOOROPEN() {
        return fUELDOOROPEN_;
      }
      /**
       * <code>int32 FUEL_DOOR_OPEN = 30;</code>
       * @param value The fUELDOOROPEN to set.
       * @return This builder for chaining.
       */
      public Builder setFUELDOOROPEN(int value) {
        
        fUELDOOROPEN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FUEL_DOOR_OPEN = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearFUELDOOROPEN() {
        
        fUELDOOROPEN_ = 0;
        onChanged();
        return this;
      }

      private int fUELLEVEL_ ;
      /**
       * <code>int32 FUEL_LEVEL = 31;</code>
       * @return The fUELLEVEL.
       */
      @java.lang.Override
      public int getFUELLEVEL() {
        return fUELLEVEL_;
      }
      /**
       * <code>int32 FUEL_LEVEL = 31;</code>
       * @param value The fUELLEVEL to set.
       * @return This builder for chaining.
       */
      public Builder setFUELLEVEL(int value) {
        
        fUELLEVEL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FUEL_LEVEL = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearFUELLEVEL() {
        
        fUELLEVEL_ = 0;
        onChanged();
        return this;
      }

      private int fUELLEVELLOW_ ;
      /**
       * <code>int32 FUEL_LEVEL_LOW = 32;</code>
       * @return The fUELLEVELLOW.
       */
      @java.lang.Override
      public int getFUELLEVELLOW() {
        return fUELLEVELLOW_;
      }
      /**
       * <code>int32 FUEL_LEVEL_LOW = 32;</code>
       * @param value The fUELLEVELLOW to set.
       * @return This builder for chaining.
       */
      public Builder setFUELLEVELLOW(int value) {
        
        fUELLEVELLOW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FUEL_LEVEL_LOW = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearFUELLEVELLOW() {
        
        fUELLEVELLOW_ = 0;
        onChanged();
        return this;
      }

      private int fUELVOLUMEDISPLAYUNITS_ ;
      /**
       * <code>int32 FUEL_VOLUME_DISPLAY_UNITS = 33;</code>
       * @return The fUELVOLUMEDISPLAYUNITS.
       */
      @java.lang.Override
      public int getFUELVOLUMEDISPLAYUNITS() {
        return fUELVOLUMEDISPLAYUNITS_;
      }
      /**
       * <code>int32 FUEL_VOLUME_DISPLAY_UNITS = 33;</code>
       * @param value The fUELVOLUMEDISPLAYUNITS to set.
       * @return This builder for chaining.
       */
      public Builder setFUELVOLUMEDISPLAYUNITS(int value) {
        
        fUELVOLUMEDISPLAYUNITS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 FUEL_VOLUME_DISPLAY_UNITS = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearFUELVOLUMEDISPLAYUNITS() {
        
        fUELVOLUMEDISPLAYUNITS_ = 0;
        onChanged();
        return this;
      }

      private int gEARSELECTION_ ;
      /**
       * <code>int32 GEAR_SELECTION = 34;</code>
       * @return The gEARSELECTION.
       */
      @java.lang.Override
      public int getGEARSELECTION() {
        return gEARSELECTION_;
      }
      /**
       * <code>int32 GEAR_SELECTION = 34;</code>
       * @param value The gEARSELECTION to set.
       * @return This builder for chaining.
       */
      public Builder setGEARSELECTION(int value) {
        
        gEARSELECTION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 GEAR_SELECTION = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearGEARSELECTION() {
        
        gEARSELECTION_ = 0;
        onChanged();
        return this;
      }

      private int hAZARDLIGHTSSTATE_ ;
      /**
       * <code>int32 HAZARD_LIGHTS_STATE = 35;</code>
       * @return The hAZARDLIGHTSSTATE.
       */
      @java.lang.Override
      public int getHAZARDLIGHTSSTATE() {
        return hAZARDLIGHTSSTATE_;
      }
      /**
       * <code>int32 HAZARD_LIGHTS_STATE = 35;</code>
       * @param value The hAZARDLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setHAZARDLIGHTSSTATE(int value) {
        
        hAZARDLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HAZARD_LIGHTS_STATE = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearHAZARDLIGHTSSTATE() {
        
        hAZARDLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int hAZARDLIGHTSSWITCH_ ;
      /**
       * <code>int32 HAZARD_LIGHTS_SWITCH = 36;</code>
       * @return The hAZARDLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getHAZARDLIGHTSSWITCH() {
        return hAZARDLIGHTSSWITCH_;
      }
      /**
       * <code>int32 HAZARD_LIGHTS_SWITCH = 36;</code>
       * @param value The hAZARDLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setHAZARDLIGHTSSWITCH(int value) {
        
        hAZARDLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HAZARD_LIGHTS_SWITCH = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearHAZARDLIGHTSSWITCH() {
        
        hAZARDLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int hEADLIGHTSSTATE_ ;
      /**
       * <code>int32 HEADLIGHTS_STATE = 37;</code>
       * @return The hEADLIGHTSSTATE.
       */
      @java.lang.Override
      public int getHEADLIGHTSSTATE() {
        return hEADLIGHTSSTATE_;
      }
      /**
       * <code>int32 HEADLIGHTS_STATE = 37;</code>
       * @param value The hEADLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setHEADLIGHTSSTATE(int value) {
        
        hEADLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HEADLIGHTS_STATE = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearHEADLIGHTSSTATE() {
        
        hEADLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int hEADLIGHTSSWITCH_ ;
      /**
       * <code>int32 HEADLIGHTS_SWITCH = 38;</code>
       * @return The hEADLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getHEADLIGHTSSWITCH() {
        return hEADLIGHTSSWITCH_;
      }
      /**
       * <code>int32 HEADLIGHTS_SWITCH = 38;</code>
       * @param value The hEADLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setHEADLIGHTSSWITCH(int value) {
        
        hEADLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HEADLIGHTS_SWITCH = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearHEADLIGHTSSWITCH() {
        
        hEADLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int hIGHBEAMLIGHTSSTATE_ ;
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_STATE = 39;</code>
       * @return The hIGHBEAMLIGHTSSTATE.
       */
      @java.lang.Override
      public int getHIGHBEAMLIGHTSSTATE() {
        return hIGHBEAMLIGHTSSTATE_;
      }
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_STATE = 39;</code>
       * @param value The hIGHBEAMLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setHIGHBEAMLIGHTSSTATE(int value) {
        
        hIGHBEAMLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_STATE = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearHIGHBEAMLIGHTSSTATE() {
        
        hIGHBEAMLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int hIGHBEAMLIGHTSSWITCH_ ;
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_SWITCH = 40;</code>
       * @return The hIGHBEAMLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getHIGHBEAMLIGHTSSWITCH() {
        return hIGHBEAMLIGHTSSWITCH_;
      }
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_SWITCH = 40;</code>
       * @param value The hIGHBEAMLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setHIGHBEAMLIGHTSSWITCH(int value) {
        
        hIGHBEAMLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HIGH_BEAM_LIGHTS_SWITCH = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearHIGHBEAMLIGHTSSWITCH() {
        
        hIGHBEAMLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int hVACACTUALFANSPEEDRPM_ ;
      /**
       * <code>int32 HVAC_ACTUAL_FAN_SPEED_RPM = 41;</code>
       * @return The hVACACTUALFANSPEEDRPM.
       */
      @java.lang.Override
      public int getHVACACTUALFANSPEEDRPM() {
        return hVACACTUALFANSPEEDRPM_;
      }
      /**
       * <code>int32 HVAC_ACTUAL_FAN_SPEED_RPM = 41;</code>
       * @param value The hVACACTUALFANSPEEDRPM to set.
       * @return This builder for chaining.
       */
      public Builder setHVACACTUALFANSPEEDRPM(int value) {
        
        hVACACTUALFANSPEEDRPM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_ACTUAL_FAN_SPEED_RPM = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACACTUALFANSPEEDRPM() {
        
        hVACACTUALFANSPEEDRPM_ = 0;
        onChanged();
        return this;
      }

      private int hVACACON_ ;
      /**
       * <code>int32 HVAC_AC_ON = 42;</code>
       * @return The hVACACON.
       */
      @java.lang.Override
      public int getHVACACON() {
        return hVACACON_;
      }
      /**
       * <code>int32 HVAC_AC_ON = 42;</code>
       * @param value The hVACACON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACACON(int value) {
        
        hVACACON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_AC_ON = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACACON() {
        
        hVACACON_ = 0;
        onChanged();
        return this;
      }

      private int hVACAUTOON_ ;
      /**
       * <code>int32 HVAC_AUTO_ON = 43;</code>
       * @return The hVACAUTOON.
       */
      @java.lang.Override
      public int getHVACAUTOON() {
        return hVACAUTOON_;
      }
      /**
       * <code>int32 HVAC_AUTO_ON = 43;</code>
       * @param value The hVACAUTOON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACAUTOON(int value) {
        
        hVACAUTOON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_AUTO_ON = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACAUTOON() {
        
        hVACAUTOON_ = 0;
        onChanged();
        return this;
      }

      private int hVACAUTORECIRCON_ ;
      /**
       * <code>int32 HVAC_AUTO_RECIRC_ON = 44;</code>
       * @return The hVACAUTORECIRCON.
       */
      @java.lang.Override
      public int getHVACAUTORECIRCON() {
        return hVACAUTORECIRCON_;
      }
      /**
       * <code>int32 HVAC_AUTO_RECIRC_ON = 44;</code>
       * @param value The hVACAUTORECIRCON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACAUTORECIRCON(int value) {
        
        hVACAUTORECIRCON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_AUTO_RECIRC_ON = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACAUTORECIRCON() {
        
        hVACAUTORECIRCON_ = 0;
        onChanged();
        return this;
      }

      private int hVACDEFROSTER_ ;
      /**
       * <code>int32 HVAC_DEFROSTER = 45;</code>
       * @return The hVACDEFROSTER.
       */
      @java.lang.Override
      public int getHVACDEFROSTER() {
        return hVACDEFROSTER_;
      }
      /**
       * <code>int32 HVAC_DEFROSTER = 45;</code>
       * @param value The hVACDEFROSTER to set.
       * @return This builder for chaining.
       */
      public Builder setHVACDEFROSTER(int value) {
        
        hVACDEFROSTER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_DEFROSTER = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACDEFROSTER() {
        
        hVACDEFROSTER_ = 0;
        onChanged();
        return this;
      }

      private int hVACDUALON_ ;
      /**
       * <code>int32 HVAC_DUAL_ON = 46;</code>
       * @return The hVACDUALON.
       */
      @java.lang.Override
      public int getHVACDUALON() {
        return hVACDUALON_;
      }
      /**
       * <code>int32 HVAC_DUAL_ON = 46;</code>
       * @param value The hVACDUALON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACDUALON(int value) {
        
        hVACDUALON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_DUAL_ON = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACDUALON() {
        
        hVACDUALON_ = 0;
        onChanged();
        return this;
      }

      private int hVACFANDIRECTION_ ;
      /**
       * <code>int32 HVAC_FAN_DIRECTION = 47;</code>
       * @return The hVACFANDIRECTION.
       */
      @java.lang.Override
      public int getHVACFANDIRECTION() {
        return hVACFANDIRECTION_;
      }
      /**
       * <code>int32 HVAC_FAN_DIRECTION = 47;</code>
       * @param value The hVACFANDIRECTION to set.
       * @return This builder for chaining.
       */
      public Builder setHVACFANDIRECTION(int value) {
        
        hVACFANDIRECTION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_FAN_DIRECTION = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACFANDIRECTION() {
        
        hVACFANDIRECTION_ = 0;
        onChanged();
        return this;
      }

      private int hVACFANDIRECTIONAVAILABLE_ ;
      /**
       * <code>int32 HVAC_FAN_DIRECTION_AVAILABLE = 48;</code>
       * @return The hVACFANDIRECTIONAVAILABLE.
       */
      @java.lang.Override
      public int getHVACFANDIRECTIONAVAILABLE() {
        return hVACFANDIRECTIONAVAILABLE_;
      }
      /**
       * <code>int32 HVAC_FAN_DIRECTION_AVAILABLE = 48;</code>
       * @param value The hVACFANDIRECTIONAVAILABLE to set.
       * @return This builder for chaining.
       */
      public Builder setHVACFANDIRECTIONAVAILABLE(int value) {
        
        hVACFANDIRECTIONAVAILABLE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_FAN_DIRECTION_AVAILABLE = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACFANDIRECTIONAVAILABLE() {
        
        hVACFANDIRECTIONAVAILABLE_ = 0;
        onChanged();
        return this;
      }

      private int hVACFANSPEED_ ;
      /**
       * <code>int32 HVAC_FAN_SPEED = 49;</code>
       * @return The hVACFANSPEED.
       */
      @java.lang.Override
      public int getHVACFANSPEED() {
        return hVACFANSPEED_;
      }
      /**
       * <code>int32 HVAC_FAN_SPEED = 49;</code>
       * @param value The hVACFANSPEED to set.
       * @return This builder for chaining.
       */
      public Builder setHVACFANSPEED(int value) {
        
        hVACFANSPEED_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_FAN_SPEED = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACFANSPEED() {
        
        hVACFANSPEED_ = 0;
        onChanged();
        return this;
      }

      private int hVACMAXACON_ ;
      /**
       * <code>int32 HVAC_MAX_AC_ON = 50;</code>
       * @return The hVACMAXACON.
       */
      @java.lang.Override
      public int getHVACMAXACON() {
        return hVACMAXACON_;
      }
      /**
       * <code>int32 HVAC_MAX_AC_ON = 50;</code>
       * @param value The hVACMAXACON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACMAXACON(int value) {
        
        hVACMAXACON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_MAX_AC_ON = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACMAXACON() {
        
        hVACMAXACON_ = 0;
        onChanged();
        return this;
      }

      private int hVACMAXDEFROSTON_ ;
      /**
       * <code>int32 HVAC_MAX_DEFROST_ON = 51;</code>
       * @return The hVACMAXDEFROSTON.
       */
      @java.lang.Override
      public int getHVACMAXDEFROSTON() {
        return hVACMAXDEFROSTON_;
      }
      /**
       * <code>int32 HVAC_MAX_DEFROST_ON = 51;</code>
       * @param value The hVACMAXDEFROSTON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACMAXDEFROSTON(int value) {
        
        hVACMAXDEFROSTON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_MAX_DEFROST_ON = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACMAXDEFROSTON() {
        
        hVACMAXDEFROSTON_ = 0;
        onChanged();
        return this;
      }

      private int hVACPOWERON_ ;
      /**
       * <code>int32 HVAC_POWER_ON = 52;</code>
       * @return The hVACPOWERON.
       */
      @java.lang.Override
      public int getHVACPOWERON() {
        return hVACPOWERON_;
      }
      /**
       * <code>int32 HVAC_POWER_ON = 52;</code>
       * @param value The hVACPOWERON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACPOWERON(int value) {
        
        hVACPOWERON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_POWER_ON = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACPOWERON() {
        
        hVACPOWERON_ = 0;
        onChanged();
        return this;
      }

      private int hVACRECIRCON_ ;
      /**
       * <code>int32 HVAC_RECIRC_ON = 53;</code>
       * @return The hVACRECIRCON.
       */
      @java.lang.Override
      public int getHVACRECIRCON() {
        return hVACRECIRCON_;
      }
      /**
       * <code>int32 HVAC_RECIRC_ON = 53;</code>
       * @param value The hVACRECIRCON to set.
       * @return This builder for chaining.
       */
      public Builder setHVACRECIRCON(int value) {
        
        hVACRECIRCON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_RECIRC_ON = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACRECIRCON() {
        
        hVACRECIRCON_ = 0;
        onChanged();
        return this;
      }

      private int hVACSEATTEMPERATURE_ ;
      /**
       * <code>int32 HVAC_SEAT_TEMPERATURE = 54;</code>
       * @return The hVACSEATTEMPERATURE.
       */
      @java.lang.Override
      public int getHVACSEATTEMPERATURE() {
        return hVACSEATTEMPERATURE_;
      }
      /**
       * <code>int32 HVAC_SEAT_TEMPERATURE = 54;</code>
       * @param value The hVACSEATTEMPERATURE to set.
       * @return This builder for chaining.
       */
      public Builder setHVACSEATTEMPERATURE(int value) {
        
        hVACSEATTEMPERATURE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_SEAT_TEMPERATURE = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACSEATTEMPERATURE() {
        
        hVACSEATTEMPERATURE_ = 0;
        onChanged();
        return this;
      }

      private int hVACSEATVENTILATION_ ;
      /**
       * <code>int32 HVAC_SEAT_VENTILATION = 55;</code>
       * @return The hVACSEATVENTILATION.
       */
      @java.lang.Override
      public int getHVACSEATVENTILATION() {
        return hVACSEATVENTILATION_;
      }
      /**
       * <code>int32 HVAC_SEAT_VENTILATION = 55;</code>
       * @param value The hVACSEATVENTILATION to set.
       * @return This builder for chaining.
       */
      public Builder setHVACSEATVENTILATION(int value) {
        
        hVACSEATVENTILATION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_SEAT_VENTILATION = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACSEATVENTILATION() {
        
        hVACSEATVENTILATION_ = 0;
        onChanged();
        return this;
      }

      private int hVACSIDEMIRRORHEAT_ ;
      /**
       * <code>int32 HVAC_SIDE_MIRROR_HEAT = 56;</code>
       * @return The hVACSIDEMIRRORHEAT.
       */
      @java.lang.Override
      public int getHVACSIDEMIRRORHEAT() {
        return hVACSIDEMIRRORHEAT_;
      }
      /**
       * <code>int32 HVAC_SIDE_MIRROR_HEAT = 56;</code>
       * @param value The hVACSIDEMIRRORHEAT to set.
       * @return This builder for chaining.
       */
      public Builder setHVACSIDEMIRRORHEAT(int value) {
        
        hVACSIDEMIRRORHEAT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_SIDE_MIRROR_HEAT = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACSIDEMIRRORHEAT() {
        
        hVACSIDEMIRRORHEAT_ = 0;
        onChanged();
        return this;
      }

      private int hVACSTEERINGWHEELHEAT_ ;
      /**
       * <code>int32 HVAC_STEERING_WHEEL_HEAT = 57;</code>
       * @return The hVACSTEERINGWHEELHEAT.
       */
      @java.lang.Override
      public int getHVACSTEERINGWHEELHEAT() {
        return hVACSTEERINGWHEELHEAT_;
      }
      /**
       * <code>int32 HVAC_STEERING_WHEEL_HEAT = 57;</code>
       * @param value The hVACSTEERINGWHEELHEAT to set.
       * @return This builder for chaining.
       */
      public Builder setHVACSTEERINGWHEELHEAT(int value) {
        
        hVACSTEERINGWHEELHEAT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_STEERING_WHEEL_HEAT = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACSTEERINGWHEELHEAT() {
        
        hVACSTEERINGWHEELHEAT_ = 0;
        onChanged();
        return this;
      }

      private int hVACTEMPERATURECURRENT_ ;
      /**
       * <code>int32 HVAC_TEMPERATURE_CURRENT = 58;</code>
       * @return The hVACTEMPERATURECURRENT.
       */
      @java.lang.Override
      public int getHVACTEMPERATURECURRENT() {
        return hVACTEMPERATURECURRENT_;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_CURRENT = 58;</code>
       * @param value The hVACTEMPERATURECURRENT to set.
       * @return This builder for chaining.
       */
      public Builder setHVACTEMPERATURECURRENT(int value) {
        
        hVACTEMPERATURECURRENT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_CURRENT = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACTEMPERATURECURRENT() {
        
        hVACTEMPERATURECURRENT_ = 0;
        onChanged();
        return this;
      }

      private int hVACTEMPERATUREDISPLAYUNITS_ ;
      /**
       * <code>int32 HVAC_TEMPERATURE_DISPLAY_UNITS = 59;</code>
       * @return The hVACTEMPERATUREDISPLAYUNITS.
       */
      @java.lang.Override
      public int getHVACTEMPERATUREDISPLAYUNITS() {
        return hVACTEMPERATUREDISPLAYUNITS_;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_DISPLAY_UNITS = 59;</code>
       * @param value The hVACTEMPERATUREDISPLAYUNITS to set.
       * @return This builder for chaining.
       */
      public Builder setHVACTEMPERATUREDISPLAYUNITS(int value) {
        
        hVACTEMPERATUREDISPLAYUNITS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_DISPLAY_UNITS = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACTEMPERATUREDISPLAYUNITS() {
        
        hVACTEMPERATUREDISPLAYUNITS_ = 0;
        onChanged();
        return this;
      }

      private int hVACTEMPERATURESET_ ;
      /**
       * <code>int32 HVAC_TEMPERATURE_SET = 60;</code>
       * @return The hVACTEMPERATURESET.
       */
      @java.lang.Override
      public int getHVACTEMPERATURESET() {
        return hVACTEMPERATURESET_;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_SET = 60;</code>
       * @param value The hVACTEMPERATURESET to set.
       * @return This builder for chaining.
       */
      public Builder setHVACTEMPERATURESET(int value) {
        
        hVACTEMPERATURESET_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_SET = 60;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACTEMPERATURESET() {
        
        hVACTEMPERATURESET_ = 0;
        onChanged();
        return this;
      }

      private int hVACTEMPERATUREVALUESUGGESTION_ ;
      /**
       * <code>int32 HVAC_TEMPERATURE_VALUE_SUGGESTION = 61;</code>
       * @return The hVACTEMPERATUREVALUESUGGESTION.
       */
      @java.lang.Override
      public int getHVACTEMPERATUREVALUESUGGESTION() {
        return hVACTEMPERATUREVALUESUGGESTION_;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_VALUE_SUGGESTION = 61;</code>
       * @param value The hVACTEMPERATUREVALUESUGGESTION to set.
       * @return This builder for chaining.
       */
      public Builder setHVACTEMPERATUREVALUESUGGESTION(int value) {
        
        hVACTEMPERATUREVALUESUGGESTION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HVAC_TEMPERATURE_VALUE_SUGGESTION = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearHVACTEMPERATUREVALUESUGGESTION() {
        
        hVACTEMPERATUREVALUESUGGESTION_ = 0;
        onChanged();
        return this;
      }

      private int hWKEYINPUT_ ;
      /**
       * <code>int32 HW_KEY_INPUT = 62;</code>
       * @return The hWKEYINPUT.
       */
      @java.lang.Override
      public int getHWKEYINPUT() {
        return hWKEYINPUT_;
      }
      /**
       * <code>int32 HW_KEY_INPUT = 62;</code>
       * @param value The hWKEYINPUT to set.
       * @return This builder for chaining.
       */
      public Builder setHWKEYINPUT(int value) {
        
        hWKEYINPUT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HW_KEY_INPUT = 62;</code>
       * @return This builder for chaining.
       */
      public Builder clearHWKEYINPUT() {
        
        hWKEYINPUT_ = 0;
        onChanged();
        return this;
      }

      private int iGNITIONSTATE_ ;
      /**
       * <code>int32 IGNITION_STATE = 63;</code>
       * @return The iGNITIONSTATE.
       */
      @java.lang.Override
      public int getIGNITIONSTATE() {
        return iGNITIONSTATE_;
      }
      /**
       * <code>int32 IGNITION_STATE = 63;</code>
       * @param value The iGNITIONSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setIGNITIONSTATE(int value) {
        
        iGNITIONSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 IGNITION_STATE = 63;</code>
       * @return This builder for chaining.
       */
      public Builder clearIGNITIONSTATE() {
        
        iGNITIONSTATE_ = 0;
        onChanged();
        return this;
      }

      private int iNFODRIVERSEAT_ ;
      /**
       * <code>int32 INFO_DRIVER_SEAT = 64;</code>
       * @return The iNFODRIVERSEAT.
       */
      @java.lang.Override
      public int getINFODRIVERSEAT() {
        return iNFODRIVERSEAT_;
      }
      /**
       * <code>int32 INFO_DRIVER_SEAT = 64;</code>
       * @param value The iNFODRIVERSEAT to set.
       * @return This builder for chaining.
       */
      public Builder setINFODRIVERSEAT(int value) {
        
        iNFODRIVERSEAT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_DRIVER_SEAT = 64;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFODRIVERSEAT() {
        
        iNFODRIVERSEAT_ = 0;
        onChanged();
        return this;
      }

      private int iNFOEVBATTERYCAPACITY_ ;
      /**
       * <code>int32 INFO_EV_BATTERY_CAPACITY = 65;</code>
       * @return The iNFOEVBATTERYCAPACITY.
       */
      @java.lang.Override
      public int getINFOEVBATTERYCAPACITY() {
        return iNFOEVBATTERYCAPACITY_;
      }
      /**
       * <code>int32 INFO_EV_BATTERY_CAPACITY = 65;</code>
       * @param value The iNFOEVBATTERYCAPACITY to set.
       * @return This builder for chaining.
       */
      public Builder setINFOEVBATTERYCAPACITY(int value) {
        
        iNFOEVBATTERYCAPACITY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_EV_BATTERY_CAPACITY = 65;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOEVBATTERYCAPACITY() {
        
        iNFOEVBATTERYCAPACITY_ = 0;
        onChanged();
        return this;
      }

      private int iNFOEVCONNECTORTYPE_ ;
      /**
       * <code>int32 INFO_EV_CONNECTOR_TYPE = 66;</code>
       * @return The iNFOEVCONNECTORTYPE.
       */
      @java.lang.Override
      public int getINFOEVCONNECTORTYPE() {
        return iNFOEVCONNECTORTYPE_;
      }
      /**
       * <code>int32 INFO_EV_CONNECTOR_TYPE = 66;</code>
       * @param value The iNFOEVCONNECTORTYPE to set.
       * @return This builder for chaining.
       */
      public Builder setINFOEVCONNECTORTYPE(int value) {
        
        iNFOEVCONNECTORTYPE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_EV_CONNECTOR_TYPE = 66;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOEVCONNECTORTYPE() {
        
        iNFOEVCONNECTORTYPE_ = 0;
        onChanged();
        return this;
      }

      private int iNFOEVPORTLOCATION_ ;
      /**
       * <code>int32 INFO_EV_PORT_LOCATION = 67;</code>
       * @return The iNFOEVPORTLOCATION.
       */
      @java.lang.Override
      public int getINFOEVPORTLOCATION() {
        return iNFOEVPORTLOCATION_;
      }
      /**
       * <code>int32 INFO_EV_PORT_LOCATION = 67;</code>
       * @param value The iNFOEVPORTLOCATION to set.
       * @return This builder for chaining.
       */
      public Builder setINFOEVPORTLOCATION(int value) {
        
        iNFOEVPORTLOCATION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_EV_PORT_LOCATION = 67;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOEVPORTLOCATION() {
        
        iNFOEVPORTLOCATION_ = 0;
        onChanged();
        return this;
      }

      private int iNFOEXTERIORDIMENSIONS_ ;
      /**
       * <code>int32 INFO_EXTERIOR_DIMENSIONS = 68;</code>
       * @return The iNFOEXTERIORDIMENSIONS.
       */
      @java.lang.Override
      public int getINFOEXTERIORDIMENSIONS() {
        return iNFOEXTERIORDIMENSIONS_;
      }
      /**
       * <code>int32 INFO_EXTERIOR_DIMENSIONS = 68;</code>
       * @param value The iNFOEXTERIORDIMENSIONS to set.
       * @return This builder for chaining.
       */
      public Builder setINFOEXTERIORDIMENSIONS(int value) {
        
        iNFOEXTERIORDIMENSIONS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_EXTERIOR_DIMENSIONS = 68;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOEXTERIORDIMENSIONS() {
        
        iNFOEXTERIORDIMENSIONS_ = 0;
        onChanged();
        return this;
      }

      private int iNFOFUELCAPACITY_ ;
      /**
       * <code>int32 INFO_FUEL_CAPACITY = 69;</code>
       * @return The iNFOFUELCAPACITY.
       */
      @java.lang.Override
      public int getINFOFUELCAPACITY() {
        return iNFOFUELCAPACITY_;
      }
      /**
       * <code>int32 INFO_FUEL_CAPACITY = 69;</code>
       * @param value The iNFOFUELCAPACITY to set.
       * @return This builder for chaining.
       */
      public Builder setINFOFUELCAPACITY(int value) {
        
        iNFOFUELCAPACITY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_FUEL_CAPACITY = 69;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOFUELCAPACITY() {
        
        iNFOFUELCAPACITY_ = 0;
        onChanged();
        return this;
      }

      private int iNFOFUELDOORLOCATION_ ;
      /**
       * <code>int32 INFO_FUEL_DOOR_LOCATION = 70;</code>
       * @return The iNFOFUELDOORLOCATION.
       */
      @java.lang.Override
      public int getINFOFUELDOORLOCATION() {
        return iNFOFUELDOORLOCATION_;
      }
      /**
       * <code>int32 INFO_FUEL_DOOR_LOCATION = 70;</code>
       * @param value The iNFOFUELDOORLOCATION to set.
       * @return This builder for chaining.
       */
      public Builder setINFOFUELDOORLOCATION(int value) {
        
        iNFOFUELDOORLOCATION_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_FUEL_DOOR_LOCATION = 70;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOFUELDOORLOCATION() {
        
        iNFOFUELDOORLOCATION_ = 0;
        onChanged();
        return this;
      }

      private int iNFOFUELTYPE_ ;
      /**
       * <code>int32 INFO_FUEL_TYPE = 71;</code>
       * @return The iNFOFUELTYPE.
       */
      @java.lang.Override
      public int getINFOFUELTYPE() {
        return iNFOFUELTYPE_;
      }
      /**
       * <code>int32 INFO_FUEL_TYPE = 71;</code>
       * @param value The iNFOFUELTYPE to set.
       * @return This builder for chaining.
       */
      public Builder setINFOFUELTYPE(int value) {
        
        iNFOFUELTYPE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_FUEL_TYPE = 71;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOFUELTYPE() {
        
        iNFOFUELTYPE_ = 0;
        onChanged();
        return this;
      }

      private int iNFOMAKE_ ;
      /**
       * <code>int32 INFO_MAKE = 72;</code>
       * @return The iNFOMAKE.
       */
      @java.lang.Override
      public int getINFOMAKE() {
        return iNFOMAKE_;
      }
      /**
       * <code>int32 INFO_MAKE = 72;</code>
       * @param value The iNFOMAKE to set.
       * @return This builder for chaining.
       */
      public Builder setINFOMAKE(int value) {
        
        iNFOMAKE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_MAKE = 72;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOMAKE() {
        
        iNFOMAKE_ = 0;
        onChanged();
        return this;
      }

      private int iNFOMODEL_ ;
      /**
       * <code>int32 INFO_MODEL = 73;</code>
       * @return The iNFOMODEL.
       */
      @java.lang.Override
      public int getINFOMODEL() {
        return iNFOMODEL_;
      }
      /**
       * <code>int32 INFO_MODEL = 73;</code>
       * @param value The iNFOMODEL to set.
       * @return This builder for chaining.
       */
      public Builder setINFOMODEL(int value) {
        
        iNFOMODEL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_MODEL = 73;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOMODEL() {
        
        iNFOMODEL_ = 0;
        onChanged();
        return this;
      }

      private int iNFOMODELYEAR_ ;
      /**
       * <code>int32 INFO_MODEL_YEAR = 74;</code>
       * @return The iNFOMODELYEAR.
       */
      @java.lang.Override
      public int getINFOMODELYEAR() {
        return iNFOMODELYEAR_;
      }
      /**
       * <code>int32 INFO_MODEL_YEAR = 74;</code>
       * @param value The iNFOMODELYEAR to set.
       * @return This builder for chaining.
       */
      public Builder setINFOMODELYEAR(int value) {
        
        iNFOMODELYEAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_MODEL_YEAR = 74;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOMODELYEAR() {
        
        iNFOMODELYEAR_ = 0;
        onChanged();
        return this;
      }

      private int iNFOMULTIEVPORTLOCATIONS_ ;
      /**
       * <code>int32 INFO_MULTI_EV_PORT_LOCATIONS = 75;</code>
       * @return The iNFOMULTIEVPORTLOCATIONS.
       */
      @java.lang.Override
      public int getINFOMULTIEVPORTLOCATIONS() {
        return iNFOMULTIEVPORTLOCATIONS_;
      }
      /**
       * <code>int32 INFO_MULTI_EV_PORT_LOCATIONS = 75;</code>
       * @param value The iNFOMULTIEVPORTLOCATIONS to set.
       * @return This builder for chaining.
       */
      public Builder setINFOMULTIEVPORTLOCATIONS(int value) {
        
        iNFOMULTIEVPORTLOCATIONS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_MULTI_EV_PORT_LOCATIONS = 75;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOMULTIEVPORTLOCATIONS() {
        
        iNFOMULTIEVPORTLOCATIONS_ = 0;
        onChanged();
        return this;
      }

      private int iNFOVIN_ ;
      /**
       * <code>int32 INFO_VIN = 76;</code>
       * @return The iNFOVIN.
       */
      @java.lang.Override
      public int getINFOVIN() {
        return iNFOVIN_;
      }
      /**
       * <code>int32 INFO_VIN = 76;</code>
       * @param value The iNFOVIN to set.
       * @return This builder for chaining.
       */
      public Builder setINFOVIN(int value) {
        
        iNFOVIN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INFO_VIN = 76;</code>
       * @return This builder for chaining.
       */
      public Builder clearINFOVIN() {
        
        iNFOVIN_ = 0;
        onChanged();
        return this;
      }

      private int iNVALID_ ;
      /**
       * <code>int32 INVALID = 77;</code>
       * @return The iNVALID.
       */
      @java.lang.Override
      public int getINVALID() {
        return iNVALID_;
      }
      /**
       * <code>int32 INVALID = 77;</code>
       * @param value The iNVALID to set.
       * @return This builder for chaining.
       */
      public Builder setINVALID(int value) {
        
        iNVALID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 INVALID = 77;</code>
       * @return This builder for chaining.
       */
      public Builder clearINVALID() {
        
        iNVALID_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORFOLD_ ;
      /**
       * <code>int32 MIRROR_FOLD = 78;</code>
       * @return The mIRRORFOLD.
       */
      @java.lang.Override
      public int getMIRRORFOLD() {
        return mIRRORFOLD_;
      }
      /**
       * <code>int32 MIRROR_FOLD = 78;</code>
       * @param value The mIRRORFOLD to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORFOLD(int value) {
        
        mIRRORFOLD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_FOLD = 78;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORFOLD() {
        
        mIRRORFOLD_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORLOCK_ ;
      /**
       * <code>int32 MIRROR_LOCK = 79;</code>
       * @return The mIRRORLOCK.
       */
      @java.lang.Override
      public int getMIRRORLOCK() {
        return mIRRORLOCK_;
      }
      /**
       * <code>int32 MIRROR_LOCK = 79;</code>
       * @param value The mIRRORLOCK to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORLOCK(int value) {
        
        mIRRORLOCK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_LOCK = 79;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORLOCK() {
        
        mIRRORLOCK_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORYMOVE_ ;
      /**
       * <code>int32 MIRROR_Y_MOVE = 80;</code>
       * @return The mIRRORYMOVE.
       */
      @java.lang.Override
      public int getMIRRORYMOVE() {
        return mIRRORYMOVE_;
      }
      /**
       * <code>int32 MIRROR_Y_MOVE = 80;</code>
       * @param value The mIRRORYMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORYMOVE(int value) {
        
        mIRRORYMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_Y_MOVE = 80;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORYMOVE() {
        
        mIRRORYMOVE_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORYPOS_ ;
      /**
       * <code>int32 MIRROR_Y_POS = 81;</code>
       * @return The mIRRORYPOS.
       */
      @java.lang.Override
      public int getMIRRORYPOS() {
        return mIRRORYPOS_;
      }
      /**
       * <code>int32 MIRROR_Y_POS = 81;</code>
       * @param value The mIRRORYPOS to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORYPOS(int value) {
        
        mIRRORYPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_Y_POS = 81;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORYPOS() {
        
        mIRRORYPOS_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORZMOVE_ ;
      /**
       * <code>int32 MIRROR_Z_MOVE = 82;</code>
       * @return The mIRRORZMOVE.
       */
      @java.lang.Override
      public int getMIRRORZMOVE() {
        return mIRRORZMOVE_;
      }
      /**
       * <code>int32 MIRROR_Z_MOVE = 82;</code>
       * @param value The mIRRORZMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORZMOVE(int value) {
        
        mIRRORZMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_Z_MOVE = 82;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORZMOVE() {
        
        mIRRORZMOVE_ = 0;
        onChanged();
        return this;
      }

      private int mIRRORZPOS_ ;
      /**
       * <code>int32 MIRROR_Z_POS = 83;</code>
       * @return The mIRRORZPOS.
       */
      @java.lang.Override
      public int getMIRRORZPOS() {
        return mIRRORZPOS_;
      }
      /**
       * <code>int32 MIRROR_Z_POS = 83;</code>
       * @param value The mIRRORZPOS to set.
       * @return This builder for chaining.
       */
      public Builder setMIRRORZPOS(int value) {
        
        mIRRORZPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 MIRROR_Z_POS = 83;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIRRORZPOS() {
        
        mIRRORZPOS_ = 0;
        onChanged();
        return this;
      }

      private int nIGHTMODE_ ;
      /**
       * <code>int32 NIGHT_MODE = 84;</code>
       * @return The nIGHTMODE.
       */
      @java.lang.Override
      public int getNIGHTMODE() {
        return nIGHTMODE_;
      }
      /**
       * <code>int32 NIGHT_MODE = 84;</code>
       * @param value The nIGHTMODE to set.
       * @return This builder for chaining.
       */
      public Builder setNIGHTMODE(int value) {
        
        nIGHTMODE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 NIGHT_MODE = 84;</code>
       * @return This builder for chaining.
       */
      public Builder clearNIGHTMODE() {
        
        nIGHTMODE_ = 0;
        onChanged();
        return this;
      }

      private int oBD2FREEZEFRAME_ ;
      /**
       * <code>int32 OBD2_FREEZE_FRAME = 85;</code>
       * @return The oBD2FREEZEFRAME.
       */
      @java.lang.Override
      public int getOBD2FREEZEFRAME() {
        return oBD2FREEZEFRAME_;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME = 85;</code>
       * @param value The oBD2FREEZEFRAME to set.
       * @return This builder for chaining.
       */
      public Builder setOBD2FREEZEFRAME(int value) {
        
        oBD2FREEZEFRAME_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME = 85;</code>
       * @return This builder for chaining.
       */
      public Builder clearOBD2FREEZEFRAME() {
        
        oBD2FREEZEFRAME_ = 0;
        onChanged();
        return this;
      }

      private int oBD2FREEZEFRAMECLEAR_ ;
      /**
       * <code>int32 OBD2_FREEZE_FRAME_CLEAR = 86;</code>
       * @return The oBD2FREEZEFRAMECLEAR.
       */
      @java.lang.Override
      public int getOBD2FREEZEFRAMECLEAR() {
        return oBD2FREEZEFRAMECLEAR_;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME_CLEAR = 86;</code>
       * @param value The oBD2FREEZEFRAMECLEAR to set.
       * @return This builder for chaining.
       */
      public Builder setOBD2FREEZEFRAMECLEAR(int value) {
        
        oBD2FREEZEFRAMECLEAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME_CLEAR = 86;</code>
       * @return This builder for chaining.
       */
      public Builder clearOBD2FREEZEFRAMECLEAR() {
        
        oBD2FREEZEFRAMECLEAR_ = 0;
        onChanged();
        return this;
      }

      private int oBD2FREEZEFRAMEINFO_ ;
      /**
       * <code>int32 OBD2_FREEZE_FRAME_INFO = 87;</code>
       * @return The oBD2FREEZEFRAMEINFO.
       */
      @java.lang.Override
      public int getOBD2FREEZEFRAMEINFO() {
        return oBD2FREEZEFRAMEINFO_;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME_INFO = 87;</code>
       * @param value The oBD2FREEZEFRAMEINFO to set.
       * @return This builder for chaining.
       */
      public Builder setOBD2FREEZEFRAMEINFO(int value) {
        
        oBD2FREEZEFRAMEINFO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 OBD2_FREEZE_FRAME_INFO = 87;</code>
       * @return This builder for chaining.
       */
      public Builder clearOBD2FREEZEFRAMEINFO() {
        
        oBD2FREEZEFRAMEINFO_ = 0;
        onChanged();
        return this;
      }

      private int oBD2LIVEFRAME_ ;
      /**
       * <code>int32 OBD2_LIVE_FRAME = 88;</code>
       * @return The oBD2LIVEFRAME.
       */
      @java.lang.Override
      public int getOBD2LIVEFRAME() {
        return oBD2LIVEFRAME_;
      }
      /**
       * <code>int32 OBD2_LIVE_FRAME = 88;</code>
       * @param value The oBD2LIVEFRAME to set.
       * @return This builder for chaining.
       */
      public Builder setOBD2LIVEFRAME(int value) {
        
        oBD2LIVEFRAME_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 OBD2_LIVE_FRAME = 88;</code>
       * @return This builder for chaining.
       */
      public Builder clearOBD2LIVEFRAME() {
        
        oBD2LIVEFRAME_ = 0;
        onChanged();
        return this;
      }

      private int pARKINGBRAKEAUTOAPPLY_ ;
      /**
       * <code>int32 PARKING_BRAKE_AUTO_APPLY = 89;</code>
       * @return The pARKINGBRAKEAUTOAPPLY.
       */
      @java.lang.Override
      public int getPARKINGBRAKEAUTOAPPLY() {
        return pARKINGBRAKEAUTOAPPLY_;
      }
      /**
       * <code>int32 PARKING_BRAKE_AUTO_APPLY = 89;</code>
       * @param value The pARKINGBRAKEAUTOAPPLY to set.
       * @return This builder for chaining.
       */
      public Builder setPARKINGBRAKEAUTOAPPLY(int value) {
        
        pARKINGBRAKEAUTOAPPLY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PARKING_BRAKE_AUTO_APPLY = 89;</code>
       * @return This builder for chaining.
       */
      public Builder clearPARKINGBRAKEAUTOAPPLY() {
        
        pARKINGBRAKEAUTOAPPLY_ = 0;
        onChanged();
        return this;
      }

      private int pARKINGBRAKEON_ ;
      /**
       * <code>int32 PARKING_BRAKE_ON = 90;</code>
       * @return The pARKINGBRAKEON.
       */
      @java.lang.Override
      public int getPARKINGBRAKEON() {
        return pARKINGBRAKEON_;
      }
      /**
       * <code>int32 PARKING_BRAKE_ON = 90;</code>
       * @param value The pARKINGBRAKEON to set.
       * @return This builder for chaining.
       */
      public Builder setPARKINGBRAKEON(int value) {
        
        pARKINGBRAKEON_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PARKING_BRAKE_ON = 90;</code>
       * @return This builder for chaining.
       */
      public Builder clearPARKINGBRAKEON() {
        
        pARKINGBRAKEON_ = 0;
        onChanged();
        return this;
      }

      private int pERFODOMETER_ ;
      /**
       * <code>int32 PERF_ODOMETER = 91;</code>
       * @return The pERFODOMETER.
       */
      @java.lang.Override
      public int getPERFODOMETER() {
        return pERFODOMETER_;
      }
      /**
       * <code>int32 PERF_ODOMETER = 91;</code>
       * @param value The pERFODOMETER to set.
       * @return This builder for chaining.
       */
      public Builder setPERFODOMETER(int value) {
        
        pERFODOMETER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PERF_ODOMETER = 91;</code>
       * @return This builder for chaining.
       */
      public Builder clearPERFODOMETER() {
        
        pERFODOMETER_ = 0;
        onChanged();
        return this;
      }

      private int pERFREARSTEERINGANGLE_ ;
      /**
       * <code>int32 PERF_REAR_STEERING_ANGLE = 92;</code>
       * @return The pERFREARSTEERINGANGLE.
       */
      @java.lang.Override
      public int getPERFREARSTEERINGANGLE() {
        return pERFREARSTEERINGANGLE_;
      }
      /**
       * <code>int32 PERF_REAR_STEERING_ANGLE = 92;</code>
       * @param value The pERFREARSTEERINGANGLE to set.
       * @return This builder for chaining.
       */
      public Builder setPERFREARSTEERINGANGLE(int value) {
        
        pERFREARSTEERINGANGLE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PERF_REAR_STEERING_ANGLE = 92;</code>
       * @return This builder for chaining.
       */
      public Builder clearPERFREARSTEERINGANGLE() {
        
        pERFREARSTEERINGANGLE_ = 0;
        onChanged();
        return this;
      }

      private int pERFSTEERINGANGLE_ ;
      /**
       * <code>int32 PERF_STEERING_ANGLE = 93;</code>
       * @return The pERFSTEERINGANGLE.
       */
      @java.lang.Override
      public int getPERFSTEERINGANGLE() {
        return pERFSTEERINGANGLE_;
      }
      /**
       * <code>int32 PERF_STEERING_ANGLE = 93;</code>
       * @param value The pERFSTEERINGANGLE to set.
       * @return This builder for chaining.
       */
      public Builder setPERFSTEERINGANGLE(int value) {
        
        pERFSTEERINGANGLE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PERF_STEERING_ANGLE = 93;</code>
       * @return This builder for chaining.
       */
      public Builder clearPERFSTEERINGANGLE() {
        
        pERFSTEERINGANGLE_ = 0;
        onChanged();
        return this;
      }

      private int pERFVEHICLESPEED_ ;
      /**
       * <code>int32 PERF_VEHICLE_SPEED = 94;</code>
       * @return The pERFVEHICLESPEED.
       */
      @java.lang.Override
      public int getPERFVEHICLESPEED() {
        return pERFVEHICLESPEED_;
      }
      /**
       * <code>int32 PERF_VEHICLE_SPEED = 94;</code>
       * @param value The pERFVEHICLESPEED to set.
       * @return This builder for chaining.
       */
      public Builder setPERFVEHICLESPEED(int value) {
        
        pERFVEHICLESPEED_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PERF_VEHICLE_SPEED = 94;</code>
       * @return This builder for chaining.
       */
      public Builder clearPERFVEHICLESPEED() {
        
        pERFVEHICLESPEED_ = 0;
        onChanged();
        return this;
      }

      private int pERFVEHICLESPEEDDISPLAY_ ;
      /**
       * <code>int32 PERF_VEHICLE_SPEED_DISPLAY = 95;</code>
       * @return The pERFVEHICLESPEEDDISPLAY.
       */
      @java.lang.Override
      public int getPERFVEHICLESPEEDDISPLAY() {
        return pERFVEHICLESPEEDDISPLAY_;
      }
      /**
       * <code>int32 PERF_VEHICLE_SPEED_DISPLAY = 95;</code>
       * @param value The pERFVEHICLESPEEDDISPLAY to set.
       * @return This builder for chaining.
       */
      public Builder setPERFVEHICLESPEEDDISPLAY(int value) {
        
        pERFVEHICLESPEEDDISPLAY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 PERF_VEHICLE_SPEED_DISPLAY = 95;</code>
       * @return This builder for chaining.
       */
      public Builder clearPERFVEHICLESPEEDDISPLAY() {
        
        pERFVEHICLESPEEDDISPLAY_ = 0;
        onChanged();
        return this;
      }

      private int rANGEREMAINING_ ;
      /**
       * <code>int32 RANGE_REMAINING = 96;</code>
       * @return The rANGEREMAINING.
       */
      @java.lang.Override
      public int getRANGEREMAINING() {
        return rANGEREMAINING_;
      }
      /**
       * <code>int32 RANGE_REMAINING = 96;</code>
       * @param value The rANGEREMAINING to set.
       * @return This builder for chaining.
       */
      public Builder setRANGEREMAINING(int value) {
        
        rANGEREMAINING_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 RANGE_REMAINING = 96;</code>
       * @return This builder for chaining.
       */
      public Builder clearRANGEREMAINING() {
        
        rANGEREMAINING_ = 0;
        onChanged();
        return this;
      }

      private int rEADINGLIGHTSSTATE_ ;
      /**
       * <code>int32 READING_LIGHTS_STATE = 97;</code>
       * @return The rEADINGLIGHTSSTATE.
       */
      @java.lang.Override
      public int getREADINGLIGHTSSTATE() {
        return rEADINGLIGHTSSTATE_;
      }
      /**
       * <code>int32 READING_LIGHTS_STATE = 97;</code>
       * @param value The rEADINGLIGHTSSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setREADINGLIGHTSSTATE(int value) {
        
        rEADINGLIGHTSSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 READING_LIGHTS_STATE = 97;</code>
       * @return This builder for chaining.
       */
      public Builder clearREADINGLIGHTSSTATE() {
        
        rEADINGLIGHTSSTATE_ = 0;
        onChanged();
        return this;
      }

      private int rEADINGLIGHTSSWITCH_ ;
      /**
       * <code>int32 READING_LIGHTS_SWITCH = 98;</code>
       * @return The rEADINGLIGHTSSWITCH.
       */
      @java.lang.Override
      public int getREADINGLIGHTSSWITCH() {
        return rEADINGLIGHTSSWITCH_;
      }
      /**
       * <code>int32 READING_LIGHTS_SWITCH = 98;</code>
       * @param value The rEADINGLIGHTSSWITCH to set.
       * @return This builder for chaining.
       */
      public Builder setREADINGLIGHTSSWITCH(int value) {
        
        rEADINGLIGHTSSWITCH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 READING_LIGHTS_SWITCH = 98;</code>
       * @return This builder for chaining.
       */
      public Builder clearREADINGLIGHTSSWITCH() {
        
        rEADINGLIGHTSSWITCH_ = 0;
        onChanged();
        return this;
      }

      private int sEATBACKRESTANGLE1MOVE_ ;
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_MOVE = 99;</code>
       * @return The sEATBACKRESTANGLE1MOVE.
       */
      @java.lang.Override
      public int getSEATBACKRESTANGLE1MOVE() {
        return sEATBACKRESTANGLE1MOVE_;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_MOVE = 99;</code>
       * @param value The sEATBACKRESTANGLE1MOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBACKRESTANGLE1MOVE(int value) {
        
        sEATBACKRESTANGLE1MOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_MOVE = 99;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBACKRESTANGLE1MOVE() {
        
        sEATBACKRESTANGLE1MOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATBACKRESTANGLE1POS_ ;
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_POS = 100;</code>
       * @return The sEATBACKRESTANGLE1POS.
       */
      @java.lang.Override
      public int getSEATBACKRESTANGLE1POS() {
        return sEATBACKRESTANGLE1POS_;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_POS = 100;</code>
       * @param value The sEATBACKRESTANGLE1POS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBACKRESTANGLE1POS(int value) {
        
        sEATBACKRESTANGLE1POS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_1_POS = 100;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBACKRESTANGLE1POS() {
        
        sEATBACKRESTANGLE1POS_ = 0;
        onChanged();
        return this;
      }

      private int sEATBACKRESTANGLE2MOVE_ ;
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_MOVE = 101;</code>
       * @return The sEATBACKRESTANGLE2MOVE.
       */
      @java.lang.Override
      public int getSEATBACKRESTANGLE2MOVE() {
        return sEATBACKRESTANGLE2MOVE_;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_MOVE = 101;</code>
       * @param value The sEATBACKRESTANGLE2MOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBACKRESTANGLE2MOVE(int value) {
        
        sEATBACKRESTANGLE2MOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_MOVE = 101;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBACKRESTANGLE2MOVE() {
        
        sEATBACKRESTANGLE2MOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATBACKRESTANGLE2POS_ ;
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_POS = 102;</code>
       * @return The sEATBACKRESTANGLE2POS.
       */
      @java.lang.Override
      public int getSEATBACKRESTANGLE2POS() {
        return sEATBACKRESTANGLE2POS_;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_POS = 102;</code>
       * @param value The sEATBACKRESTANGLE2POS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBACKRESTANGLE2POS(int value) {
        
        sEATBACKRESTANGLE2POS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BACKREST_ANGLE_2_POS = 102;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBACKRESTANGLE2POS() {
        
        sEATBACKRESTANGLE2POS_ = 0;
        onChanged();
        return this;
      }

      private int sEATBELTBUCKLED_ ;
      /**
       * <code>int32 SEAT_BELT_BUCKLED = 103;</code>
       * @return The sEATBELTBUCKLED.
       */
      @java.lang.Override
      public int getSEATBELTBUCKLED() {
        return sEATBELTBUCKLED_;
      }
      /**
       * <code>int32 SEAT_BELT_BUCKLED = 103;</code>
       * @param value The sEATBELTBUCKLED to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBELTBUCKLED(int value) {
        
        sEATBELTBUCKLED_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BELT_BUCKLED = 103;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBELTBUCKLED() {
        
        sEATBELTBUCKLED_ = 0;
        onChanged();
        return this;
      }

      private int sEATBELTHEIGHTMOVE_ ;
      /**
       * <code>int32 SEAT_BELT_HEIGHT_MOVE = 104;</code>
       * @return The sEATBELTHEIGHTMOVE.
       */
      @java.lang.Override
      public int getSEATBELTHEIGHTMOVE() {
        return sEATBELTHEIGHTMOVE_;
      }
      /**
       * <code>int32 SEAT_BELT_HEIGHT_MOVE = 104;</code>
       * @param value The sEATBELTHEIGHTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBELTHEIGHTMOVE(int value) {
        
        sEATBELTHEIGHTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BELT_HEIGHT_MOVE = 104;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBELTHEIGHTMOVE() {
        
        sEATBELTHEIGHTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATBELTHEIGHTPOS_ ;
      /**
       * <code>int32 SEAT_BELT_HEIGHT_POS = 105;</code>
       * @return The sEATBELTHEIGHTPOS.
       */
      @java.lang.Override
      public int getSEATBELTHEIGHTPOS() {
        return sEATBELTHEIGHTPOS_;
      }
      /**
       * <code>int32 SEAT_BELT_HEIGHT_POS = 105;</code>
       * @param value The sEATBELTHEIGHTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATBELTHEIGHTPOS(int value) {
        
        sEATBELTHEIGHTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_BELT_HEIGHT_POS = 105;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATBELTHEIGHTPOS() {
        
        sEATBELTHEIGHTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATDEPTHMOVE_ ;
      /**
       * <code>int32 SEAT_DEPTH_MOVE = 106;</code>
       * @return The sEATDEPTHMOVE.
       */
      @java.lang.Override
      public int getSEATDEPTHMOVE() {
        return sEATDEPTHMOVE_;
      }
      /**
       * <code>int32 SEAT_DEPTH_MOVE = 106;</code>
       * @param value The sEATDEPTHMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATDEPTHMOVE(int value) {
        
        sEATDEPTHMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_DEPTH_MOVE = 106;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATDEPTHMOVE() {
        
        sEATDEPTHMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATDEPTHPOS_ ;
      /**
       * <code>int32 SEAT_DEPTH_POS = 107;</code>
       * @return The sEATDEPTHPOS.
       */
      @java.lang.Override
      public int getSEATDEPTHPOS() {
        return sEATDEPTHPOS_;
      }
      /**
       * <code>int32 SEAT_DEPTH_POS = 107;</code>
       * @param value The sEATDEPTHPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATDEPTHPOS(int value) {
        
        sEATDEPTHPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_DEPTH_POS = 107;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATDEPTHPOS() {
        
        sEATDEPTHPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATFOREAFTMOVE_ ;
      /**
       * <code>int32 SEAT_FORE_AFT_MOVE = 108;</code>
       * @return The sEATFOREAFTMOVE.
       */
      @java.lang.Override
      public int getSEATFOREAFTMOVE() {
        return sEATFOREAFTMOVE_;
      }
      /**
       * <code>int32 SEAT_FORE_AFT_MOVE = 108;</code>
       * @param value The sEATFOREAFTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATFOREAFTMOVE(int value) {
        
        sEATFOREAFTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_FORE_AFT_MOVE = 108;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATFOREAFTMOVE() {
        
        sEATFOREAFTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATFOREAFTPOS_ ;
      /**
       * <code>int32 SEAT_FORE_AFT_POS = 109;</code>
       * @return The sEATFOREAFTPOS.
       */
      @java.lang.Override
      public int getSEATFOREAFTPOS() {
        return sEATFOREAFTPOS_;
      }
      /**
       * <code>int32 SEAT_FORE_AFT_POS = 109;</code>
       * @param value The sEATFOREAFTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATFOREAFTPOS(int value) {
        
        sEATFOREAFTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_FORE_AFT_POS = 109;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATFOREAFTPOS() {
        
        sEATFOREAFTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTANGLEMOVE_ ;
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_MOVE = 110;</code>
       * @return The sEATHEADRESTANGLEMOVE.
       */
      @java.lang.Override
      public int getSEATHEADRESTANGLEMOVE() {
        return sEATHEADRESTANGLEMOVE_;
      }
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_MOVE = 110;</code>
       * @param value The sEATHEADRESTANGLEMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTANGLEMOVE(int value) {
        
        sEATHEADRESTANGLEMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_MOVE = 110;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTANGLEMOVE() {
        
        sEATHEADRESTANGLEMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTANGLEPOS_ ;
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_POS = 111;</code>
       * @return The sEATHEADRESTANGLEPOS.
       */
      @java.lang.Override
      public int getSEATHEADRESTANGLEPOS() {
        return sEATHEADRESTANGLEPOS_;
      }
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_POS = 111;</code>
       * @param value The sEATHEADRESTANGLEPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTANGLEPOS(int value) {
        
        sEATHEADRESTANGLEPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_ANGLE_POS = 111;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTANGLEPOS() {
        
        sEATHEADRESTANGLEPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTFOREAFTMOVE_ ;
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_MOVE = 112;</code>
       * @return The sEATHEADRESTFOREAFTMOVE.
       */
      @java.lang.Override
      public int getSEATHEADRESTFOREAFTMOVE() {
        return sEATHEADRESTFOREAFTMOVE_;
      }
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_MOVE = 112;</code>
       * @param value The sEATHEADRESTFOREAFTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTFOREAFTMOVE(int value) {
        
        sEATHEADRESTFOREAFTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_MOVE = 112;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTFOREAFTMOVE() {
        
        sEATHEADRESTFOREAFTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTFOREAFTPOS_ ;
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_POS = 113;</code>
       * @return The sEATHEADRESTFOREAFTPOS.
       */
      @java.lang.Override
      public int getSEATHEADRESTFOREAFTPOS() {
        return sEATHEADRESTFOREAFTPOS_;
      }
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_POS = 113;</code>
       * @param value The sEATHEADRESTFOREAFTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTFOREAFTPOS(int value) {
        
        sEATHEADRESTFOREAFTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_FORE_AFT_POS = 113;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTFOREAFTPOS() {
        
        sEATHEADRESTFOREAFTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTHEIGHTMOVE_ ;
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_MOVE = 114;</code>
       * @return The sEATHEADRESTHEIGHTMOVE.
       */
      @java.lang.Override
      public int getSEATHEADRESTHEIGHTMOVE() {
        return sEATHEADRESTHEIGHTMOVE_;
      }
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_MOVE = 114;</code>
       * @param value The sEATHEADRESTHEIGHTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTHEIGHTMOVE(int value) {
        
        sEATHEADRESTHEIGHTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_MOVE = 114;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTHEIGHTMOVE() {
        
        sEATHEADRESTHEIGHTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEADRESTHEIGHTPOS_ ;
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_POS = 115;</code>
       * @return The sEATHEADRESTHEIGHTPOS.
       */
      @java.lang.Override
      public int getSEATHEADRESTHEIGHTPOS() {
        return sEATHEADRESTHEIGHTPOS_;
      }
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_POS = 115;</code>
       * @param value The sEATHEADRESTHEIGHTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEADRESTHEIGHTPOS(int value) {
        
        sEATHEADRESTHEIGHTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEADREST_HEIGHT_POS = 115;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEADRESTHEIGHTPOS() {
        
        sEATHEADRESTHEIGHTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEIGHTMOVE_ ;
      /**
       * <code>int32 SEAT_HEIGHT_MOVE = 116;</code>
       * @return The sEATHEIGHTMOVE.
       */
      @java.lang.Override
      public int getSEATHEIGHTMOVE() {
        return sEATHEIGHTMOVE_;
      }
      /**
       * <code>int32 SEAT_HEIGHT_MOVE = 116;</code>
       * @param value The sEATHEIGHTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEIGHTMOVE(int value) {
        
        sEATHEIGHTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEIGHT_MOVE = 116;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEIGHTMOVE() {
        
        sEATHEIGHTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATHEIGHTPOS_ ;
      /**
       * <code>int32 SEAT_HEIGHT_POS = 117;</code>
       * @return The sEATHEIGHTPOS.
       */
      @java.lang.Override
      public int getSEATHEIGHTPOS() {
        return sEATHEIGHTPOS_;
      }
      /**
       * <code>int32 SEAT_HEIGHT_POS = 117;</code>
       * @param value The sEATHEIGHTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATHEIGHTPOS(int value) {
        
        sEATHEIGHTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_HEIGHT_POS = 117;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATHEIGHTPOS() {
        
        sEATHEIGHTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATLUMBARFOREAFTMOVE_ ;
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_MOVE = 118;</code>
       * @return The sEATLUMBARFOREAFTMOVE.
       */
      @java.lang.Override
      public int getSEATLUMBARFOREAFTMOVE() {
        return sEATLUMBARFOREAFTMOVE_;
      }
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_MOVE = 118;</code>
       * @param value The sEATLUMBARFOREAFTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATLUMBARFOREAFTMOVE(int value) {
        
        sEATLUMBARFOREAFTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_MOVE = 118;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATLUMBARFOREAFTMOVE() {
        
        sEATLUMBARFOREAFTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATLUMBARFOREAFTPOS_ ;
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_POS = 119;</code>
       * @return The sEATLUMBARFOREAFTPOS.
       */
      @java.lang.Override
      public int getSEATLUMBARFOREAFTPOS() {
        return sEATLUMBARFOREAFTPOS_;
      }
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_POS = 119;</code>
       * @param value The sEATLUMBARFOREAFTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATLUMBARFOREAFTPOS(int value) {
        
        sEATLUMBARFOREAFTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_LUMBAR_FORE_AFT_POS = 119;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATLUMBARFOREAFTPOS() {
        
        sEATLUMBARFOREAFTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATLUMBARSIDESUPPORTMOVE_ ;
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 120;</code>
       * @return The sEATLUMBARSIDESUPPORTMOVE.
       */
      @java.lang.Override
      public int getSEATLUMBARSIDESUPPORTMOVE() {
        return sEATLUMBARSIDESUPPORTMOVE_;
      }
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 120;</code>
       * @param value The sEATLUMBARSIDESUPPORTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATLUMBARSIDESUPPORTMOVE(int value) {
        
        sEATLUMBARSIDESUPPORTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 120;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATLUMBARSIDESUPPORTMOVE() {
        
        sEATLUMBARSIDESUPPORTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATLUMBARSIDESUPPORTPOS_ ;
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_POS = 121;</code>
       * @return The sEATLUMBARSIDESUPPORTPOS.
       */
      @java.lang.Override
      public int getSEATLUMBARSIDESUPPORTPOS() {
        return sEATLUMBARSIDESUPPORTPOS_;
      }
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_POS = 121;</code>
       * @param value The sEATLUMBARSIDESUPPORTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATLUMBARSIDESUPPORTPOS(int value) {
        
        sEATLUMBARSIDESUPPORTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_LUMBAR_SIDE_SUPPORT_POS = 121;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATLUMBARSIDESUPPORTPOS() {
        
        sEATLUMBARSIDESUPPORTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sEATMEMORYSELECT_ ;
      /**
       * <code>int32 SEAT_MEMORY_SELECT = 122;</code>
       * @return The sEATMEMORYSELECT.
       */
      @java.lang.Override
      public int getSEATMEMORYSELECT() {
        return sEATMEMORYSELECT_;
      }
      /**
       * <code>int32 SEAT_MEMORY_SELECT = 122;</code>
       * @param value The sEATMEMORYSELECT to set.
       * @return This builder for chaining.
       */
      public Builder setSEATMEMORYSELECT(int value) {
        
        sEATMEMORYSELECT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_MEMORY_SELECT = 122;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATMEMORYSELECT() {
        
        sEATMEMORYSELECT_ = 0;
        onChanged();
        return this;
      }

      private int sEATMEMORYSET_ ;
      /**
       * <code>int32 SEAT_MEMORY_SET = 123;</code>
       * @return The sEATMEMORYSET.
       */
      @java.lang.Override
      public int getSEATMEMORYSET() {
        return sEATMEMORYSET_;
      }
      /**
       * <code>int32 SEAT_MEMORY_SET = 123;</code>
       * @param value The sEATMEMORYSET to set.
       * @return This builder for chaining.
       */
      public Builder setSEATMEMORYSET(int value) {
        
        sEATMEMORYSET_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_MEMORY_SET = 123;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATMEMORYSET() {
        
        sEATMEMORYSET_ = 0;
        onChanged();
        return this;
      }

      private int sEATOCCUPANCY_ ;
      /**
       * <code>int32 SEAT_OCCUPANCY = 124;</code>
       * @return The sEATOCCUPANCY.
       */
      @java.lang.Override
      public int getSEATOCCUPANCY() {
        return sEATOCCUPANCY_;
      }
      /**
       * <code>int32 SEAT_OCCUPANCY = 124;</code>
       * @param value The sEATOCCUPANCY to set.
       * @return This builder for chaining.
       */
      public Builder setSEATOCCUPANCY(int value) {
        
        sEATOCCUPANCY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_OCCUPANCY = 124;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATOCCUPANCY() {
        
        sEATOCCUPANCY_ = 0;
        onChanged();
        return this;
      }

      private int sEATTILTMOVE_ ;
      /**
       * <code>int32 SEAT_TILT_MOVE = 125;</code>
       * @return The sEATTILTMOVE.
       */
      @java.lang.Override
      public int getSEATTILTMOVE() {
        return sEATTILTMOVE_;
      }
      /**
       * <code>int32 SEAT_TILT_MOVE = 125;</code>
       * @param value The sEATTILTMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setSEATTILTMOVE(int value) {
        
        sEATTILTMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_TILT_MOVE = 125;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATTILTMOVE() {
        
        sEATTILTMOVE_ = 0;
        onChanged();
        return this;
      }

      private int sEATTILTPOS_ ;
      /**
       * <code>int32 SEAT_TILT_POS = 126;</code>
       * @return The sEATTILTPOS.
       */
      @java.lang.Override
      public int getSEATTILTPOS() {
        return sEATTILTPOS_;
      }
      /**
       * <code>int32 SEAT_TILT_POS = 126;</code>
       * @param value The sEATTILTPOS to set.
       * @return This builder for chaining.
       */
      public Builder setSEATTILTPOS(int value) {
        
        sEATTILTPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 SEAT_TILT_POS = 126;</code>
       * @return This builder for chaining.
       */
      public Builder clearSEATTILTPOS() {
        
        sEATTILTPOS_ = 0;
        onChanged();
        return this;
      }

      private int sTORAGEENCRYPTIONBINDINGSEED_ ;
      /**
       * <code>int32 STORAGE_ENCRYPTION_BINDING_SEED = 127;</code>
       * @return The sTORAGEENCRYPTIONBINDINGSEED.
       */
      @java.lang.Override
      public int getSTORAGEENCRYPTIONBINDINGSEED() {
        return sTORAGEENCRYPTIONBINDINGSEED_;
      }
      /**
       * <code>int32 STORAGE_ENCRYPTION_BINDING_SEED = 127;</code>
       * @param value The sTORAGEENCRYPTIONBINDINGSEED to set.
       * @return This builder for chaining.
       */
      public Builder setSTORAGEENCRYPTIONBINDINGSEED(int value) {
        
        sTORAGEENCRYPTIONBINDINGSEED_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 STORAGE_ENCRYPTION_BINDING_SEED = 127;</code>
       * @return This builder for chaining.
       */
      public Builder clearSTORAGEENCRYPTIONBINDINGSEED() {
        
        sTORAGEENCRYPTIONBINDINGSEED_ = 0;
        onChanged();
        return this;
      }

      private int tIREPRESSURE_ ;
      /**
       * <code>int32 TIRE_PRESSURE = 128;</code>
       * @return The tIREPRESSURE.
       */
      @java.lang.Override
      public int getTIREPRESSURE() {
        return tIREPRESSURE_;
      }
      /**
       * <code>int32 TIRE_PRESSURE = 128;</code>
       * @param value The tIREPRESSURE to set.
       * @return This builder for chaining.
       */
      public Builder setTIREPRESSURE(int value) {
        
        tIREPRESSURE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 TIRE_PRESSURE = 128;</code>
       * @return This builder for chaining.
       */
      public Builder clearTIREPRESSURE() {
        
        tIREPRESSURE_ = 0;
        onChanged();
        return this;
      }

      private int tIREPRESSUREDISPLAYUNITS_ ;
      /**
       * <code>int32 TIRE_PRESSURE_DISPLAY_UNITS = 129;</code>
       * @return The tIREPRESSUREDISPLAYUNITS.
       */
      @java.lang.Override
      public int getTIREPRESSUREDISPLAYUNITS() {
        return tIREPRESSUREDISPLAYUNITS_;
      }
      /**
       * <code>int32 TIRE_PRESSURE_DISPLAY_UNITS = 129;</code>
       * @param value The tIREPRESSUREDISPLAYUNITS to set.
       * @return This builder for chaining.
       */
      public Builder setTIREPRESSUREDISPLAYUNITS(int value) {
        
        tIREPRESSUREDISPLAYUNITS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 TIRE_PRESSURE_DISPLAY_UNITS = 129;</code>
       * @return This builder for chaining.
       */
      public Builder clearTIREPRESSUREDISPLAYUNITS() {
        
        tIREPRESSUREDISPLAYUNITS_ = 0;
        onChanged();
        return this;
      }

      private int tRACTIONCONTROLACTIVE_ ;
      /**
       * <code>int32 TRACTION_CONTROL_ACTIVE = 130;</code>
       * @return The tRACTIONCONTROLACTIVE.
       */
      @java.lang.Override
      public int getTRACTIONCONTROLACTIVE() {
        return tRACTIONCONTROLACTIVE_;
      }
      /**
       * <code>int32 TRACTION_CONTROL_ACTIVE = 130;</code>
       * @param value The tRACTIONCONTROLACTIVE to set.
       * @return This builder for chaining.
       */
      public Builder setTRACTIONCONTROLACTIVE(int value) {
        
        tRACTIONCONTROLACTIVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 TRACTION_CONTROL_ACTIVE = 130;</code>
       * @return This builder for chaining.
       */
      public Builder clearTRACTIONCONTROLACTIVE() {
        
        tRACTIONCONTROLACTIVE_ = 0;
        onChanged();
        return this;
      }

      private int tURNSIGNALSTATE_ ;
      /**
       * <code>int32 TURN_SIGNAL_STATE = 131;</code>
       * @return The tURNSIGNALSTATE.
       */
      @java.lang.Override
      public int getTURNSIGNALSTATE() {
        return tURNSIGNALSTATE_;
      }
      /**
       * <code>int32 TURN_SIGNAL_STATE = 131;</code>
       * @param value The tURNSIGNALSTATE to set.
       * @return This builder for chaining.
       */
      public Builder setTURNSIGNALSTATE(int value) {
        
        tURNSIGNALSTATE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 TURN_SIGNAL_STATE = 131;</code>
       * @return This builder for chaining.
       */
      public Builder clearTURNSIGNALSTATE() {
        
        tURNSIGNALSTATE_ = 0;
        onChanged();
        return this;
      }

      private int vEHICLEMAPSERVICE_ ;
      /**
       * <code>int32 VEHICLE_MAP_SERVICE = 132;</code>
       * @return The vEHICLEMAPSERVICE.
       */
      @java.lang.Override
      public int getVEHICLEMAPSERVICE() {
        return vEHICLEMAPSERVICE_;
      }
      /**
       * <code>int32 VEHICLE_MAP_SERVICE = 132;</code>
       * @param value The vEHICLEMAPSERVICE to set.
       * @return This builder for chaining.
       */
      public Builder setVEHICLEMAPSERVICE(int value) {
        
        vEHICLEMAPSERVICE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 VEHICLE_MAP_SERVICE = 132;</code>
       * @return This builder for chaining.
       */
      public Builder clearVEHICLEMAPSERVICE() {
        
        vEHICLEMAPSERVICE_ = 0;
        onChanged();
        return this;
      }

      private int wHEELTICK_ ;
      /**
       * <code>int32 WHEEL_TICK = 133;</code>
       * @return The wHEELTICK.
       */
      @java.lang.Override
      public int getWHEELTICK() {
        return wHEELTICK_;
      }
      /**
       * <code>int32 WHEEL_TICK = 133;</code>
       * @param value The wHEELTICK to set.
       * @return This builder for chaining.
       */
      public Builder setWHEELTICK(int value) {
        
        wHEELTICK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 WHEEL_TICK = 133;</code>
       * @return This builder for chaining.
       */
      public Builder clearWHEELTICK() {
        
        wHEELTICK_ = 0;
        onChanged();
        return this;
      }

      private int wINDOWLOCK_ ;
      /**
       * <code>int32 WINDOW_LOCK = 134;</code>
       * @return The wINDOWLOCK.
       */
      @java.lang.Override
      public int getWINDOWLOCK() {
        return wINDOWLOCK_;
      }
      /**
       * <code>int32 WINDOW_LOCK = 134;</code>
       * @param value The wINDOWLOCK to set.
       * @return This builder for chaining.
       */
      public Builder setWINDOWLOCK(int value) {
        
        wINDOWLOCK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 WINDOW_LOCK = 134;</code>
       * @return This builder for chaining.
       */
      public Builder clearWINDOWLOCK() {
        
        wINDOWLOCK_ = 0;
        onChanged();
        return this;
      }

      private int wINDOWMOVE_ ;
      /**
       * <code>int32 WINDOW_MOVE = 135;</code>
       * @return The wINDOWMOVE.
       */
      @java.lang.Override
      public int getWINDOWMOVE() {
        return wINDOWMOVE_;
      }
      /**
       * <code>int32 WINDOW_MOVE = 135;</code>
       * @param value The wINDOWMOVE to set.
       * @return This builder for chaining.
       */
      public Builder setWINDOWMOVE(int value) {
        
        wINDOWMOVE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 WINDOW_MOVE = 135;</code>
       * @return This builder for chaining.
       */
      public Builder clearWINDOWMOVE() {
        
        wINDOWMOVE_ = 0;
        onChanged();
        return this;
      }

      private int wINDOWPOS_ ;
      /**
       * <code>int32 WINDOW_POS = 136;</code>
       * @return The wINDOWPOS.
       */
      @java.lang.Override
      public int getWINDOWPOS() {
        return wINDOWPOS_;
      }
      /**
       * <code>int32 WINDOW_POS = 136;</code>
       * @param value The wINDOWPOS to set.
       * @return This builder for chaining.
       */
      public Builder setWINDOWPOS(int value) {
        
        wINDOWPOS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 WINDOW_POS = 136;</code>
       * @return This builder for chaining.
       */
      public Builder clearWINDOWPOS() {
        
        wINDOWPOS_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AllFields)
    }

    // @@protoc_insertion_point(class_scope:AllFields)
    private static final VehicleDataOuterClass.AllFields DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VehicleDataOuterClass.AllFields();
    }

    public static VehicleDataOuterClass.AllFields getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllFields>
        PARSER = new com.google.protobuf.AbstractParser<AllFields>() {
      @java.lang.Override
      public AllFields parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllFields(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllFields> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllFields> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public VehicleDataOuterClass.AllFields getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VehicleData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VehicleData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VehicleData_CategoryOneFields_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VehicleData_CategoryOneFields_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VehicleData_CategoryTwoField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VehicleData_CategoryTwoField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VehicleData_CategoryOne_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VehicleData_CategoryOne_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VehicleData_CategoryTwo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VehicleData_CategoryTwo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AllFields_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AllFields_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022vehicle_data.proto\"\322\003\n\013VehicleData\022.\n\014" +
      "category_one\030\001 \003(\0132\030.VehicleData.Categor" +
      "yOne\022.\n\014category_two\030\002 \001(\0132\030.VehicleData" +
      ".CategoryTwo\032\\\n\021CategoryOneFields\022\037\n\027ENV" +
      "_OUTSIDE_TEMPERATURE\030\001 \001(\005\022\022\n\nENGINE_RPM" +
      "\030\002 \001(\005\022\022\n\nFUEL_LEVEL\030\003 \001(\005\0324\n\020CategoryTw" +
      "oField\022\021\n\ttimestamp\030\001 \001(\003\022\r\n\005value\030\002 \001(\005" +
      "\032P\n\013CategoryOne\022\021\n\ttimestamp\030\001 \001(\003\022.\n\006fi" +
      "elds\030\002 \001(\0132\036.VehicleData.CategoryOneFiel" +
      "ds\032}\n\013CategoryTwo\0225\n\016IGNITION_STATE\030\001 \003(" +
      "\0132\035.VehicleData.CategoryTwoField\0227\n\020HEAD" +
      "LIGHTS_STATE\030\002 \003(\0132\035.VehicleData.Categor" +
      "yTwoField\"\334\036\n\tAllFields\022\022\n\nABS_ACTIVE\030\001 " +
      "\001(\005\022\036\n\026AP_POWER_BOOTUP_REASON\030\002 \001(\005\022\035\n\025A" +
      "P_POWER_STATE_REPORT\030\003 \001(\005\022\032\n\022AP_POWER_S" +
      "TATE_REQ\030\004 \001(\005\022\032\n\022CABIN_LIGHTS_STATE\030\005 \001" +
      "(\005\022\033\n\023CABIN_LIGHTS_SWITCH\030\006 \001(\005\022$\n\034CRITI" +
      "CALLY_LOW_TIRE_PRESSURE\030\007 \001(\005\022\024\n\014CURRENT" +
      "_GEAR\030\010 \001(\005\022\032\n\022DISPLAY_BRIGHTNESS\030\t \001(\005\022" +
      "\036\n\026DISTANCE_DISPLAY_UNITS\030\n \001(\005\022\021\n\tDOOR_" +
      "LOCK\030\013 \001(\005\022\021\n\tDOOR_MOVE\030\014 \001(\005\022\020\n\010DOOR_PO" +
      "S\030\r \001(\005\022.\n&ELECTRONIC_TOLL_COLLECTION_CA" +
      "RD_STATUS\030\016 \001(\005\022,\n$ELECTRONIC_TOLL_COLLE" +
      "CTION_CARD_TYPE\030\017 \001(\005\022\033\n\023ENGINE_COOLANT_" +
      "TEMP\030\020 \001(\005\022\030\n\020ENGINE_OIL_LEVEL\030\021 \001(\005\022\027\n\017" +
      "ENGINE_OIL_TEMP\030\022 \001(\005\022\022\n\nENGINE_RPM\030\023 \001(" +
      "\005\022\037\n\027ENV_OUTSIDE_TEMPERATURE\030\024 \001(\005\022\022\n\nEP" +
      "OCH_TIME\030\025 \001(\005\022 \n\030EV_BATTERY_DISPLAY_UNI" +
      "TS\030\026 \001(\005\022,\n$EV_BATTERY_INSTANTANEOUS_CHA" +
      "RGE_RATE\030\027 \001(\005\022\030\n\020EV_BATTERY_LEVEL\030\030 \001(\005" +
      "\022 \n\030EV_CHARGE_PORT_CONNECTED\030\031 \001(\005\022\033\n\023EV" +
      "_CHARGE_PORT_OPEN\030\032 \001(\005\022\030\n\020FOG_LIGHTS_ST" +
      "ATE\030\033 \001(\005\022\031\n\021FOG_LIGHTS_SWITCH\030\034 \001(\005\0223\n+" +
      "FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOL" +
      "UME\030\035 \001(\005\022\026\n\016FUEL_DOOR_OPEN\030\036 \001(\005\022\022\n\nFUE" +
      "L_LEVEL\030\037 \001(\005\022\026\n\016FUEL_LEVEL_LOW\030  \001(\005\022!\n" +
      "\031FUEL_VOLUME_DISPLAY_UNITS\030! \001(\005\022\026\n\016GEAR" +
      "_SELECTION\030\" \001(\005\022\033\n\023HAZARD_LIGHTS_STATE\030" +
      "# \001(\005\022\034\n\024HAZARD_LIGHTS_SWITCH\030$ \001(\005\022\030\n\020H" +
      "EADLIGHTS_STATE\030% \001(\005\022\031\n\021HEADLIGHTS_SWIT" +
      "CH\030& \001(\005\022\036\n\026HIGH_BEAM_LIGHTS_STATE\030\' \001(\005" +
      "\022\037\n\027HIGH_BEAM_LIGHTS_SWITCH\030( \001(\005\022!\n\031HVA" +
      "C_ACTUAL_FAN_SPEED_RPM\030) \001(\005\022\022\n\nHVAC_AC_" +
      "ON\030* \001(\005\022\024\n\014HVAC_AUTO_ON\030+ \001(\005\022\033\n\023HVAC_A" +
      "UTO_RECIRC_ON\030, \001(\005\022\026\n\016HVAC_DEFROSTER\030- " +
      "\001(\005\022\024\n\014HVAC_DUAL_ON\030. \001(\005\022\032\n\022HVAC_FAN_DI" +
      "RECTION\030/ \001(\005\022$\n\034HVAC_FAN_DIRECTION_AVAI" +
      "LABLE\0300 \001(\005\022\026\n\016HVAC_FAN_SPEED\0301 \001(\005\022\026\n\016H" +
      "VAC_MAX_AC_ON\0302 \001(\005\022\033\n\023HVAC_MAX_DEFROST_" +
      "ON\0303 \001(\005\022\025\n\rHVAC_POWER_ON\0304 \001(\005\022\026\n\016HVAC_" +
      "RECIRC_ON\0305 \001(\005\022\035\n\025HVAC_SEAT_TEMPERATURE" +
      "\0306 \001(\005\022\035\n\025HVAC_SEAT_VENTILATION\0307 \001(\005\022\035\n" +
      "\025HVAC_SIDE_MIRROR_HEAT\0308 \001(\005\022 \n\030HVAC_STE" +
      "ERING_WHEEL_HEAT\0309 \001(\005\022 \n\030HVAC_TEMPERATU" +
      "RE_CURRENT\030: \001(\005\022&\n\036HVAC_TEMPERATURE_DIS" +
      "PLAY_UNITS\030; \001(\005\022\034\n\024HVAC_TEMPERATURE_SET" +
      "\030< \001(\005\022)\n!HVAC_TEMPERATURE_VALUE_SUGGEST" +
      "ION\030= \001(\005\022\024\n\014HW_KEY_INPUT\030> \001(\005\022\026\n\016IGNIT" +
      "ION_STATE\030? \001(\005\022\030\n\020INFO_DRIVER_SEAT\030@ \001(" +
      "\005\022 \n\030INFO_EV_BATTERY_CAPACITY\030A \001(\005\022\036\n\026I" +
      "NFO_EV_CONNECTOR_TYPE\030B \001(\005\022\035\n\025INFO_EV_P" +
      "ORT_LOCATION\030C \001(\005\022 \n\030INFO_EXTERIOR_DIME" +
      "NSIONS\030D \001(\005\022\032\n\022INFO_FUEL_CAPACITY\030E \001(\005" +
      "\022\037\n\027INFO_FUEL_DOOR_LOCATION\030F \001(\005\022\026\n\016INF" +
      "O_FUEL_TYPE\030G \001(\005\022\021\n\tINFO_MAKE\030H \001(\005\022\022\n\n" +
      "INFO_MODEL\030I \001(\005\022\027\n\017INFO_MODEL_YEAR\030J \001(" +
      "\005\022$\n\034INFO_MULTI_EV_PORT_LOCATIONS\030K \001(\005\022" +
      "\020\n\010INFO_VIN\030L \001(\005\022\017\n\007INVALID\030M \001(\005\022\023\n\013MI" +
      "RROR_FOLD\030N \001(\005\022\023\n\013MIRROR_LOCK\030O \001(\005\022\025\n\r" +
      "MIRROR_Y_MOVE\030P \001(\005\022\024\n\014MIRROR_Y_POS\030Q \001(" +
      "\005\022\025\n\rMIRROR_Z_MOVE\030R \001(\005\022\024\n\014MIRROR_Z_POS" +
      "\030S \001(\005\022\022\n\nNIGHT_MODE\030T \001(\005\022\031\n\021OBD2_FREEZ" +
      "E_FRAME\030U \001(\005\022\037\n\027OBD2_FREEZE_FRAME_CLEAR" +
      "\030V \001(\005\022\036\n\026OBD2_FREEZE_FRAME_INFO\030W \001(\005\022\027" +
      "\n\017OBD2_LIVE_FRAME\030X \001(\005\022 \n\030PARKING_BRAKE" +
      "_AUTO_APPLY\030Y \001(\005\022\030\n\020PARKING_BRAKE_ON\030Z " +
      "\001(\005\022\025\n\rPERF_ODOMETER\030[ \001(\005\022 \n\030PERF_REAR_" +
      "STEERING_ANGLE\030\\ \001(\005\022\033\n\023PERF_STEERING_AN" +
      "GLE\030] \001(\005\022\032\n\022PERF_VEHICLE_SPEED\030^ \001(\005\022\"\n" +
      "\032PERF_VEHICLE_SPEED_DISPLAY\030_ \001(\005\022\027\n\017RAN" +
      "GE_REMAINING\030` \001(\005\022\034\n\024READING_LIGHTS_STA" +
      "TE\030a \001(\005\022\035\n\025READING_LIGHTS_SWITCH\030b \001(\005\022" +
      "\"\n\032SEAT_BACKREST_ANGLE_1_MOVE\030c \001(\005\022!\n\031S" +
      "EAT_BACKREST_ANGLE_1_POS\030d \001(\005\022\"\n\032SEAT_B" +
      "ACKREST_ANGLE_2_MOVE\030e \001(\005\022!\n\031SEAT_BACKR" +
      "EST_ANGLE_2_POS\030f \001(\005\022\031\n\021SEAT_BELT_BUCKL" +
      "ED\030g \001(\005\022\035\n\025SEAT_BELT_HEIGHT_MOVE\030h \001(\005\022" +
      "\034\n\024SEAT_BELT_HEIGHT_POS\030i \001(\005\022\027\n\017SEAT_DE" +
      "PTH_MOVE\030j \001(\005\022\026\n\016SEAT_DEPTH_POS\030k \001(\005\022\032" +
      "\n\022SEAT_FORE_AFT_MOVE\030l \001(\005\022\031\n\021SEAT_FORE_" +
      "AFT_POS\030m \001(\005\022 \n\030SEAT_HEADREST_ANGLE_MOV" +
      "E\030n \001(\005\022\037\n\027SEAT_HEADREST_ANGLE_POS\030o \001(\005" +
      "\022#\n\033SEAT_HEADREST_FORE_AFT_MOVE\030p \001(\005\022\"\n" +
      "\032SEAT_HEADREST_FORE_AFT_POS\030q \001(\005\022!\n\031SEA" +
      "T_HEADREST_HEIGHT_MOVE\030r \001(\005\022 \n\030SEAT_HEA" +
      "DREST_HEIGHT_POS\030s \001(\005\022\030\n\020SEAT_HEIGHT_MO" +
      "VE\030t \001(\005\022\027\n\017SEAT_HEIGHT_POS\030u \001(\005\022!\n\031SEA" +
      "T_LUMBAR_FORE_AFT_MOVE\030v \001(\005\022 \n\030SEAT_LUM" +
      "BAR_FORE_AFT_POS\030w \001(\005\022%\n\035SEAT_LUMBAR_SI" +
      "DE_SUPPORT_MOVE\030x \001(\005\022$\n\034SEAT_LUMBAR_SID" +
      "E_SUPPORT_POS\030y \001(\005\022\032\n\022SEAT_MEMORY_SELEC" +
      "T\030z \001(\005\022\027\n\017SEAT_MEMORY_SET\030{ \001(\005\022\026\n\016SEAT" +
      "_OCCUPANCY\030| \001(\005\022\026\n\016SEAT_TILT_MOVE\030} \001(\005" +
      "\022\025\n\rSEAT_TILT_POS\030~ \001(\005\022\'\n\037STORAGE_ENCRY" +
      "PTION_BINDING_SEED\030\177 \001(\005\022\026\n\rTIRE_PRESSUR" +
      "E\030\200\001 \001(\005\022$\n\033TIRE_PRESSURE_DISPLAY_UNITS\030" +
      "\201\001 \001(\005\022 \n\027TRACTION_CONTROL_ACTIVE\030\202\001 \001(\005" +
      "\022\032\n\021TURN_SIGNAL_STATE\030\203\001 \001(\005\022\034\n\023VEHICLE_" +
      "MAP_SERVICE\030\204\001 \001(\005\022\023\n\nWHEEL_TICK\030\205\001 \001(\005\022" +
      "\024\n\013WINDOW_LOCK\030\206\001 \001(\005\022\024\n\013WINDOW_MOVE\030\207\001 " +
      "\001(\005\022\023\n\nWINDOW_POS\030\210\001 \001(\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_VehicleData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_VehicleData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VehicleData_descriptor,
        new java.lang.String[] { "CategoryOne", "CategoryTwo", });
    internal_static_VehicleData_CategoryOneFields_descriptor =
      internal_static_VehicleData_descriptor.getNestedTypes().get(0);
    internal_static_VehicleData_CategoryOneFields_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VehicleData_CategoryOneFields_descriptor,
        new java.lang.String[] { "ENVOUTSIDETEMPERATURE", "ENGINERPM", "FUELLEVEL", });
    internal_static_VehicleData_CategoryTwoField_descriptor =
      internal_static_VehicleData_descriptor.getNestedTypes().get(1);
    internal_static_VehicleData_CategoryTwoField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VehicleData_CategoryTwoField_descriptor,
        new java.lang.String[] { "Timestamp", "Value", });
    internal_static_VehicleData_CategoryOne_descriptor =
      internal_static_VehicleData_descriptor.getNestedTypes().get(2);
    internal_static_VehicleData_CategoryOne_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VehicleData_CategoryOne_descriptor,
        new java.lang.String[] { "Timestamp", "Fields", });
    internal_static_VehicleData_CategoryTwo_descriptor =
      internal_static_VehicleData_descriptor.getNestedTypes().get(3);
    internal_static_VehicleData_CategoryTwo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VehicleData_CategoryTwo_descriptor,
        new java.lang.String[] { "IGNITIONSTATE", "HEADLIGHTSSTATE", });
    internal_static_AllFields_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_AllFields_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AllFields_descriptor,
        new java.lang.String[] { "ABSACTIVE", "APPOWERBOOTUPREASON", "APPOWERSTATEREPORT", "APPOWERSTATEREQ", "CABINLIGHTSSTATE", "CABINLIGHTSSWITCH", "CRITICALLYLOWTIREPRESSURE", "CURRENTGEAR", "DISPLAYBRIGHTNESS", "DISTANCEDISPLAYUNITS", "DOORLOCK", "DOORMOVE", "DOORPOS", "ELECTRONICTOLLCOLLECTIONCARDSTATUS", "ELECTRONICTOLLCOLLECTIONCARDTYPE", "ENGINECOOLANTTEMP", "ENGINEOILLEVEL", "ENGINEOILTEMP", "ENGINERPM", "ENVOUTSIDETEMPERATURE", "EPOCHTIME", "EVBATTERYDISPLAYUNITS", "EVBATTERYINSTANTANEOUSCHARGERATE", "EVBATTERYLEVEL", "EVCHARGEPORTCONNECTED", "EVCHARGEPORTOPEN", "FOGLIGHTSSTATE", "FOGLIGHTSSWITCH", "FUELCONSUMPTIONUNITSDISTANCEOVERVOLUME", "FUELDOOROPEN", "FUELLEVEL", "FUELLEVELLOW", "FUELVOLUMEDISPLAYUNITS", "GEARSELECTION", "HAZARDLIGHTSSTATE", "HAZARDLIGHTSSWITCH", "HEADLIGHTSSTATE", "HEADLIGHTSSWITCH", "HIGHBEAMLIGHTSSTATE", "HIGHBEAMLIGHTSSWITCH", "HVACACTUALFANSPEEDRPM", "HVACACON", "HVACAUTOON", "HVACAUTORECIRCON", "HVACDEFROSTER", "HVACDUALON", "HVACFANDIRECTION", "HVACFANDIRECTIONAVAILABLE", "HVACFANSPEED", "HVACMAXACON", "HVACMAXDEFROSTON", "HVACPOWERON", "HVACRECIRCON", "HVACSEATTEMPERATURE", "HVACSEATVENTILATION", "HVACSIDEMIRRORHEAT", "HVACSTEERINGWHEELHEAT", "HVACTEMPERATURECURRENT", "HVACTEMPERATUREDISPLAYUNITS", "HVACTEMPERATURESET", "HVACTEMPERATUREVALUESUGGESTION", "HWKEYINPUT", "IGNITIONSTATE", "INFODRIVERSEAT", "INFOEVBATTERYCAPACITY", "INFOEVCONNECTORTYPE", "INFOEVPORTLOCATION", "INFOEXTERIORDIMENSIONS", "INFOFUELCAPACITY", "INFOFUELDOORLOCATION", "INFOFUELTYPE", "INFOMAKE", "INFOMODEL", "INFOMODELYEAR", "INFOMULTIEVPORTLOCATIONS", "INFOVIN", "INVALID", "MIRRORFOLD", "MIRRORLOCK", "MIRRORYMOVE", "MIRRORYPOS", "MIRRORZMOVE", "MIRRORZPOS", "NIGHTMODE", "OBD2FREEZEFRAME", "OBD2FREEZEFRAMECLEAR", "OBD2FREEZEFRAMEINFO", "OBD2LIVEFRAME", "PARKINGBRAKEAUTOAPPLY", "PARKINGBRAKEON", "PERFODOMETER", "PERFREARSTEERINGANGLE", "PERFSTEERINGANGLE", "PERFVEHICLESPEED", "PERFVEHICLESPEEDDISPLAY", "RANGEREMAINING", "READINGLIGHTSSTATE", "READINGLIGHTSSWITCH", "SEATBACKRESTANGLE1MOVE", "SEATBACKRESTANGLE1POS", "SEATBACKRESTANGLE2MOVE", "SEATBACKRESTANGLE2POS", "SEATBELTBUCKLED", "SEATBELTHEIGHTMOVE", "SEATBELTHEIGHTPOS", "SEATDEPTHMOVE", "SEATDEPTHPOS", "SEATFOREAFTMOVE", "SEATFOREAFTPOS", "SEATHEADRESTANGLEMOVE", "SEATHEADRESTANGLEPOS", "SEATHEADRESTFOREAFTMOVE", "SEATHEADRESTFOREAFTPOS", "SEATHEADRESTHEIGHTMOVE", "SEATHEADRESTHEIGHTPOS", "SEATHEIGHTMOVE", "SEATHEIGHTPOS", "SEATLUMBARFOREAFTMOVE", "SEATLUMBARFOREAFTPOS", "SEATLUMBARSIDESUPPORTMOVE", "SEATLUMBARSIDESUPPORTPOS", "SEATMEMORYSELECT", "SEATMEMORYSET", "SEATOCCUPANCY", "SEATTILTMOVE", "SEATTILTPOS", "STORAGEENCRYPTIONBINDINGSEED", "TIREPRESSURE", "TIREPRESSUREDISPLAYUNITS", "TRACTIONCONTROLACTIVE", "TURNSIGNALSTATE", "VEHICLEMAPSERVICE", "WHEELTICK", "WINDOWLOCK", "WINDOWMOVE", "WINDOWPOS", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
